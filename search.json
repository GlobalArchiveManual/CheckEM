[{"path":[]},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"introduction-1","dir":"Articles > R-workflows","previous_headings":"","what":"Introduction","title":"Check fish data from single point based methods","text":"script take fish annotation data single point based methods (e.g. stereo-BRUVs stereo-BOSS), either exported EventMeasure “Generic” format (see format requirements ), check errors annotation. script format annotation data tidy format. also need formatted sample metadata file “*_Metadata.csv” (see format requirements )","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"r-set-up","dir":"Articles > R-workflows","previous_headings":"","what":"R set up","title":"Check fish data from single point based methods","text":"First need load necessary libraries. haven’t installed CheckEM need install CheckEM using install_github function. Next set study name. can name like, files saved using script prefixed name. Avoid name long. recommend using short project name includes method e.g. “2020_ningaloo_stereo-BRUVs”.","code":"library(devtools) # devtools::install_github(\"GlobalArchiveManual/CheckEM\") # Use this to install the CheckEM package if you have not already done so library(CheckEM) library(tidyverse) library(googlesheets4) library(sf) library(terra) library(here) name <- \"example-bruv-workflow\""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"metadata","dir":"Articles > R-workflows","previous_headings":"","what":"Metadata","title":"Check fish data from single point based methods","text":"Now load tidy metadata. already completed step checking habitat data, can skip next two chunks code simply read metadata (see ). Save metadata R data file (creates lighter file saving .csv similar, also maintains column formatting). already exported ‘check-habitat’ script load metadata. just loaded saved metadata, can skip chunk code.","code":"metadata <- read_metadata(here::here(\"r-workflows/data/raw/\"), method = \"BRUVs\") %>% # Change here to \"DOVs\"   dplyr::select(campaignid, sample, status, longitude_dd, latitude_dd, date_time, location, site, depth_m, successful_count, successful_length, successful_habitat_forward, successful_habitat_backward) %>%   glimpse() ## reading metadata file: /home/runner/work/CheckEM/CheckEM/r-workflows/data/raw//2022-05_PtCloates_stereo-BRUVS_metadata.csv ## reading metadata file: /home/runner/work/CheckEM/CheckEM/r-workflows/data/raw//2023-03_SwC_stereo-BRUVs_Metadata.csv ## Rows: 94 ## Columns: 13 ## $ campaignid                  <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05… ## $ sample                      <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9… ## $ status                      <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\"… ## $ longitude_dd                <chr> \"113.5447\", \"113.5628\", \"113.5515\", \"113.5… ## $ latitude_dd                 <chr> \"-22.7221\", \"-22.6957\", \"-22.7379\", \"-22.7… ## $ date_time                   <chr> \"2022-05-22T10:03:24+08:00\", \"2022-05-22T1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"93.9\", \"77.3\", \"78.3\", \"73.9\", \"81.9\", \"7… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ successful_habitat_backward <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… saveRDS(metadata, file = here::here(paste0(\"r-workflows/data/tidy/\",                                 name, \"_Metadata.rds\"))) metadata <- readRDS(here::here(paste0(\"r-workflows/data/tidy/\",                                 name, \"_Metadata.rds\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"marine-parks","dir":"Articles > R-workflows","previous_headings":"Metadata","what":"Marine Parks","title":"Check fish data from single point based methods","text":"Load marine park shape files, extract fishing status (e.g. ‘Fished’ ‘-take’) use modelling. data set used 2022 Collaborative Australian Protected Areas Database, can download free . may change shape file suitable data set available study area.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"note-you-should-only-use-this-code-if-the-status-column-is-not-filled-out","dir":"Articles > R-workflows","previous_headings":"Metadata > Marine Parks","what":"NOTE: You should only use this code if the Status column is not filled out","title":"Check fish data from single point based methods","text":"","code":"marine_parks <- st_read(here::here(\"r-workflows/data/spatial/shapefiles/Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine.shp\"))  %>%   dplyr::select(geometry, ZONE_TYPE) %>%   st_transform(4326) %>%   st_make_valid() ## Reading layer `Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine' from data source `/home/runner/work/CheckEM/CheckEM/r-workflows/data/spatial/shapefiles/Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 3775 features and 26 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: 70.71702 ymin: -58.44947 xmax: 170.3667 ymax: -8.473407 ## Geodetic CRS:  WGS 84 metadata_sf <- st_as_sf(metadata, coords = c(\"longitude_dd\", \"latitude_dd\"), crs = 4326)  # metadata <- metadata_sf %>% #   st_join(marine_parks) %>% #   bind_cols(st_coordinates(.)) %>% #   as.data.frame() %>% #   dplyr::select(-c(geometry)) %>% #   dplyr::rename(longitude_dd = X, latitude_dd = Y) %>% #   dplyr::mutate(status = if_else(str_detect(ZONE_TYPE, \"National|Sanctuary\"), #                                 \"No-take\", \"Fished\")) %>% #   tidyr::replace_na(list(status = \"Fished\")) %>% #   clean_names() %>% #   dplyr::glimpse()"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"find-nearest-marine-region","dir":"Articles > R-workflows","previous_headings":"Metadata","what":"Find nearest Marine Region","title":"Check fish data from single point based methods","text":"Now need find nearest marine region sample metadata. can use life history lists find species observed marine region .","code":"metadata_sf <- st_as_sf(metadata, coords = c(\"longitude_dd\", \"latitude_dd\"), crs = 4326) regions <- st_as_sf(CheckEM::aus_regions, crs = st_crs(4326)) ## Loading required package: sp regions <- st_transform(regions, 4326) %>%   dplyr::select(REGION)  metadata <- st_join(metadata_sf, regions, join = st_nearest_feature) %>%   dplyr::rename(marine_region = REGION) %>%   dplyr::mutate(sample = as.character(sample)) %>%   as.data.frame() %>%   dplyr::select(-c(geometry)) %>%   glimpse() ## Rows: 94 ## Columns: 12 ## $ campaignid                  <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05… ## $ sample                      <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9… ## $ status                      <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\"… ## $ date_time                   <chr> \"2022-05-22T10:03:24+08:00\", \"2022-05-22T1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"93.9\", \"77.3\", \"78.3\", \"73.9\", \"81.9\", \"7… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ successful_habitat_backward <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ marine_region               <chr> \"North-west\", \"North-west\", \"North-west\", …"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"fish-annotation-data","dir":"Articles > R-workflows","previous_headings":"","what":"Fish annotation data","title":"Check fish data from single point based methods","text":"two types fish annotation data formats can check format using script: EventMeasure database outputs Generic files. EventMeasure database outputs need export database outputs using EventMeasure software .EMObs files. give ’_Points.txt’, ’_Lengths.txt’ ’_3DPoints.txt’ files. Generic data much simpler format allows users haven’t used EventMeasure format QC annotation data. need _Count.csv file _Length.csv file. information format files please see CheckEM user guide recommend using EventMeasure database outputs available date. checks possible EventMeasure data Generic data. Note: used EventMeasure software annotate samples made corrections exported data (e.g. Excel), corrected data now true copy data import data Generic annotation files (e.g. count length).","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"load-any-eventmeasure-points-txt-files","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Load any EventMeasure Points.txt files","title":"Check fish data from single point based methods","text":"section code read Points.txt files saved directory set. combine files one data-frame, get campaignid name name file. important consistently name files campaignid (look different separators e.g. ‘-’, ’_‘, ’.’)","code":"points <- read_points(here::here(\"r-workflows/data/raw/\")) %>%   glimpse() ## Rows: 17,425 ## Columns: 23 ## $ opcode      <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\"… ## $ pointindex  <chr> \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"1… ## $ filename    <chr> \"Left_MAH00355.MP4\", \"Left_MAH00355.MP4\", \"Left_MAH00355.M… ## $ frame       <chr> \"11347\", \"11403\", \"11403\", \"11473\", \"11473\", \"11473\", \"127… ## $ time        <chr> \"25.71152\", \"25.72709\", \"25.72709\", \"25.74655\", \"25.74655\"… ## $ period      <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"… ## $ periodtime  <chr> \"0.33422\", \"0.34979\", \"0.34979\", \"0.36926\", \"0.36926\", \"0.… ## $ imagecol    <chr> \"463.20000\", \"474.00000\", \"1495.20000\", \"1562.40000\", \"157… ## $ imagerow    <chr> \"669.60000\", \"655.20000\", \"541.20000\", \"543.60000\", \"571.2… ## $ rectwidth   <chr> \"0.00000\", \"0.00000\", \"0.00000\", \"0.00000\", \"0.00000\", \"0.… ## $ rectheight  <chr> \"0.00000\", \"0.00000\", \"0.00000\", \"0.00000\", \"0.00000\", \"0.… ## $ family      <chr> \"Labridae\", \"Labridae\", \"Labridae\", \"Labridae\", \"Labridae\"… ## $ genus       <chr> \"Ophthalmolepis\", \"Ophthalmolepis\", \"Ophthalmolepis\", \"Pse… ## $ species     <chr> \"lineolata\", \"lineolata\", \"lineolata\", \"biserialis\", \"bise… ## $ code        <chr> \"37384040\", \"37384040\", \"37384040\", \"37384149\", \"37384149\"… ## $ number      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ## $ stage       <chr> \"AD\", \"AD\", \"AD\", \"AD\", \"AD\", \"AD\", \"AD\", \"AD\", \"AD\", \"AD\"… ## $ activity    <chr> \"Passing\", \"Passing\", \"Passing\", \"Passing\", \"Passing\", \"Pa… ## $ comment     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ attribute9  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ attribute10 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ campaignid  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"2… ## $ sample      <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\"…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"load-any-generic-count-files","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Load any Generic count files","title":"Check fish data from single point based methods","text":"section code read Count.csv files saved directory set. combine files one data frame, get campaignid name name file. important consistently name files campaignid (look different separators e.g. ‘-’, ’_‘, ’.’)","code":"counts <- read_counts(here::here(\"r-workflows/data/raw/\")) %>%   glimpse() ## reading count file: /home/runner/work/CheckEM/CheckEM/r-workflows/data/raw//2022-05_PtCloates_stereo-BRUVS_count.csv ## file is a csv ## Rows: 802 ## Columns: 7 ## $ campaignid <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05_PtCloates_stereo… ## $ opcode     <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"2\",… ## $ family     <chr> \"Balistidae\", \"Carangidae\", \"Carangidae\", \"Lethrinidae\", \"L… ## $ genus      <chr> \"Abalistes\", \"Decapterus\", \"Turrum\", \"Gymnocranius\", \"Lethr… ## $ species    <chr> \"filamentosus\", \"spp\", \"fulvoguttatum\", \"sp1\", \"rubriopercu… ## $ count      <dbl> 3, 4, 18, 2, 1, 9, 3, 2, 20, 1, 1, 4, 1, 1, 2, 2, 1, 2, 1, … ## $ sample     <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"2\",…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"combine-eventmeasure-and-generic-count-together","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Combine EventMeasure and Generic count together","title":"Check fish data from single point based methods","text":"Create tidy MaxN file.","code":"# Only run this if there is data in the counts data frame if(nrow(points) > 1){   maxn_points <- points %>%      dplyr::group_by(campaignid, sample, filename, periodtime, frame, family, genus, species) %>% # If you have MaxN'd by stage (e.g. Adult, Juvenile) add stage here     dplyr::mutate(number = as.numeric(number)) %>%     dplyr::summarise(maxn = sum(number)) %>%     dplyr::ungroup() %>%     dplyr::group_by(campaignid, sample, family, genus, species) %>%     dplyr::slice(which.max(maxn)) %>%     dplyr::ungroup() %>%     dplyr::filter(!is.na(maxn)) %>%     dplyr::select(-frame) %>%     tidyr::replace_na(list(maxn = 0)) %>%     dplyr::mutate(maxn = as.numeric(maxn)) %>%     dplyr::filter(maxn > 0) %>%     dplyr::inner_join(metadata, by = join_by(campaignid, sample)) %>%     dplyr::filter(successful_count %in% c(\"Yes\")) %>%      dplyr::filter(maxn > 0) %>%     dplyr::select(campaignid, sample, family, genus, species, maxn) %>%     dplyr::glimpse() } ## `summarise()` has grouped output by 'campaignid', 'sample', 'filename', ## 'periodtime', 'frame', 'family', 'genus'. You can override using the `.groups` ## argument. ## Rows: 462 ## Columns: 6 ## $ campaignid <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"20… ## $ sample     <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\",… ## $ family     <chr> \"Dasyatidae\", \"Gerreidae\", \"Heterodontidae\", \"Labridae\", \"L… ## $ genus      <chr> \"Dasyatis\", \"Parequula\", \"Heterodontus\", \"Austrolabrus\", \"C… ## $ species    <chr> \"brevicaudata\", \"melbournensis\", \"portusjacksoni\", \"maculat… ## $ maxn       <dbl> 1, 1, 1, 1, 71, 9, 8, 1, 5, 2, 9, 1, 1, 2, 2, 1, 5, 12, 3, … # Only run this if there is data in the counts data frame if(nrow(counts) > 1){   maxn_counts <- counts %>%     dplyr::group_by(campaignid, sample, family, genus, species) %>%     dplyr::mutate(number = as.numeric(count)) %>%     dplyr::summarise(maxn = sum(number)) %>%     dplyr::ungroup() %>%     dplyr::group_by(campaignid, sample, family, genus, species) %>%     dplyr::slice(which.max(maxn)) %>%     dplyr::ungroup() %>%     dplyr::filter(!is.na(maxn)) %>%     tidyr::replace_na(list(maxn = 0)) %>%     dplyr::mutate(maxn = as.numeric(maxn)) %>%     dplyr::filter(maxn > 0) %>%     dplyr::inner_join(metadata, by = join_by(campaignid, sample)) %>%     dplyr::filter(successful_count %in% c(\"Yes\")) %>%     dplyr::filter(maxn > 0) %>%     dplyr::select(campaignid, sample, family, genus, species, maxn) %>%     dplyr::glimpse() } ## `summarise()` has grouped output by 'campaignid', 'sample', 'family', 'genus'. ## You can override using the `.groups` argument. ## Rows: 802 ## Columns: 6 ## $ campaignid <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05_PtCloates_stereo… ## $ sample     <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"11\", \"11\", \"11\", \"… ## $ family     <chr> \"Balistidae\", \"Carangidae\", \"Carangidae\", \"Lethrinidae\", \"L… ## $ genus      <chr> \"Abalistes\", \"Decapterus\", \"Turrum\", \"Gymnocranius\", \"Lethr… ## $ species    <chr> \"filamentosus\", \"spp\", \"fulvoguttatum\", \"sp1\", \"rubriopercu… ## $ maxn       <dbl> 3, 4, 18, 2, 1, 9, 3, 2, 2, 1, 6, 3, 1, 3, 1, 2, 1, 1, 1, 1… # If only EventMeasure data then MaxN only includes Points data # If only Generic data then MaxN only includes Count data # If both exist, then MaxN includes both Points and Count data maxn <- bind_rows(get0(\"maxn_points\"), get0(\"maxn_counts\")) # this works even if you only have one type of data"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"load-any-eventmeasure-lengths-txt-andor-3dpoints-txt-files","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Load any EventMeasure Lengths.txt and/or 3DPoints.txt files","title":"Check fish data from single point based methods","text":"section code read Lengths.txt /3DPoints.txt files saved directory set. combine files one data-frame, get campaignid name name file. important consistently name files campaignid (look different separators e.g. ‘-’, ’_‘, ’.’)","code":"em_length3dpoints <- read_em_length(here::here(\"r-workflows/data/raw/\")) %>%                      dplyr::select(-c(comment))%>% # there is a comment column in metadata, so you will need to remove this column from EM data   dplyr::inner_join(metadata, by = join_by(sample, campaignid)) %>%   dplyr::filter(successful_length %in% \"Yes\") %>%   # dplyr::rename(length_mm = length) %>%   glimpse() ## Rows: 2,428 ## Columns: 46 ## $ opcode                      <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"12\", \"12\", … ## $ imageptpair                 <chr> \"72\", \"73\", \"75\", \"81\", \"93\", \"0\", \"11\", \"… ## $ filenameleft                <chr> \"Left_MAH00355.MP4\", \"Left_MAH00355.MP4\", … ## $ frameleft                   <chr> \"65608\", \"74525\", \"21436\", \"33446\", \"46833… ## $ filenameright               <chr> \"Right_MAH00344.MP4\", \"Right_MAH00344.MP4\"… ## $ frameright                  <chr> \"64140\", \"73057\", \"20028\", \"32038\", \"45425… ## $ time                        <chr> \"40.79909\", \"43.27851\", \"51.07269\", \"54.41… ## $ period                      <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1… ## $ periodtime                  <chr> \"15.42180\", \"17.90122\", \"25.69539\", \"29.03… ## $ x                           <dbl> -430.67367, -278.33750, -997.34125, -187.9… ## $ y                           <dbl> -140.98709, -257.03677, -186.86483, -238.3… ## $ z                           <dbl> -868.5349, -762.9243, -1522.4532, -730.307… ## $ sx                          <chr> \"0.64880\", \"0.48001\", \"1.91708\", \"0.42177\"… ## $ sy                          <chr> \"0.46100\", \"0.47613\", \"0.79836\", \"0.44960\"… ## $ sz                          <chr> \"1.11439\", \"0.88751\", \"3.13793\", \"0.83996\"… ## $ rms                         <dbl> 0.67020, 0.47105, 0.63932, 0.10770, 0.3492… ## $ range                       <dbl> 979.6479, 851.8175, 1829.6098, 790.8665, 9… ## $ direction                   <chr> \"27.65589\", \"26.62953\", \"33.74391\", \"22.82… ## $ family                      <chr> \"Labridae\", \"Urolophidae\", \"Labridae\", \"Tr… ## $ genus                       <chr> \"Austrolabrus\", \"Trygonoptera\", \"Ophthalmo… ## $ species                     <chr> \"maculatus\", \"ovalis\", \"lineolata\", \"dumer… ## $ code                        <chr> \"37384025\", \"37038016\", \"37384040\", \"37027… ## $ number                      <dbl> 1, 1, 1, 1, 1, 40, 1, 1, 1, 1, 1, 1, 1, 1,… ## $ stage                       <chr> \"AD\", \"AD\", \"AD\", \"AD\", \"AD\", \"AD\", \"AD\", … ## $ activity                    <chr> \"Passing\", \"Passing\", \"Passing\", \"Passing\"… ## $ attribute9                  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ attribute10                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ length_mm                   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ precision                   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ horzdir                     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ vertdir                     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ midx                        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ midy                        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ midz                        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ sample                      <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"12\", \"12\", … ## $ status                      <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\"… ## $ date_time                   <chr> \"18/03/2023 2:44\", \"18/03/2023 2:44\", \"18/… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"44.3\", \"44.3\", \"44.3\", \"44.3\", \"44.3\", \"4… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ marine_region               <chr> \"South-west\", \"South-west\", \"South-west\", …"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"load-any-generic-length-files","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Load any Generic length files","title":"Check fish data from single point based methods","text":"section code read Length.csv files saved directory set. combine files one data frame, get campaignid name name file. important consistently name files campaignid (look different separators e.g. ‘-’, ’’, ‘.’)","code":"gen_length <- read_gen_length(here::here(\"r-workflows/data/raw/\")) %>%                      dplyr::full_join(metadata, by = join_by(campaignid, sample)) %>%   dplyr::filter(successful_length %in% \"Yes\") %>%   glimpse() ## reading length file: /home/runner/work/CheckEM/CheckEM/r-workflows/data/raw//2022-05_PtCloates_stereo-BRUVS_length.csv ## file is a csv ## Rows: 2,162 ## Columns: 22 ## $ campaignid                  <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05… ## $ opcode                      <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1… ## $ family                      <chr> \"Balistidae\", \"Balistidae\", \"Balistidae\", … ## $ genus                       <chr> \"Abalistes\", \"Abalistes\", \"Abalistes\", \"De… ## $ species                     <chr> \"filamentosus\", \"filamentosus\", \"filamento… ## $ length_mm                   <dbl> 336.7789, 324.9078, 281.1703, 310.8369, 33… ## $ number                      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ range                       <dbl> 3775.308, 3918.720, 2559.820, 3356.762, 35… ## $ rms                         <dbl> 11.10507, 14.14936, 7.13303, 16.32680, 15.… ## $ precision                   <dbl> 21.13063, 9.07687, 5.16125, 13.59407, 18.2… ## $ code                        <chr> \"37465089\", \"37465089\", \"37465089\", NA, NA… ## $ sample                      <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1… ## $ status                      <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\"… ## $ date_time                   <chr> \"2022-05-22T10:03:24+08:00\", \"2022-05-22T1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"93.9\", \"93.9\", \"93.9\", \"93.9\", \"93.9\", \"9… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ successful_habitat_backward <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ marine_region               <chr> \"North-west\", \"North-west\", \"North-west\", …"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"combine-eventmeasure-and-generic-length-data","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Combine EventMeasure and Generic length data","title":"Check fish data from single point based methods","text":"","code":"# If only EventMeasure data then length only includes Length and 3D points data # If only Generic data then length only includes generic length data # If both exist, then length includes both Length and 3D points and generic length data length <- bind_rows(get0(\"em_length3dpoints\"), get0(\"gen_length\")) # this works even if you only have one type of data"},{"path":[]},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"in-the-count-data","dir":"Articles > R-workflows","previous_headings":"Fish annotation data > Format and add zeros where a species isn’t present","what":"In the count data","title":"Check fish data from single point based methods","text":"Tidy “complete” MaxN data (e.g. add zeros data species wasn’t observed). final data set row species every sample (deployment).","code":"count <- maxn %>%   dplyr::mutate(family = ifelse(family %in% c(\"NA\", \"NANA\", NA, \"unknown\", \"\", NULL, \" \", NA_character_), \"Unknown\", as.character(family))) %>%   dplyr::mutate(genus = ifelse(genus %in% c(\"NA\", \"NANA\", NA, \"unknown\", \"\", NULL, \" \", NA_character_), \"Unknown\", as.character(genus))) %>%   dplyr::mutate(species = ifelse(species %in% c(\"NA\", \"NANA\", NA, \"unknown\", \"\", NULL, \" \", NA_character_), \"spp\", as.character(species))) %>%   dplyr::select(campaignid, sample, family, genus, species, maxn) %>%   tidyr::complete(nesting(campaignid, sample), nesting(family, genus, species)) %>%   tidyr::replace_na(list(maxn = 0)) %>%   group_by(campaignid, sample, family, genus, species) %>%   dplyr::summarise(count = sum(maxn)) %>%   ungroup() %>%   mutate(scientific = paste(family, genus, species, sep = \" \"))%>%   dplyr::select(campaignid, sample, scientific, count)%>%   spread(scientific, count, fill = 0) ## `summarise()` has grouped output by 'campaignid', 'sample', 'family', 'genus'. ## You can override using the `.groups` argument. count_families <- maxn %>%   dplyr::mutate(scientific = paste(family, genus, species, sep = \" \")) %>%   filter(!(family %in% \"Unknown\")) %>%   dplyr::select(c(family, genus, species, scientific)) %>%   distinct()  complete_count <- count %>%   pivot_longer(names_to = \"scientific\", values_to = \"count\",                cols = 3:ncol(.)) %>%   inner_join(count_families, by = c(\"scientific\")) %>%   full_join(metadata)%>%   glimpse() ## Joining with `by = join_by(campaignid, sample)` ## Rows: 17,766 ## Columns: 17 ## $ campaignid                  <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05… ## $ sample                      <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1… ## $ scientific                  <chr> \"Acanthuridae Naso brachycentron\", \"Acanth… ## $ count                       <dbl> 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, … ## $ family                      <chr> \"Acanthuridae\", \"Acanthuridae\", \"Acanthuri… ## $ genus                       <chr> \"Naso\", \"Naso\", \"Naso\", \"Albula\", \"Aplodac… ## $ species                     <chr> \"brachycentron\", \"fageni\", \"hexacanthus\", … ## $ status                      <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\"… ## $ date_time                   <chr> \"2022-05-22T10:03:24+08:00\", \"2022-05-22T1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"93.9\", \"93.9\", \"93.9\", \"93.9\", \"93.9\", \"9… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ successful_habitat_backward <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ marine_region               <chr> \"North-west\", \"North-west\", \"North-west\", …"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"in-the-length-data","dir":"Articles > R-workflows","previous_headings":"Fish annotation data > Format and add zeros where a species isn’t present","what":"In the length data","title":"Check fish data from single point based methods","text":"Tidy complete length data (e.g. complete zeroes data). final data set row species every sample (deployment).","code":"complete_length <- length %>%   dplyr::mutate(family = ifelse(family %in% c(\"NA\", \"NANA\", NA, \"unknown\", \"\", NULL, \" \", NA_character_), \"Unknown\", as.character(family))) %>%   dplyr::mutate(genus = ifelse(genus %in% c(\"NA\", \"NANA\", NA, \"unknown\", \"\", NULL, \" \", NA_character_), \"Unknown\", as.character(genus))) %>%   dplyr::mutate(species = ifelse(species %in% c(\"NA\", \"NANA\", NA, \"unknown\", \"\", NULL, \" \", NA_character_), \"spp\", as.character(species))) %>%   dplyr::filter(!family %in% \"Unknown\")%>%   # First make one row for every length measurement   dplyr::mutate(number = as.numeric(number)) %>%   tidyr::uncount(number) %>%   dplyr::mutate(number = 1) %>%    # Add in missing samples   dplyr::right_join(metadata) %>%   dplyr::filter(successful_length %in% \"Yes\") %>%   # Complete the data (add in zeros for every species)   dplyr::select(campaignid, sample, family, genus, species, length_mm, number, any_of(c(\"range\", \"rms\", \"precision\"))) %>% # this will keep EM only columns   tidyr::complete(nesting(campaignid, sample), nesting(family, genus, species)) %>%   replace_na(list(number = 0)) %>%   ungroup() %>%   dplyr::filter(!is.na(number)) %>%   dplyr::mutate(length_mm = as.numeric(length_mm)) %>%   left_join(., metadata) %>%   glimpse() ## Joining with `by = join_by(campaignid, sample, status, date_time, location, ## site, depth_m, successful_count, successful_length, successful_habitat_forward, ## successful_habitat_backward, marine_region)` ## Joining with `by = join_by(campaignid, sample)` ## Rows: 23,119 ## Columns: 20 ## $ campaignid                  <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05… ## $ sample                      <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1… ## $ family                      <chr> \"Acanthuridae\", \"Acanthuridae\", \"Acanthuri… ## $ genus                       <chr> \"Naso\", \"Naso\", \"Naso\", \"Albula\", \"Aplodac… ## $ species                     <chr> \"brachycentron\", \"fageni\", \"hexacanthus\", … ## $ length_mm                   <dbl> NA, NA, NA, NA, NA, NA, NA, 336.7789, 324.… ## $ number                      <dbl> 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, … ## $ range                       <dbl> NA, NA, NA, NA, NA, NA, NA, 3775.308, 3918… ## $ rms                         <dbl> NA, NA, NA, NA, NA, NA, NA, 11.10507, 14.1… ## $ precision                   <dbl> NA, NA, NA, NA, NA, NA, NA, 21.13063, 9.07… ## $ status                      <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\"… ## $ date_time                   <chr> \"2022-05-22T10:03:24+08:00\", \"2022-05-22T1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"93.9\", \"93.9\", \"93.9\", \"93.9\", \"93.9\", \"9… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ successful_habitat_backward <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ marine_region               <chr> \"North-west\", \"North-west\", \"North-west\", …"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"quality-control-checks","dir":"Articles > R-workflows","previous_headings":"","what":"Quality Control Checks","title":"Check fish data from single point based methods","text":"Now -tidy data can begin run checks.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"number-of-unique-samples-in-the-metadata","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of unique samples in the metadata","title":"Check fish data from single point based methods","text":"total number unique samples sample metadata (also number rows metadata data frame)","code":"number_of_samples <- metadata %>%   dplyr::distinct(campaignid, sample)  message(paste(nrow(number_of_samples), \"unique samples in the metadata\")) ## 94 unique samples in the metadata"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"check-for-duplicate-sample-names","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Check for duplicate sample names","title":"Check fish data from single point based methods","text":"duplicate samples within campaign displayed ","code":"duplicate_samples <- metadata %>%   dplyr::group_by(campaignid, sample) %>%   dplyr::summarise(n = n()) %>%   dplyr::ungroup() %>%   dplyr::filter(n > 1) ## `summarise()` has grouped output by 'campaignid'. You can override using the ## `.groups` argument. message(paste(nrow(duplicate_samples), \"samples duplicated in the metadata\")) ## 0 samples duplicated in the metadata"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"number-of-samples-without-points-or-count-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of sample(s) without points or count data","title":"Check fish data from single point based methods","text":"due samples observing fish (error) sample marked successful_count = .  also due sample name spelt incorrectly count/points sample metadata file.","code":"metadata_samples <- metadata %>%   dplyr::select(campaignid, sample, dplyr::any_of(c(\"opcode\", \"period\")),                  successful_count, successful_length) %>%   distinct()  samples <- maxn %>%   distinct(campaignid, sample)  missing_count <- anti_join(metadata_samples, samples, by = join_by(campaignid, sample))  message(paste(nrow(missing_count), \"samples in the metadata missing count data\")) ## 0 samples in the metadata missing count data"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"samples-in-the-count-data-missing-metadata","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Samples in the count data missing metadata","title":"Check fish data from single point based methods","text":"next chunk checks samples count data match sample metadata.","code":"missing_metadata <- anti_join(samples, metadata_samples, by = join_by(campaignid, sample)) message(paste(nrow(missing_metadata), \"samples in count data missing metadata\")) ## 0 samples in count data missing metadata"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"number-of-samples-without-length-or-3d-point-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of sample(s) without length or 3D point data","title":"Check fish data from single point based methods","text":"due samples observing fish (error) sample marked successful_length = .  also due sample name spelt incorrectly EMObs Length file sample metadata file.","code":"metadata_samples <- metadata %>%   dplyr::select(campaignid, sample, dplyr::any_of(c(\"opcode\", \"period\")),                  successful_count, successful_length) %>%   distinct()  samples <- length %>%   distinct(campaignid, sample)  missing_length <- anti_join(metadata_samples, samples, by = join_by(campaignid, sample))  message(paste(nrow(missing_length), \"samples in metadata missing length data\")) ## 0 samples in metadata missing length data"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"samples-in-the-length-data-missing-metadata","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Samples in the length data missing metadata","title":"Check fish data from single point based methods","text":"next chunk checks samples length data match sample metadata.","code":"missing_metadata <- anti_join(samples, metadata_samples, by = join_by(campaignid, sample))  message(paste(nrow(missing_metadata), \"samples in length data missing metadata\")) ## 0 samples in length data missing metadata"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"periods-without-an-end-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Periods without an end (EM only)","title":"Check fish data from single point based methods","text":"check important used periods define sampling duration. looks periods EMObs end time. important want check duration period.","code":"periods <- read_periods(here::here(\"r-workflows/data/raw/\")) %>%   glimpse() ## Rows: 32 ## Columns: 12 ## $ opcode        <chr> \"10\", \"12\", \"14\", \"15\", \"16\", \"17\", \"19\", \"2\", \"21\", \"22… ## $ periodindex   <chr> \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"… ## $ period        <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"… ## $ filenamestart <chr> \"Left_MAH00355.MP4\", \"L031_MAH01383.MP4\", \"L031_14_MAH01… ## $ framestart    <chr> \"10145\", \"3746\", \"24760\", \"76519\", \"67465\", \"71918\", \"46… ## $ time_start    <dbl> 25.37730, 23.59802, 29.42440, 21.27653, 18.75902, 19.997… ## $ filenameend   <chr> \"Left_MAH00357.MP4\", \"L031_MAH01385.MP4\", \"L031_14_MAH01… ## $ frameend      <chr> \"63748\", \"57409\", \"78422\", \"49060\", \"40006\", \"44459\", \"1… ## $ time_end      <dbl> 85.37724, 83.59796, 89.42433, 81.27647, 78.75896, 79.997… ## $ has_end       <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"… ## $ campaignid    <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", … ## $ sample        <chr> \"10\", \"12\", \"14\", \"15\", \"16\", \"17\", \"19\", \"2\", \"21\", \"22… periods_without_end <- periods %>%   dplyr::filter(has_end == 0)  message(paste(nrow(periods_without_end), \"periods without an end\")) ## 0 periods without an end glimpse(periods_without_end) ## Rows: 0 ## Columns: 12 ## $ opcode        <chr>  ## $ periodindex   <chr>  ## $ period        <chr>  ## $ filenamestart <chr>  ## $ framestart    <chr>  ## $ time_start    <dbl>  ## $ filenameend   <chr>  ## $ frameend      <chr>  ## $ time_end      <dbl>  ## $ has_end       <chr>  ## $ campaignid    <chr>  ## $ sample        <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"samples-without-periods-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Samples without periods (EM only)","title":"Check fish data from single point based methods","text":"check important used periods define sampling duration. can use find samples missing periods.","code":"metadata_samples <- metadata %>%   dplyr::select(campaignid, sample, dplyr::any_of(c(\"opcode\", \"period\")), successful_count, successful_length) %>%   dplyr::distinct() %>%   dplyr::mutate(sample = as.factor(sample))  periods_samples <- periods %>%   dplyr::select(campaignid, sample, dplyr::any_of(c(\"opcode\", \"period\"))) %>%   distinct()  missing_periods <- anti_join(metadata_samples, periods_samples) %>%   dplyr::select(!sample) ## Joining with `by = join_by(campaignid, sample)` message(paste(nrow(missing_periods), \"samples missing period\")) ## 62 samples missing period glimpse(missing_periods) ## Rows: 62 ## Columns: 3 ## $ campaignid        <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05_PtCloates… ## $ successful_count  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye… ## $ successful_length <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"points-outside-periods-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Points outside Periods (EM only)","title":"Check fish data from single point based methods","text":"check identifies points annotated outside period.","code":"points_outside_periods <- points %>%   dplyr::filter(period %in% c(\"NA\", NA, NULL, \"\")) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species, number, frame)  message(paste(nrow(points_outside_periods), \"points outside a period\")) ## 0 points outside a period glimpse(points_outside_periods) ## Rows: 0 ## Columns: 8 ## $ campaignid <chr>  ## $ opcode     <chr>  ## $ period     <chr>  ## $ family     <chr>  ## $ genus      <chr>  ## $ species    <chr>  ## $ number     <dbl>  ## $ frame      <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"length-measurements-or-3d-points-outside-periods-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Length measurement(s) or 3D point(s) outside periods (EM only)","title":"Check fish data from single point based methods","text":"check identifies length measurements 3D points annotated outside period.","code":"lengths_outside_periods <- em_length3dpoints %>%   dplyr::filter(period %in% c(\"NA\", NA, NULL, \"\")) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species, number)  message(paste(nrow(lengths_outside_periods), \"lengths/3D points outside period\")) ## 1 lengths/3D points outside period glimpse(lengths_outside_periods) ## Rows: 1 ## Columns: 7 ## $ campaignid <chr> \"2023-03_SwC_stereo-BRUVs\" ## $ opcode     <chr> \"32\" ## $ period     <chr> NA ## $ family     <chr> NA ## $ genus      <chr> NA ## $ species    <chr> NA ## $ number     <dbl> NA"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"periods-that-are-not-the-correct-duration-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Period(s) that are not the correct duration (EM only)","title":"Check fish data from single point based methods","text":"check define correct sampling duration (e.g. 60 minutes stereo-BRUVs) identify periods length.","code":"period_length <- 60 # in minutes  periods_wrong <- periods %>%         dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), time_start, time_end, has_end) %>%         dplyr::distinct() %>%         dplyr::mutate(period_time = round(time_end - time_start)) %>%         dplyr::filter(!period_time %in% period_length)  message(paste(nrow(periods_wrong), \"periods not\", period_length, \"minutes long\")) ## 1 periods not 60 minutes long glimpse(periods_wrong) ## Rows: 1 ## Columns: 7 ## $ campaignid  <chr> \"2023-03_SwC_stereo-BRUVs\" ## $ opcode      <chr> \"31\" ## $ period      <chr> \"1\" ## $ time_start  <dbl> 12.19858 ## $ time_end    <dbl> 65.25241 ## $ has_end     <chr> \"1\" ## $ period_time <dbl> 53"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"total-number-of-individuals-observed","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Total number of individuals observed","title":"Check fish data from single point based methods","text":"total number individuals observed count data: total number individuals observed length data:","code":"total_count <- sum(complete_count$count) message(paste(total_count, \"fish counted in the count data\")) ## 6411 fish counted in the count data total_length <- sum(complete_length$number) message(paste(total_length, \"fish counted in the length data\")) ## 6421 fish counted in the length data"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"points-without-a-number-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Points without a number (EM only)","title":"Check fish data from single point based methods","text":"check EventMeasure data. Sometimes analysts add points interest fish/sharks remove number summed total abundance metrics. check make sure fish species accidentally number deleted.","code":"points_without_number <- points %>%   filter(number %in% c(\"NA\", NA, 0, NULL, \"\", \" \"))  message(paste(nrow(points_without_number), \"points in the _Points.txt file that do not have a number\")) ## 11 points in the _Points.txt file that do not have a number glimpse(points_without_number) ## Rows: 11 ## Columns: 23 ## $ opcode      <chr> \"10\", \"10\", \"10\", \"21\", \"21\", \"21\", \"26\", \"26\", \"26\", \"34\"… ## $ pointindex  <chr> \"166\", \"485\", \"486\", \"238\", \"254\", \"256\", \"66\", \"67\", \"68\"… ## $ filename    <chr> \"Left_MAH00355.MP4\", \"Left_MAH00356.MP4\", \"Left_MAH00356.M… ## $ frame       <chr> \"17138\", \"31042\", \"31042\", \"32458\", \"35214\", \"45239\", \"311… ## $ time        <chr> \"27.32174\", \"53.74369\", \"53.74369\", \"54.10433\", \"54.87065\"… ## $ period      <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\" ## $ periodtime  <chr> \"1.94444\", \"28.36639\", \"28.36639\", \"24.85844\", \"25.62477\",… ## $ imagecol    <chr> \"1861.20000\", \"289.20000\", \"408.00000\", \"973.20000\", \"728.… ## $ imagerow    <chr> \"243.60000\", \"292.80000\", \"414.00000\", \"67.20000\", \"50.400… ## $ rectwidth   <chr> \"0.00000\", \"0.00000\", \"0.00000\", \"0.00000\", \"0.00000\", \"0.… ## $ rectheight  <chr> \"0.00000\", \"0.00000\", \"0.00000\", \"0.00000\", \"0.00000\", \"0.… ## $ family      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA ## $ genus       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA ## $ species     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA ## $ code        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA ## $ number      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA ## $ stage       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA ## $ activity    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA ## $ comment     <chr> \"squid\", \"squid\", \"squid\", \"Squid\", \"Squid\", \"Squid\", \"squ… ## $ attribute9  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA ## $ attribute10 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA ## $ campaignid  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"2… ## $ sample      <chr> \"10\", \"10\", \"10\", \"21\", \"21\", \"21\", \"26\", \"26\", \"26\", \"34\"…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"length-measurements-or-3d-points-without-a-number-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Length measurements or 3D points without a number (EM only)","title":"Check fish data from single point based methods","text":"check EventMeasure data. Sometimes analysts add 3D points record sync point. can remain data double check fish accidentally missing number.","code":"lengths_without_number <- em_length3dpoints %>%   filter(number %in% c(\"NA\", NA, 0, NULL, \"\", \" \"))  message(paste(nrow(lengths_without_number), \"lengths or 3D points in the EMObs that do not have a number\")) ## 1 lengths or 3D points in the EMObs that do not have a number glimpse(lengths_without_number) ## Rows: 1 ## Columns: 46 ## $ opcode                      <chr> \"32\" ## $ imageptpair                 <chr> \"0\" ## $ filenameleft                <chr> \"L039_MAH00349.MP4\" ## $ frameleft                   <chr> \"58009\" ## $ filenameright               <chr> \"R040_MAH00356.MP4\" ## $ frameright                  <chr> \"57032\" ## $ time                        <chr> \"16.12972\" ## $ period                      <chr> NA ## $ periodtime                  <chr> \"-1.00000\" ## $ x                           <dbl> 1.53837 ## $ y                           <dbl> -121.0145 ## $ z                           <dbl> -714.4317 ## $ sx                          <chr> \"0.38485\" ## $ sy                          <chr> \"0.38601\" ## $ sz                          <chr> \"0.84527\" ## $ rms                         <dbl> 0.01491 ## $ range                       <dbl> 724.6099 ## $ direction                   <chr> \"10.04716\" ## $ family                      <chr> NA ## $ genus                       <chr> NA ## $ species                     <chr> NA ## $ code                        <chr> NA ## $ number                      <dbl> NA ## $ stage                       <chr> NA ## $ activity                    <chr> NA ## $ attribute9                  <chr> NA ## $ attribute10                 <chr> NA ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\" ## $ length_mm                   <dbl> NA ## $ precision                   <dbl> NA ## $ horzdir                     <chr> NA ## $ vertdir                     <chr> NA ## $ midx                        <dbl> NA ## $ midy                        <dbl> NA ## $ midz                        <dbl> NA ## $ sample                      <chr> \"32\" ## $ status                      <chr> \"No-take\" ## $ date_time                   <chr> \"15/03/2023 0:23\" ## $ location                    <chr> NA ## $ site                        <chr> NA ## $ depth_m                     <chr> \"44.4\" ## $ successful_count            <chr> \"Yes\" ## $ successful_length           <chr> \"Yes\" ## $ successful_habitat_forward  <chr> \"Yes\" ## $ successful_habitat_backward <chr> \"Yes\" ## $ marine_region               <chr> \"South-west\""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"species-names-that-have-been-updated","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Species names that have been updated","title":"Check fish data from single point based methods","text":"Taxanomic advances means species names updated time, analysts sometimes spell species names incorrectly. check uses data-frame saved inside CheckEM package identifies species names updated spelt incorrectly. can choose like find synonyms using Australia specific list (CheckEM::aus_synonyms) Global list (ADD).","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"synonyms-in-the-count-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Species names that have been updated","what":"Synonyms in the count data","title":"Check fish data from single point based methods","text":"","code":"synonyms_in_count <- dplyr::left_join(complete_count, CheckEM::aus_synonyms) %>%       dplyr::filter(!is.na(genus_correct)) %>%       dplyr::mutate('old name' = paste(family, genus, species, sep = \" \")) %>%       dplyr::mutate('new name' = paste(family_correct, genus_correct, species_correct, sep = \" \")) %>%       dplyr::select('old name', 'new name') %>%       dplyr::distinct() ## Joining with `by = join_by(family, genus, species)` message(paste(nrow(synonyms_in_count), \"synonyms used in the count data\")) ## 12 synonyms used in the count data glimpse(synonyms_in_count) ## Rows: 12 ## Columns: 2 ## $ `old name` <chr> \"Carangidae Carangoides spp\", \"Dasyatidae Dasyatis brevicau… ## $ `new name` <chr> \"Carangidae Unknown spp\", \"Dasyatidae Bathytoshia brevicaud…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"synonyms-in-the-length-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Species names that have been updated","what":"Synonyms in the length data","title":"Check fish data from single point based methods","text":"","code":"synonyms_in_length <- dplyr::left_join(complete_length, CheckEM::aus_synonyms) %>%       dplyr::filter(!is.na(genus_correct)) %>%       dplyr::mutate('old name' = paste(family, genus, species, sep = \" \")) %>%       dplyr::mutate('new name' = paste(family_correct, genus_correct, species_correct, sep = \" \")) %>%       dplyr::select('old name', 'new name') %>%       dplyr::distinct() ## Joining with `by = join_by(family, genus, species)` message(paste(nrow(synonyms_in_length), \"synonyms used in the length data\")) ## 12 synonyms used in the length data glimpse(synonyms_in_length) ## Rows: 12 ## Columns: 2 ## $ `old name` <chr> \"Carangidae Carangoides spp\", \"Dasyatidae Dasyatis brevicau… ## $ `new name` <chr> \"Carangidae Unknown spp\", \"Dasyatidae Bathytoshia brevicaud…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"change-synonyms-names-in-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Species names that have been updated","what":"Change synonyms names in data","title":"Check fish data from single point based methods","text":"Now identified species names updated spelt wrong need decide want change names data continue using old names. want update names use next two chunks. like retain old names skip next two chunks. NOTE: change original annotation files, data save end script.","code":"complete_count <- dplyr::left_join(complete_count, CheckEM::aus_synonyms) %>%   dplyr::mutate(genus = ifelse(!genus_correct%in%c(NA), genus_correct, genus)) %>%   dplyr::mutate(species = ifelse(!is.na(species_correct), species_correct, species)) %>%   dplyr::mutate(family = ifelse(!is.na(family_correct), family_correct, family)) %>%   dplyr::select(-c(family_correct, genus_correct, species_correct)) %>%   dplyr::mutate(scientific = paste(family, genus, species)) ## Joining with `by = join_by(family, genus, species)` complete_length <- dplyr::left_join(complete_length, CheckEM::aus_synonyms) %>%   dplyr::mutate(genus = ifelse(!genus_correct%in%c(NA), genus_correct, genus)) %>%   dplyr::mutate(species = ifelse(!is.na(species_correct), species_correct, species)) %>%   dplyr::mutate(family = ifelse(!is.na(family_correct), family_correct, family)) %>%   dplyr::select(-c(family_correct, genus_correct, species_correct)) %>%   dplyr::mutate(scientific = paste(family, genus, species)) ## Joining with `by = join_by(family, genus, species)`"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"species-not-observed-in-the-region-before","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Species not observed in the region before","title":"Check fish data from single point based methods","text":"check use list species known geographical ranges check data identify species outside range. two life history data sets choose check species outside known geographical range. Australia Global lists. use Australia life history list use CheckEM::australia_life_history use Global life history list use CheckEM::global_life_history. run check count length data, sometimes species count length. species identified checks present chosen life-history list. Sometimes range data limited, possible species flagged check actually present area. need critically think species flagged check.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"species-out-of-range-in-the-count-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Species not observed in the region before","what":"Species out of range in the count data","title":"Check fish data from single point based methods","text":"Check species range count data.","code":"count_species_not_observed_region <- complete_count %>%   dplyr::distinct(campaignid, sample, family, genus, species, marine_region, count) %>%   dplyr::anti_join(., expand_life_history(CheckEM::australia_life_history), by = c(\"family\", \"genus\", \"species\", \"marine_region\")) %>%   dplyr::filter(count > 0) %>%   dplyr::left_join(metadata) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species, marine_region) %>%   dplyr::distinct() %>%   dplyr::rename('marine region not observed in' = marine_region) %>%   dplyr::semi_join(., CheckEM::australia_life_history, by = c(\"family\", \"genus\", \"species\")) ## Joining with `by = join_by(campaignid, sample, marine_region)` message(paste(nrow(count_species_not_observed_region), \"species not observed in the region before\")) ## 0 species not observed in the region before glimpse(count_species_not_observed_region) ## Rows: 0 ## Columns: 5 ## $ campaignid                      <chr>  ## $ family                          <chr>  ## $ genus                           <chr>  ## $ species                         <chr>  ## $ `marine region not observed in` <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"species-out-of-range-in-the-length-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Species not observed in the region before","what":"Species out of range in the length data","title":"Check fish data from single point based methods","text":"Check species range length data.","code":"length_species_not_observed_region <- complete_length %>%   dplyr::distinct(campaignid, sample, family, genus, species, marine_region, number) %>%   dplyr::anti_join(., expand_life_history(CheckEM::australia_life_history), by = c(\"family\", \"genus\", \"species\", \"marine_region\")) %>%   dplyr::filter(number > 0) %>%   dplyr::left_join(metadata) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species, marine_region) %>%   dplyr::distinct() %>%   dplyr::rename('marine region not observed in' = marine_region) %>%   dplyr::semi_join(., CheckEM::australia_life_history, by = c(\"family\", \"genus\", \"species\")) ## Joining with `by = join_by(campaignid, sample, marine_region)` message(paste(nrow(length_species_not_observed_region), \"species not observed in the region before\")) ## 0 species not observed in the region before glimpse(length_species_not_observed_region) ## Rows: 0 ## Columns: 5 ## $ campaignid                      <chr>  ## $ family                          <chr>  ## $ genus                           <chr>  ## $ species                         <chr>  ## $ `marine region not observed in` <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"species-not-listed-in-the-life-history-list","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Species not listed in the life history list","title":"Check fish data from single point based methods","text":"next check identifies species listed chosen life history list. misspelt family/genus/species name, species name invalid, name updated species name included life history list missing. need critically think species flagged determine error . use Australia life history list use CheckEM::australia_life_history use Global life history list use CheckEM::global_life_history. NOTE. believe species flagged check included life history list please email brooke.gibbons@uwa.edu.au full species name list added (Global Australia).","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"species-in-the-count-data-that-are-not-listed","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Species not listed in the life history list","what":"Species in the count data that are not listed","title":"Check fish data from single point based methods","text":"chose update names changed (synonyms) check won’t include previously used names.","code":"count_species_not_in_list <- complete_count %>%   dplyr::anti_join(., CheckEM::australia_life_history, by = c(\"family\", \"genus\", \"species\")) %>%   dplyr::filter(count > 0) %>%   dplyr::left_join(metadata) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species) %>%   dplyr::distinct() ## Joining with `by = join_by(campaignid, sample, status, date_time, location, ## site, depth_m, successful_count, successful_length, successful_habitat_forward, ## successful_habitat_backward, marine_region)` message(paste(nrow(count_species_not_in_list), \"species not in chosen life history list\")) ## 11 species not in chosen life history list glimpse(count_species_not_in_list) ## Rows: 11 ## Columns: 4 ## $ campaignid <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05_PtCloates_stereo… ## $ family     <chr> \"Lethrinidae\", \"Lutjanidae\", \"Sus\", \"Rhinidae\", \"Scaridae\",… ## $ genus      <chr> \"Gymnocranius\", \"Pristipomoides\", \"Sus\", \"Rhynchobatus\", \"S… ## $ species    <chr> \"sp1\", \"sp1\", \"sus\", \"laevis\", \"sp3\", \"sp10\", \"sp1\", \"SUS\",…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"species-in-the-length-data-that-are-not-listed","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Species not listed in the life history list","what":"Species in the length data that are not listed","title":"Check fish data from single point based methods","text":"","code":"length_species_not_in_list <- complete_length %>%   dplyr::anti_join(., CheckEM::australia_life_history, by = c(\"family\", \"genus\", \"species\")) %>%   dplyr::filter(number > 0) %>%   dplyr::left_join(metadata) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species) %>%   dplyr::distinct() ## Joining with `by = join_by(campaignid, sample, status, date_time, location, ## site, depth_m, successful_count, successful_length, successful_habitat_forward, ## successful_habitat_backward, marine_region)` message(paste(nrow(length_species_not_in_list), \"species not in chosen life history list\")) ## 12 species not in chosen life history list glimpse(length_species_not_in_list) ## Rows: 12 ## Columns: 4 ## $ campaignid <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05_PtCloates_stereo… ## $ family     <chr> \"Lethrinidae\", \"Lutjanidae\", \"Sus\", \"Rhinidae\", \"Scaridae\",… ## $ genus      <chr> \"Gymnocranius\", \"Pristipomoides\", \"Sus\", \"Rhynchobatus\", \"S… ## $ species    <chr> \"sp1\", \"sp1\", \"sus\", \"laevis\", \"sp3\", \"sp10\", \"sp1\", \"SUS\",…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"length-measurements-smaller-or-bigger-than-the-fishbase-minimum-and-maximums","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Length measurements smaller or bigger than the fishbase minimum and maximums","title":"Check fish data from single point based methods","text":"Length data extremely valuable important fish precisely accurately measured. can use check identify measurements bigger maximum size listed fishbase. However, think important check species nearing maximum size (e.g 85% maximum). also think important check species small. Fishbase list minimum size, recommend checking length measurements 15% maximum size. function can edit cut offs (15% 85%) see fit. believe size limits particular species incorrect fill feedback form CheckEM web based app (see tab Edit maximum lengths) supply new maximum size limit.","code":"incorrect_lengths <- left_join(complete_length, create_min_max(CheckEM::australia_life_history, minimum = 0.15, maximum = 0.85)) %>%   dplyr::filter(length_mm < min_length_mm | length_mm > max_length_mm) %>%   mutate(reason = ifelse(length_mm < min_length_mm, \"too small\", \"too big\")) %>%   dplyr::select(campaignid, sample, family, genus, species, length_mm, min_length_mm, max_length_mm, length_max_mm, reason, any_of(c(\"em_comment\", \"frame_left\")), length_max_mm) %>%   mutate(difference = ifelse(reason %in% c(\"too small\"), (min_length_mm - length_mm), (length_mm - max_length_mm))) %>%   dplyr::mutate(percent_of_fb_max = (length_mm/length_max_mm)*100) %>%   dplyr::left_join(metadata) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species, length_mm, min_length_mm, max_length_mm, length_max_mm, reason, any_of(c(\"em_comment\", \"frame_left\")), difference, percent_of_fb_max) ## Joining with `by = join_by(genus)` ## Joining with `by = join_by(family, genus, species)` ## Joining with `by = join_by(campaignid, sample)` too_small <- incorrect_lengths %>%   dplyr::filter(reason %in% \"too small\")  too_big <- incorrect_lengths %>%   dplyr::filter(reason %in% \"too big\")  message(paste(nrow(too_small), \"lengths are too small\")) ## 184 lengths are too small glimpse(too_small) ## Rows: 184 ## Columns: 11 ## $ campaignid        <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05_PtCloates… ## $ family            <chr> \"Monacanthidae\", \"Echeneidae\", \"Echeneidae\", \"Echene… ## $ genus             <chr> \"Unknown\", \"Echeneis\", \"Echeneis\", \"Echeneis\", \"Eche… ## $ species           <chr> \"spp\", \"naucrates\", \"naucrates\", \"naucrates\", \"naucr… ## $ length_mm         <dbl> 32.95594, 116.45890, 141.68877, 133.69953, 70.35057,… ## $ min_length_mm     <dbl> 44.98729, 165.00000, 165.00000, 165.00000, 165.00000… ## $ max_length_mm     <dbl> 254.9280, 935.0000, 935.0000, 935.0000, 935.0000, 38… ## $ length_max_mm     <dbl> 299.9153, 1100.0000, 1100.0000, 1100.0000, 1100.0000… ## $ reason            <chr> \"too small\", \"too small\", \"too small\", \"too small\", … ## $ difference        <dbl> 12.0313480, 48.5411000, 23.3112300, 31.3004700, 94.6… ## $ percent_of_fb_max <dbl> 10.988417, 10.587173, 12.880797, 12.154503, 6.395506… message(paste(nrow(too_big), \"lengths are too big\")) ## 381 lengths are too big glimpse(too_big) ## Rows: 381 ## Columns: 11 ## $ campaignid        <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05_PtCloates… ## $ family            <chr> \"Balistidae\", \"Balistidae\", \"Balistidae\", \"Lethrinid… ## $ genus             <chr> \"Abalistes\", \"Abalistes\", \"Abalistes\", \"Gymnocranius… ## $ species           <chr> \"filamentosus\", \"filamentosus\", \"filamentosus\", \"eua… ## $ length_mm         <dbl> 336.7789, 324.9078, 281.1703, 404.3352, 428.4275, 34… ## $ min_length_mm     <dbl> 49.5, 49.5, 49.5, 67.5, 67.5, 49.5, 195.0, 195.0, 67… ## $ max_length_mm     <dbl> 280.5, 280.5, 280.5, 382.5, 382.5, 280.5, 1105.0, 11… ## $ length_max_mm     <dbl> 330, 330, 330, 450, 450, 330, 1300, 1300, 450, 450, … ## $ reason            <chr> \"too big\", \"too big\", \"too big\", \"too big\", \"too big… ## $ difference        <dbl> 56.27888, 44.40775, 0.67035, 21.83520, 45.92747, 61.… ## $ percent_of_fb_max <dbl> 102.05421, 98.45689, 85.20314, 89.85227, 95.20610, 1…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"number-of-3d-points-and-length-measurements-over-the-rms-limit-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of 3D points and length measurements over the RMS limit (EM only)","title":"Check fish data from single point based methods","text":"check can set RMS limit, identify measurements larger RMS.","code":"rms_limit <- 20 # in mm  over_rms <- complete_length %>%   dplyr::filter(as.numeric(rms) > rms_limit)  message(paste(nrow(over_rms), \"lengths over RMS limit\")) ## 0 lengths over RMS limit glimpse(over_rms) ## Rows: 0 ## Columns: 21 ## $ campaignid                  <chr>  ## $ sample                      <chr>  ## $ family                      <chr>  ## $ genus                       <chr>  ## $ species                     <chr>  ## $ length_mm                   <dbl>  ## $ number                      <dbl>  ## $ range                       <dbl>  ## $ rms                         <dbl>  ## $ precision                   <dbl>  ## $ status                      <chr>  ## $ date_time                   <chr>  ## $ location                    <chr>  ## $ site                        <chr>  ## $ depth_m                     <chr>  ## $ successful_count            <chr>  ## $ successful_length           <chr>  ## $ successful_habitat_forward  <chr>  ## $ successful_habitat_backward <chr>  ## $ marine_region               <chr>  ## $ scientific                  <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"number-of-length-measurements-over-the-precision-limit-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of length measurements over the precision limit (EM only)","title":"Check fish data from single point based methods","text":"check can set precision limit, identify measurements larger precision.","code":"precision_limit <- 10 # in %  over_precision <- complete_length %>%   dplyr::filter(as.numeric(precision) > precision_limit)  message(paste(nrow(over_precision), \"lengths over precision limit\")) ## 430 lengths over precision limit glimpse(over_precision) ## Rows: 430 ## Columns: 21 ## $ campaignid                  <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05… ## $ sample                      <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1… ## $ family                      <chr> \"Balistidae\", \"Carangidae\", \"Carangidae\", … ## $ genus                       <chr> \"Abalistes\", \"Decapterus\", \"Decapterus\", \"… ## $ species                     <chr> \"filamentosus\", \"spp\", \"spp\", \"spp\", \"fulv… ## $ length_mm                   <dbl> 336.7789, 310.8369, 336.7015, 303.8198, 26… ## $ number                      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ range                       <dbl> 3775.308, 3356.762, 3562.630, 3514.671, 31… ## $ rms                         <dbl> 11.10507, 16.32680, 15.62525, 11.23263, 11… ## $ precision                   <dbl> 21.13063, 13.59407, 18.23430, 16.22170, 15… ## $ status                      <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\"… ## $ date_time                   <chr> \"2022-05-22T10:03:24+08:00\", \"2022-05-22T1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"93.9\", \"93.9\", \"93.9\", \"93.9\", \"93.9\", \"9… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ successful_habitat_backward <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ marine_region               <chr> \"North-west\", \"North-west\", \"North-west\", … ## $ scientific                  <chr> \"Balistidae Abalistes filamentosus\", \"Cara…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"number-of-3d-points-and-length-measurements-over-the-range-limit-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of 3D points and length measurements over the range limit (EM only)","title":"Check fish data from single point based methods","text":"check can set range limit, identify measurements larger range.","code":"range_limit <- 10 # in metres  over_range <- complete_length %>%   dplyr::filter(as.numeric(range) > (range_limit* 1000))  message(paste(nrow(over_range), \"lengths over range limit\")) ## 0 lengths over range limit glimpse(over_range) ## Rows: 0 ## Columns: 21 ## $ campaignid                  <chr>  ## $ sample                      <chr>  ## $ family                      <chr>  ## $ genus                       <chr>  ## $ species                     <chr>  ## $ length_mm                   <dbl>  ## $ number                      <dbl>  ## $ range                       <dbl>  ## $ rms                         <dbl>  ## $ precision                   <dbl>  ## $ status                      <chr>  ## $ date_time                   <chr>  ## $ location                    <chr>  ## $ site                        <chr>  ## $ depth_m                     <chr>  ## $ successful_count            <chr>  ## $ successful_length           <chr>  ## $ successful_habitat_forward  <chr>  ## $ successful_habitat_backward <chr>  ## $ marine_region               <chr>  ## $ scientific                  <chr>"},{"path":[]},{"path":[]},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-point.html","id":"save-the-checked-data","dir":"Articles > R-workflows","previous_headings":"","what":"Save the checked data","title":"Check fish data from single point based methods","text":"Save MaxN R data file. Save lengths R data file.","code":"saveRDS(complete_count,           file = here::here(paste0(\"r-workflows/data/staging/\",                        name, \"_complete-count.rds\"))) saveRDS(complete_length,           file = here::here(paste0(\"r-workflows/data/staging/\",                        name, \"_complete-length.rds\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"introduction","dir":"Articles > R-workflows","previous_headings":"","what":"Introduction","title":"Check fish data from transect based methods","text":"script take fish annotation data transect based methods (e.g. stereo-DOVs ROVs), either exported EventMeasure “Generic” format (see format requirements ), check errors annotation. script format annotation data tidy format. also need formatted sample metadata file “*_Metadata.csv” (see format requirements )","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"r-set-up","dir":"Articles > R-workflows","previous_headings":"","what":"R set up","title":"Check fish data from transect based methods","text":"First need load necessary libraries. haven’t installed CheckEM need install CheckEM using install_github function. Next set study name. can name like, files saved using script prefixed name. Avoid name long. recommend using short project name includes method e.g. “2020_ningaloo_stereo-BRUVs”.","code":"library(devtools) # devtools::install_github(\"GlobalArchiveManual/CheckEM\") # Use this to install the CheckEM package if you have not already done so library(CheckEM) library(tidyverse) library(googlesheets4) library(sf) library(terra) library(here) library(lutz) name <- \"example-dov-workflow\""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"metadata","dir":"Articles > R-workflows","previous_headings":"","what":"Metadata","title":"Check fish data from transect based methods","text":"Now load tidy metadata. already completed step checking habitat data, can skip next two chunks code simply read metadata (see ). Save metadata R data file (creates lighter file saving .csv similar, also maintains column formatting).","code":"# TODO remove all non-numeric from the period column in metadata, will also need to remove in EMOBs - make it optional # Do people call periods, a, b, c  # TODO add a check to say how many files there are of a certain type # TODO flag if file type is different for all files # TODO fuzzy join naming to see if I can find the potential file it is meant to be # TODO check for missing metadata # TODO Have a think about generic count data - how to include this (e.g. JCU missing length data but having abundance) # TODO Check to see if the metadata has a fuzzy join if there is no matching count or length # TODO - Add examples of completing by location, campaign, marine_region - don't want zeros for australian species in Fiji # TODO - add biomass  metadata <- read_metadata(here::here(\"r-workflows/data/DOV example/raw/\"), method = \"DOVs\") %>% # Change here to \"DOVs\"   dplyr::select(campaignid, sample, status, longitude_dd, latitude_dd, date_time, location, site, depth_m, successful_count, successful_length) %>%   dplyr::glimpse() ## reading metadata file: /home/runner/work/CheckEM/CheckEM/r-workflows/data/DOV example/raw//2017-04_Marmion.MP.Monitoring_stereoDOVs_Metadata.csv ## the date_time column is missing from: /home/runner/work/CheckEM/CheckEM/r-workflows/data/DOV example/raw//2017-04_Marmion.MP.Monitoring_stereoDOVs_Metadata.csv. Creating column now.... ## Joining with `by = join_by(sample, campaignid)` ## Joining with `by = join_by(date, timezone)` ## reading metadata file: /home/runner/work/CheckEM/CheckEM/r-workflows/data/DOV ## example/raw//2017-04_Shoalwater.MP.Monitoring_stereoDOVs_Metadata.csv ## the date_time column is missing from: ## /home/runner/work/CheckEM/CheckEM/r-workflows/data/DOV ## example/raw//2017-04_Shoalwater.MP.Monitoring_stereoDOVs_Metadata.csv. Creating ## column now.... ## Joining with `by = join_by(campaignid, sample)` ## Joining with `by = join_by(date, timezone)` ## Rows: 2 ## Columns: 11 ## $ campaignid        <chr> \"2017-04_Marmion.MP.Monitoring_stereoDOVs\", \"2017-04… ## $ sample            <chr> \"3 Mile-01\", \"BP_SZ_20170428_DOV-T1\" ## $ status            <chr> \"Fished\", \"No-take\" ## $ longitude_dd      <chr> \"115.67861\", \"115.6915\" ## $ latitude_dd       <chr> \"-31.78333\", \"-32.3643\" ## $ date_time         <chr> \"2017-04-01T11:00:00+08:00\", \"2017-04-28T11:30:00+08… ## $ location          <chr> \"Marmion Marine Park\", \"Shoalwater Islands\" ## $ site              <chr> \"3 Mile\", \"Becher Point SZ 1\" ## $ depth_m           <chr> \"11.5\", \"5\" ## $ successful_count  <chr> \"Yes\", \"Yes\" ## $ successful_length <chr> \"Yes\", \"Yes\" saveRDS(metadata, file = here::here(paste0(\"r-workflows/data/tidy/\",                                 name, \"_Metadata.rds\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"marine-parks","dir":"Articles > R-workflows","previous_headings":"Metadata","what":"Marine Parks","title":"Check fish data from transect based methods","text":"Load marine park shape files, extract fishing status (e.g. ‘Fished’ ‘-take’) use modelling. data set used 2022 Collaborative Australian Protected Areas Database, can download free . may change shape file suitable data set available study area.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"note-you-should-only-use-this-code-if-the-status-column-is-not-filled-out","dir":"Articles > R-workflows","previous_headings":"Metadata > Marine Parks","what":"NOTE: You should only use this code if the Status column is not filled out","title":"Check fish data from transect based methods","text":"","code":"marine_parks <- st_read(here::here(\"r-workflows/data/spatial/shapefiles/Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine.shp\"))  %>%   dplyr::select(geometry, ZONE_TYPE) %>%   st_transform(4326) %>%   st_make_valid() ## Reading layer `Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine' from data source `/home/runner/work/CheckEM/CheckEM/r-workflows/data/spatial/shapefiles/Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 3775 features and 26 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: 70.71702 ymin: -58.44947 xmax: 170.3667 ymax: -8.473407 ## Geodetic CRS:  WGS 84 metadata_sf <- st_as_sf(metadata, coords = c(\"longitude_dd\", \"latitude_dd\"), crs = 4326)  # metadata <- metadata_sf %>% #   st_join(marine_parks) %>% #   bind_cols(st_coordinates(.)) %>% #   as.data.frame() %>% #   dplyr::select(-c(geometry)) %>% #   dplyr::rename(longitude_dd = X, latitude_dd = Y) %>% #   dplyr::mutate(status = if_else(str_detect(ZONE_TYPE, \"National|Sanctuary\"), #                                 \"No-take\", \"Fished\")) %>% #   tidyr::replace_na(list(status = \"Fished\")) %>% #   clean_names() %>% #   dplyr::glimpse()"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"find-nearest-marine-region","dir":"Articles > R-workflows","previous_headings":"Metadata","what":"Find nearest Marine Region","title":"Check fish data from transect based methods","text":"Now need find nearest marine region sample metadata. can use life history lists find species observed marine region .","code":"metadata_sf <- st_as_sf(metadata, coords = c(\"longitude_dd\", \"latitude_dd\"), crs = 4326) regions <- st_as_sf(CheckEM::aus_regions, crs = st_crs(4326)) ## Loading required package: sp regions <- st_transform(regions, 4326) %>%   dplyr::select(REGION)  metadata <- st_join(metadata_sf, regions, join = st_nearest_feature) %>%   dplyr::rename(marine_region = REGION) %>%   dplyr::mutate(sample = as.character(sample)) %>%   as.data.frame() %>%   dplyr::select(-c(geometry)) %>%   glimpse() ## Rows: 2 ## Columns: 10 ## $ campaignid        <chr> \"2017-04_Marmion.MP.Monitoring_stereoDOVs\", \"2017-04… ## $ sample            <chr> \"3 Mile-01\", \"BP_SZ_20170428_DOV-T1\" ## $ status            <chr> \"Fished\", \"No-take\" ## $ date_time         <chr> \"2017-04-01T11:00:00+08:00\", \"2017-04-28T11:30:00+08… ## $ location          <chr> \"Marmion Marine Park\", \"Shoalwater Islands\" ## $ site              <chr> \"3 Mile\", \"Becher Point SZ 1\" ## $ depth_m           <chr> \"11.5\", \"5\" ## $ successful_count  <chr> \"Yes\", \"Yes\" ## $ successful_length <chr> \"Yes\", \"Yes\" ## $ marine_region     <chr> \"South-west\", \"South-west\""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"fish-annotation-data","dir":"Articles > R-workflows","previous_headings":"","what":"Fish annotation data","title":"Check fish data from transect based methods","text":"two types fish annotation data formats can check format using script: EventMeasure database outputs Generic files. EventMeasure database outputs need export database outputs using EventMeasure software .EMObs files. give ’_Points.txt’, ’_Lengths.txt’ ’_3DPoints.txt’ files. Generic data much simpler format allows users haven’t used EventMeasure format QC annotation data. need _Count.csv file _Length.csv file. information format files please see CheckEM user guide recommend using EventMeasure database outputs available date. checks possible EventMeasure data Generic data. Note: used EventMeasure software annotate samples made corrections exported data (e.g. Excel), corrected data now true copy data import data Generic annotation files (e.g. count length).","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"load-any-eventmeasure-points-txt-files","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Load any EventMeasure Points.txt files","title":"Check fish data from transect based methods","text":"section code read Points.txt files saved directory set. combine files one data-frame, get campaignid name name file. important consistently name files campaignid (look different separators e.g. ‘-’, ’_‘, ’.’)","code":"points <- read_points(here::here(\"r-workflows/data/DOV example/raw/\")) %>%    glimpse() ## Rows: 0 ## Columns: 23 ## $ opcode      <chr>  ## $ pointindex  <chr>  ## $ filename    <chr>  ## $ frame       <chr>  ## $ time        <chr>  ## $ period      <chr>  ## $ periodtime  <chr>  ## $ imagecol    <chr>  ## $ imagerow    <chr>  ## $ rectwidth   <chr>  ## $ rectheight  <chr>  ## $ family      <chr>  ## $ genus       <chr>  ## $ species     <chr>  ## $ code        <chr>  ## $ number      <dbl>  ## $ stage       <chr>  ## $ activity    <chr>  ## $ comment     <chr>  ## $ attribute9  <chr>  ## $ attribute10 <chr>  ## $ campaignid  <chr>  ## $ sample      <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"load-any-generic-count-files","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Load any Generic count files","title":"Check fish data from transect based methods","text":"section code read Count.csv files saved directory set. combine files one data frame, get campaignid name name file. important consistently name files campaignid (look different separators e.g. ‘-’, ’_‘, ’.’)","code":"counts <- read_counts(here::here(\"r-workflows/data/DOV example/raw/\"), method = \"DOVs\") %>% # Change here to \"DOVs\"   glimpse() ## reading count file: /home/runner/work/CheckEM/CheckEM/r-workflows/data/DOV example/raw//2017-04_Marmion.MP.Monitoring_stereoDOVs_Count.csv ## file is a csv ## Rows: 78 ## Columns: 7 ## $ sample     <chr> \"3 Mile-01\", \"3 Mile-01\", \"3 Mile-01\", \"3 Mile-01\", \"3 Mile… ## $ family     <chr> \"Labridae\", \"Labridae\", \"Labridae\", \"Labridae\", \"Labridae\",… ## $ genus      <chr> \"Coris\", \"Coris\", \"Coris\", \"Coris\", \"Coris\", \"Coris\", \"Parm… ## $ species    <chr> \"auricularis\", \"auricularis\", \"auricularis\", \"auricularis\",… ## $ count      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… ## $ transect   <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",… ## $ campaignid <chr> \"2017-04_Marmion.MP.Monitoring_stereoDOVs\", \"2017-04_Marmio…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"load-any-eventmeasure-lengths-txt-andor-3dpoints-txt-files","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Load any EventMeasure Lengths.txt and/or 3DPoints.txt files","title":"Check fish data from transect based methods","text":"section code read Lengths.txt /3DPoints.txt files saved directory set. combine files one data-frame, get campaignid name name file. important consistently name files campaignid (look different separators e.g. ‘-’, ’_‘, ’.’)","code":"em_length3dpoints <- read_em_length(here::here(\"r-workflows/data/DOV example/raw/\"), method = \"DOVs\") %>% # Change here to \"DOVs\"   dplyr::select(-c(any_of(\"comment\"))) %>% # there is a comment column in metadata, so you will need to remove this column from EM data   dplyr::inner_join(metadata, by = join_by(sample, campaignid)) %>%   dplyr::filter(successful_length %in% \"Yes\") %>%   # dplyr::rename(length_mm = length) %>%   glimpse() ## Rows: 27 ## Columns: 44 ## $ opcode            <chr> \"BP_SZ_20170428_DOV\", \"BP_SZ_20170428_DOV\", \"BP_SZ_2… ## $ imageptpair       <chr> \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"11\", \"12\", \"14\", \"19\"… ## $ filenameleft      <chr> \"Becher Point SZ_20170428_LEFT110.avi\", \"Becher Poin… ## $ frameleft         <chr> \"17390\", \"17393\", \"17393\", \"17600\", \"17682\", \"17692\"… ## $ filenameright     <chr> \"Becher Point SZ_20170428_Right111.avi\", \"Becher Poi… ## $ frameright        <chr> \"18111\", \"18114\", \"18114\", \"18321\", \"18403\", \"18413\"… ## $ time              <chr> \"11.59333\", \"11.59533\", \"11.59533\", \"11.73333\", \"11.… ## $ period            <chr> \"T1\", \"T1\", \"T1\", \"T1\", \"T1\", \"T1\", \"T1\", \"T1\", \"T1\"… ## $ periodtime        <chr> \"0.338\", \"0.34\", \"0.34\", \"0.478\", \"0.53267\", \"0.5393… ## $ x                 <dbl> 2134.6941, 1376.5557, 779.0388, -456.7284, -643.7255… ## $ y                 <dbl> 414.20359, 558.91309, 297.44439, -39.05379, -691.681… ## $ z                 <dbl> -4598.665, -3416.569, -2294.869, -4340.940, -2352.72… ## $ sx                <chr> \"9.83\", \"4.93609\", \"2.05508\", \"2.68764\", \"1.81621\", … ## $ sy                <chr> \"2.40788\", \"2.22716\", \"1.12553\", \"1.90913\", \"2.08107… ## $ sz                <chr> \"21.82321\", \"12.38573\", \"5.7018\", \"19.84829\", \"5.801… ## $ rms               <dbl> 9.01207, 4.47500, 2.66084, 1.05090, 0.77775, 0.25224… ## $ range             <dbl> 5086.866, 3725.619, 2441.679, 4365.076, 2535.372, 20… ## $ direction         <chr> \"25.56772\", \"23.98894\", \"20.43836\", \"6.04787\", \"20.9… ## $ family            <chr> \"Kyphosidae\", \"Kyphosidae\", \"Kyphosidae\", \"Pomacentr… ## $ genus             <chr> \"Kyphosus\", \"Kyphosus\", \"Kyphosus\", \"Parma\", \"Notola… ## $ species           <chr> \"sydneyanus\", \"sydneyanus\", \"sydneyanus\", \"mcculloch… ## $ code              <chr> \"37361001\", \"37361001\", \"37361001\", \"37372093\", \"373… ## $ number            <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ## $ stage             <chr> \"AD\", \"AD\", \"AD\", \"AD\", \"J\", \"AD\", \"AD\", \"AD\", \"AD\",… ## $ activity          <chr> \"Passing\", \"Passing\", \"Passing\", \"Passing\", \"Passing… ## $ attribute9        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ attribute10       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ campaignid        <chr> \"2017-04_Shoalwater.MP.Monitoring_stereoDOVs\", \"2017… ## $ length_mm         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 496.… ## $ precision         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 3.66… ## $ horzdir           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"12.… ## $ vertdir           <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"14.… ## $ midx              <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, -348… ## $ midy              <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 80.6… ## $ midz              <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, -297… ## $ sample            <chr> \"BP_SZ_20170428_DOV-T1\", \"BP_SZ_20170428_DOV-T1\", \"B… ## $ status            <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take… ## $ date_time         <chr> \"2017-04-28T11:30:00+08:00\", \"2017-04-28T11:30:00+08… ## $ location          <chr> \"Shoalwater Islands\", \"Shoalwater Islands\", \"Shoalwa… ## $ site              <chr> \"Becher Point SZ 1\", \"Becher Point SZ 1\", \"Becher Po… ## $ depth_m           <chr> \"5\", \"5\", \"5\", \"5\", \"5\", \"5\", \"5\", \"5\", \"5\", \"5\", \"5… ## $ successful_count  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye… ## $ successful_length <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye… ## $ marine_region     <chr> \"South-west\", \"South-west\", \"South-west\", \"South-wes…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"load-any-generic-length-files","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Load any Generic length files","title":"Check fish data from transect based methods","text":"section code read Length.csv files saved directory set. combine files one data frame, get campaignid name name file. important consistently name files campaignid (look different separators e.g. ‘-’, ’’, ‘.’)","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"note-in-this-section-we-also-add-any-extra-counts-that-were-not-measured-","dir":"Articles > R-workflows","previous_headings":"Fish annotation data > Load any Generic length files","what":"Note: In this section we also add any extra counts that were not measured.","title":"Check fish data from transect based methods","text":"example, 10 Species X counted transect, 6 measured, add extra 4 Species X gen_length dataframe length = NA (like 3D point EM data)","code":"gen_length <- read_gen_length(here::here(\"r-workflows/data/DOV example/raw/\"), method = \"DOVs\") %>% # Change here to \"DOVs\"   dplyr::full_join(metadata, by = join_by(campaignid, sample)) %>%   dplyr::filter(successful_length %in% \"Yes\") %>%   glimpse() ## reading length file: /home/runner/work/CheckEM/CheckEM/r-workflows/data/DOV example/raw//2017-04_Marmion.MP.Monitoring_stereoDOVs_Length.csv ## file is a csv ## Rows: 47 ## Columns: 20 ## $ sample            <chr> \"3 Mile-01\", \"3 Mile-01\", \"3 Mile-01\", \"3 Mile-01\", … ## $ family            <chr> \"Labridae\", \"Labridae\", \"Labridae\", \"Labridae\", \"Lab… ## $ genus             <chr> \"Austrolabrus\", \"Coris\", \"Coris\", \"Coris\", \"Coris\", … ## $ species           <chr> \"maculatus\", \"auricularis\", \"auricularis\", \"auricula… ## $ count             <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1… ## $ length_mm         <dbl> 132.757, 134.102, 120.772, 118.868, 104.315, 195.797… ## $ transect          <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1… ## $ campaignid        <chr> \"2017-04_Marmion.MP.Monitoring_stereoDOVs\", \"2017-04… ## $ number            <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ## $ range             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ rms               <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ precision         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ status            <chr> \"Fished\", \"Fished\", \"Fished\", \"Fished\", \"Fished\", \"F… ## $ date_time         <chr> \"2017-04-01T11:00:00+08:00\", \"2017-04-01T11:00:00+08… ## $ location          <chr> \"Marmion Marine Park\", \"Marmion Marine Park\", \"Marmi… ## $ site              <chr> \"3 Mile\", \"3 Mile\", \"3 Mile\", \"3 Mile\", \"3 Mile\", \"3… ## $ depth_m           <chr> \"11.5\", \"11.5\", \"11.5\", \"11.5\", \"11.5\", \"11.5\", \"11.… ## $ successful_count  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye… ## $ successful_length <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye… ## $ marine_region     <chr> \"South-west\", \"South-west\", \"South-west\", \"South-wes… counts_summary <- counts %>%   dplyr::group_by(campaignid, sample, family, genus, species) %>%   dplyr::summarise(total_count = sum(count)) %>%   dplyr::ungroup() ## `summarise()` has grouped output by 'campaignid', 'sample', 'family', 'genus'. ## You can override using the `.groups` argument. gen_length_missing <- gen_length %>%   dplyr::group_by(campaignid, sample, family, genus, species) %>%   dplyr::summarise(total_length = sum(number)) %>%   dplyr::ungroup() %>%   dplyr::full_join(counts_summary) %>%   dplyr::mutate(difference = total_count - total_length) %>%   dplyr::filter(difference > 0) %>% # remove rows where there are more lengths than counts   tidyr::uncount(difference) %>%   dplyr::select(-c(total_length, total_count)) %>%   dplyr::mutate(number = 1, length_mm = NA) %>%   dplyr::left_join(metadata) ## `summarise()` has grouped output by 'campaignid', 'sample', 'family', 'genus'. ## You can override using the `.groups` argument. ## Joining with `by = join_by(campaignid, sample, family, genus, species)` ## Joining with `by = join_by(campaignid, sample)` gen_length_combined <- bind_rows(gen_length, gen_length_missing)"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"combine-eventmeasure-and-generic-length-data","dir":"Articles > R-workflows","previous_headings":"Fish annotation data","what":"Combine EventMeasure and Generic length data","title":"Check fish data from transect based methods","text":"","code":"# If only EventMeasure data then length only includes Length and 3D points data # If only Generic data then length only includes generic length data # If both exist, then length includes both Length and 3D points and generic length data length <- bind_rows(get0(\"em_length3dpoints\"), get0(\"gen_length_combined\")) # this works even if you only have one type of data"},{"path":[]},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"in-the-length-data","dir":"Articles > R-workflows","previous_headings":"Fish annotation data > Format and add zeros where a species isn’t present","what":"In the length data","title":"Check fish data from transect based methods","text":"Tidy complete length data (e.g. complete zeroes data). final data set row species every sample (deployment).","code":"complete_length <- length %>%   dplyr::mutate(family = ifelse(family %in% c(\"NA\", \"NANA\", NA, \"unknown\", \"\", NULL, \" \", NA_character_), \"Unknown\", as.character(family))) %>%   dplyr::mutate(genus = ifelse(genus %in% c(\"NA\", \"NANA\", NA, \"unknown\", \"\", NULL, \" \", NA_character_), \"Unknown\", as.character(genus))) %>%   dplyr::mutate(species = ifelse(species %in% c(\"NA\", \"NANA\", NA, \"unknown\", \"\", NULL, \" \", NA_character_), \"spp\", as.character(species))) %>%   dplyr::filter(!family %in% \"Unknown\")%>%   # First make one row for every length measurement   dplyr::mutate(number = as.numeric(number)) %>%   tidyr::uncount(number) %>%   dplyr::mutate(number = 1) %>%   # Add in missing samples   dplyr::right_join(metadata) %>%   dplyr::filter(successful_length %in% \"Yes\") %>%   # Complete the data (add in zeros for every species)   dplyr::select(campaignid, sample, family, genus, species, length_mm, number, any_of(c(\"range\", \"rms\", \"precision\"))) %>% # this will keep EM only columns   tidyr::complete(nesting(campaignid, sample), nesting(family, genus, species)) %>%   replace_na(list(number = 0)) %>%   ungroup() %>%   dplyr::filter(!is.na(number)) %>%   dplyr::mutate(length_mm = as.numeric(length_mm)) %>%   left_join(., metadata) %>%   glimpse() ## Joining with `by = join_by(campaignid, sample, status, date_time, location, ## site, depth_m, successful_count, successful_length, marine_region)` ## Joining with `by = join_by(campaignid, sample)` ## Rows: 113 ## Columns: 18 ## $ campaignid        <chr> \"2017-04_Marmion.MP.Monitoring_stereoDOVs\", \"2017-04… ## $ sample            <chr> \"3 Mile-01\", \"3 Mile-01\", \"3 Mile-01\", \"3 Mile-01\", … ## $ family            <chr> \"Blenniidae\", \"Kyphosidae\", \"Labridae\", \"Labridae\", … ## $ genus             <chr> \"Plagiotremus\", \"Kyphosus\", \"Austrolabrus\", \"Austrol… ## $ species           <chr> \"tapeinosoma\", \"sydneyanus\", \"maculatus\", \"maculatus… ## $ length_mm         <dbl> NA, NA, 132.757, NA, 134.102, 120.772, 118.868, 104.… ## $ number            <dbl> 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ## $ range             <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ rms               <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ precision         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ status            <chr> \"Fished\", \"Fished\", \"Fished\", \"Fished\", \"Fished\", \"F… ## $ date_time         <chr> \"2017-04-01T11:00:00+08:00\", \"2017-04-01T11:00:00+08… ## $ location          <chr> \"Marmion Marine Park\", \"Marmion Marine Park\", \"Marmi… ## $ site              <chr> \"3 Mile\", \"3 Mile\", \"3 Mile\", \"3 Mile\", \"3 Mile\", \"3… ## $ depth_m           <chr> \"11.5\", \"11.5\", \"11.5\", \"11.5\", \"11.5\", \"11.5\", \"11.… ## $ successful_count  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye… ## $ successful_length <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Ye… ## $ marine_region     <chr> \"South-west\", \"South-west\", \"South-west\", \"South-wes…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"quality-control-checks","dir":"Articles > R-workflows","previous_headings":"","what":"Quality Control Checks","title":"Check fish data from transect based methods","text":"Now -tidy data can begin run checks.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"number-of-unique-samples-in-the-metadata","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of unique samples in the metadata","title":"Check fish data from transect based methods","text":"total number unique samples sample metadata (also number rows metadata data frame)","code":"number_of_samples <- metadata %>%   dplyr::distinct(campaignid, sample)  message(paste(nrow(number_of_samples), \"unique samples in the metadata\")) ## 2 unique samples in the metadata"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"check-for-duplicate-sample-names","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Check for duplicate sample names","title":"Check fish data from transect based methods","text":"duplicate samples within campaign displayed ","code":"duplicate_samples <- metadata %>%   dplyr::group_by(campaignid, sample) %>%   dplyr::summarise(n = n()) %>%   dplyr::ungroup() %>%   dplyr::filter(n > 1) ## `summarise()` has grouped output by 'campaignid'. You can override using the ## `.groups` argument. message(paste(nrow(duplicate_samples), \"samples duplicated in the metadata\")) ## 0 samples duplicated in the metadata"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"number-of-samples-without-length-or-3d-point-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of sample(s) without length or 3D point data","title":"Check fish data from transect based methods","text":"due samples observing fish (error) sample marked successful_length = . also due sample name spelt incorrectly EMObs Length file sample metadata file.","code":"# TODO Check to see if any samples without abundance data # TODO check to see if any samples without length data (not including 3D points) # Do that by changing # samples <- length %>% # dplyr::filter(length_mm >0) %>% #   distinct(campaignid, sample) # TODO - include location, site # TODO - summarise % transects with zero by opcode # IDEA - if last or consective transects at the end of an opcode are empty but marked as successful # lead or lag - flag if the leading row is also zero.  metadata_samples <- metadata %>%   dplyr::select(campaignid, sample, dplyr::any_of(c(\"opcode\", \"period\")),                 successful_count, successful_length, location, site) %>%   dplyr::filter(successful_length %in% \"Yes\") %>%   distinct()  samples <- length %>%   distinct(campaignid, sample)  missing_length <- anti_join(metadata_samples, samples, by = join_by(campaignid, sample))  message(paste(nrow(missing_length), \"samples in metadata missing length data\")) ## 0 samples in metadata missing length data"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"samples-in-the-length-data-missing-metadata","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Samples in the length data missing metadata","title":"Check fish data from transect based methods","text":"next chunk checks samples length data match sample metadata.","code":"missing_metadata <- anti_join(samples, metadata_samples, by = join_by(campaignid, sample))  message(paste(nrow(missing_metadata), \"samples in length data missing metadata\")) ## 0 samples in length data missing metadata"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"periods-without-an-end-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Periods without an end (EM only)","title":"Check fish data from transect based methods","text":"check important used periods define sampling duration. looks periods EMObs end time. important want check duration period.","code":"# TODO - only check these if both count and length are not successful  periods <- read_periods(here::here(\"r-workflows/data/DOV example/raw/\"), method = \"DOVs\") %>%   glimpse() ## Rows: 1 ## Columns: 12 ## $ opcode        <chr> \"BP_SZ_20170428_DOV\" ## $ periodindex   <chr> \"0\" ## $ period        <chr> \"T1\" ## $ filenamestart <chr> \"Becher Point SZ_20170428_LEFT110.avi\" ## $ framestart    <chr> \"16883\" ## $ time_start    <dbl> 11.25533 ## $ filenameend   <chr> \"Becher Point SZ_20170428_LEFT110.avi\" ## $ frameend      <chr> \"18942\" ## $ time_end      <dbl> 12.628 ## $ has_end       <chr> \"1\" ## $ campaignid    <chr> \"2017-04_Shoalwater.MP.Monitoring_stereoDOVs\" ## $ sample        <chr> \"BP_SZ_20170428_DOV-T1\" periods_without_end <- periods %>%   dplyr::filter(has_end == 0)  message(paste(nrow(periods_without_end), \"periods without an end\")) ## 0 periods without an end glimpse(periods_without_end) ## Rows: 0 ## Columns: 12 ## $ opcode        <chr>  ## $ periodindex   <chr>  ## $ period        <chr>  ## $ filenamestart <chr>  ## $ framestart    <chr>  ## $ time_start    <dbl>  ## $ filenameend   <chr>  ## $ frameend      <chr>  ## $ time_end      <dbl>  ## $ has_end       <chr>  ## $ campaignid    <chr>  ## $ sample        <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"samples-without-periods-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Samples without periods (EM only)","title":"Check fish data from transect based methods","text":"check important used periods define sampling duration. can use find samples missing periods. total number individuals observed length data:","code":"metadata_samples <- metadata %>%   dplyr::select(campaignid, sample, dplyr::any_of(c(\"opcode\", \"period\")), successful_count, successful_length) %>%   dplyr::distinct() %>%   dplyr::mutate(sample = as.factor(sample))  periods_samples <- periods %>%   dplyr::select(campaignid, sample, dplyr::any_of(c(\"opcode\", \"period\"))) %>%   distinct()  missing_periods <- anti_join(metadata_samples, periods_samples) %>%   dplyr::select(!sample) ## Joining with `by = join_by(campaignid, sample)` message(paste(nrow(missing_periods), \"samples missing period\")) ## 1 samples missing period glimpse(missing_periods) ## Rows: 1 ## Columns: 3 ## $ campaignid        <chr> \"2017-04_Marmion.MP.Monitoring_stereoDOVs\" ## $ successful_count  <chr> \"Yes\" ## $ successful_length <chr> \"Yes\" lengths_outside_periods <- em_length3dpoints %>%   dplyr::filter(period %in% c(\"NA\", NA, NULL, \"\")) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species, number)  message(paste(nrow(lengths_outside_periods), \"lengths/3D points outside period\")) ## 0 lengths/3D points outside period glimpse(lengths_outside_periods) ## Rows: 0 ## Columns: 7 ## $ campaignid <chr>  ## $ opcode     <chr>  ## $ period     <chr>  ## $ family     <chr>  ## $ genus      <chr>  ## $ species    <chr>  ## $ number     <dbl> total_length <- sum(complete_length$number) message(paste(total_length, \"fish counted in the length data\")) ## 107 fish counted in the length data"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"length-measurements-or-3d-points-without-a-number-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Length measurements or 3D points without a number (EM only)","title":"Check fish data from transect based methods","text":"check EventMeasure data. Sometimes analysts add 3D points record sync point. can remain data double check fish accidentally missing number.","code":"lengths_without_number <- em_length3dpoints %>%   filter(number %in% c(\"NA\", NA, 0, NULL, \"\", \" \"))  message(paste(nrow(lengths_without_number), \"lengths or 3D points in the EMObs that do not have a number\")) ## 0 lengths or 3D points in the EMObs that do not have a number glimpse(lengths_without_number) ## Rows: 0 ## Columns: 44 ## $ opcode            <chr>  ## $ imageptpair       <chr>  ## $ filenameleft      <chr>  ## $ frameleft         <chr>  ## $ filenameright     <chr>  ## $ frameright        <chr>  ## $ time              <chr>  ## $ period            <chr>  ## $ periodtime        <chr>  ## $ x                 <dbl>  ## $ y                 <dbl>  ## $ z                 <dbl>  ## $ sx                <chr>  ## $ sy                <chr>  ## $ sz                <chr>  ## $ rms               <dbl>  ## $ range             <dbl>  ## $ direction         <chr>  ## $ family            <chr>  ## $ genus             <chr>  ## $ species           <chr>  ## $ code              <chr>  ## $ number            <dbl>  ## $ stage             <chr>  ## $ activity          <chr>  ## $ attribute9        <chr>  ## $ attribute10       <chr>  ## $ campaignid        <chr>  ## $ length_mm         <dbl>  ## $ precision         <dbl>  ## $ horzdir           <chr>  ## $ vertdir           <chr>  ## $ midx              <dbl>  ## $ midy              <dbl>  ## $ midz              <dbl>  ## $ sample            <chr>  ## $ status            <chr>  ## $ date_time         <chr>  ## $ location          <chr>  ## $ site              <chr>  ## $ depth_m           <chr>  ## $ successful_count  <chr>  ## $ successful_length <chr>  ## $ marine_region     <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"synonyms-in-the-length-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Length measurements or 3D points without a number (EM only)","what":"Synonyms in the length data","title":"Check fish data from transect based methods","text":"","code":"synonyms_in_length <- dplyr::left_join(complete_length, CheckEM::aus_synonyms) %>%       dplyr::filter(!is.na(genus_correct)) %>%       dplyr::mutate('old name' = paste(family, genus, species, sep = \" \")) %>%       dplyr::mutate('new name' = paste(family_correct, genus_correct, species_correct, sep = \" \")) %>%       dplyr::select('old name', 'new name') %>%       dplyr::distinct() ## Joining with `by = join_by(family, genus, species)` message(paste(nrow(synonyms_in_length), \"synonyms used in the length data\")) ## 0 synonyms used in the length data glimpse(synonyms_in_length) ## Rows: 0 ## Columns: 2 ## $ `old name` <chr>  ## $ `new name` <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"change-synonyms-names-in-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Length measurements or 3D points without a number (EM only)","what":"Change synonyms names in data","title":"Check fish data from transect based methods","text":"Now identified species names updated spelt wrong need decide want change names data continue using old names. want update names use next two chunks. like retain old names skip next two chunks. NOTE: change original annotation files, data save end script.","code":"complete_length <- dplyr::left_join(complete_length, CheckEM::aus_synonyms) %>%   dplyr::mutate(genus = ifelse(!genus_correct%in%c(NA), genus_correct, genus)) %>%   dplyr::mutate(species = ifelse(!is.na(species_correct), species_correct, species)) %>%   dplyr::mutate(family = ifelse(!is.na(family_correct), family_correct, family)) %>%   dplyr::select(-c(family_correct, genus_correct, species_correct)) %>%   dplyr::mutate(scientific = paste(family, genus, species)) ## Joining with `by = join_by(family, genus, species)`"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"species-not-observed-in-the-region-before","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Species not observed in the region before","title":"Check fish data from transect based methods","text":"check use list species known geographical ranges check data identify species outside range. two life history data sets choose check species outside known geographical range. Australia Global lists. use Australia life history list use CheckEM::australia_life_history use Global life history list use CheckEM::global_life_history. run check count length data, sometimes species count length. species identified checks present chosen life-history list. Sometimes range data limited, possible species flagged check actually present area. need critically think species flagged check.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"species-out-of-range-in-the-length-data","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Species not observed in the region before","what":"Species out of range in the length data","title":"Check fish data from transect based methods","text":"Check species range length data.","code":"length_species_not_observed_region <- complete_length %>%   dplyr::distinct(campaignid, sample, family, genus, species, marine_region, number) %>%   dplyr::anti_join(., expand_life_history(CheckEM::australia_life_history), by = c(\"family\", \"genus\", \"species\", \"marine_region\")) %>%   dplyr::filter(number > 0) %>%   dplyr::left_join(metadata) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species, marine_region) %>%   dplyr::distinct() %>%   dplyr::rename('marine region not observed in' = marine_region) %>%   dplyr::semi_join(., CheckEM::australia_life_history, by = c(\"family\", \"genus\", \"species\")) ## Joining with `by = join_by(campaignid, sample, marine_region)` message(paste(nrow(length_species_not_observed_region), \"species not observed in the region before\")) ## 0 species not observed in the region before glimpse(length_species_not_observed_region) ## Rows: 0 ## Columns: 5 ## $ campaignid                      <chr>  ## $ family                          <chr>  ## $ genus                           <chr>  ## $ species                         <chr>  ## $ `marine region not observed in` <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"species-not-listed-in-the-life-history-list","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Species not listed in the life history list","title":"Check fish data from transect based methods","text":"next check identifies species listed chosen life history list. misspelt family/genus/species name, species name invalid, name updated species name included life history list missing. need critically think species flagged determine error . use Australia life history list use CheckEM::australia_life_history use Global life history list use CheckEM::global_life_history. NOTE. believe species flagged check included life history list please email brooke.gibbons@uwa.edu.au full species name list added (Global Australia).","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"species-in-the-length-data-that-are-not-listed","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks > Species not listed in the life history list","what":"Species in the length data that are not listed","title":"Check fish data from transect based methods","text":"","code":"length_species_not_in_list <- complete_length %>%   dplyr::anti_join(., CheckEM::australia_life_history, by = c(\"family\", \"genus\", \"species\")) %>%   dplyr::filter(number > 0) %>%   dplyr::left_join(metadata) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species) %>%   dplyr::distinct() ## Joining with `by = join_by(campaignid, sample, status, date_time, location, ## site, depth_m, successful_count, successful_length, marine_region)` message(paste(nrow(length_species_not_in_list), \"species not in chosen life history list\")) ## 0 species not in chosen life history list glimpse(length_species_not_in_list) ## Rows: 0 ## Columns: 4 ## $ campaignid <chr>  ## $ family     <chr>  ## $ genus      <chr>  ## $ species    <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"length-measurements-smaller-or-bigger-than-the-fishbase-minimum-and-maximums","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Length measurements smaller or bigger than the fishbase minimum and maximums","title":"Check fish data from transect based methods","text":"Length data extremely valuable important fish precisely accurately measured. can use check identify measurements bigger maximum size listed fishbase. However, think important check species nearing maximum size (e.g 85% maximum). also think important check species small. Fishbase list minimum size, recommend checking length measurements 15% maximum size. function can edit cut offs (15% 85%) see fit. believe size limits particular species incorrect fill feedback form CheckEM web based app (see tab Edit maximum lengths) supply new maximum size limit.","code":"incorrect_lengths <- left_join(complete_length, create_min_max(CheckEM::australia_life_history, minimum = 0.15, maximum = 0.85)) %>%   dplyr::filter(length_mm < min_length_mm | length_mm > max_length_mm) %>%   mutate(reason = ifelse(length_mm < min_length_mm, \"too small\", \"too big\")) %>%   dplyr::select(campaignid, sample, family, genus, species, length_mm, min_length_mm, max_length_mm, length_max_mm, reason, any_of(c(\"em_comment\", \"frame_left\")), length_max_mm) %>%   mutate(difference = ifelse(reason %in% c(\"too small\"), (min_length_mm - length_mm), (length_mm - max_length_mm))) %>%   dplyr::mutate(percent_of_fb_max = (length_mm/length_max_mm)*100) %>%   dplyr::left_join(metadata) %>%   dplyr::select(campaignid, dplyr::any_of(c(\"opcode\", \"period\")), family, genus, species, length_mm, min_length_mm, max_length_mm, length_max_mm, reason, any_of(c(\"em_comment\", \"frame_left\")), difference, percent_of_fb_max) ## Joining with `by = join_by(genus)` ## Joining with `by = join_by(family, genus, species)` ## Joining with `by = join_by(campaignid, sample)` too_small <- incorrect_lengths %>%   dplyr::filter(reason %in% \"too small\")  too_big <- incorrect_lengths %>%   dplyr::filter(reason %in% \"too big\")  message(paste(nrow(too_small), \"lengths are too small\")) ## 0 lengths are too small glimpse(too_small) ## Rows: 0 ## Columns: 11 ## $ campaignid        <chr>  ## $ family            <chr>  ## $ genus             <chr>  ## $ species           <chr>  ## $ length_mm         <dbl>  ## $ min_length_mm     <dbl>  ## $ max_length_mm     <dbl>  ## $ length_max_mm     <dbl>  ## $ reason            <chr>  ## $ difference        <dbl>  ## $ percent_of_fb_max <dbl> message(paste(nrow(too_big), \"lengths are too big\")) ## 1 lengths are too big glimpse(too_big) ## Rows: 1 ## Columns: 11 ## $ campaignid        <chr> \"2017-04_Marmion.MP.Monitoring_stereoDOVs\" ## $ family            <chr> \"Pomacentridae\" ## $ genus             <chr> \"Parma\" ## $ species           <chr> \"occidentalis\" ## $ length_mm         <dbl> 283.05 ## $ min_length_mm     <dbl> 45 ## $ max_length_mm     <dbl> 255 ## $ length_max_mm     <dbl> 300 ## $ reason            <chr> \"too big\" ## $ difference        <dbl> 28.05 ## $ percent_of_fb_max <dbl> 94.35"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"number-of-3d-points-and-length-measurements-over-the-rms-limit-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of 3D points and length measurements over the RMS limit (EM only)","title":"Check fish data from transect based methods","text":"check can set RMS limit, identify measurements larger RMS.","code":"# TODO split this by lengths and 3D points  rms_limit <- 20 # in mm  over_rms <- complete_length %>%   dplyr::filter(as.numeric(rms) > rms_limit)  message(paste(nrow(over_rms), \"lengths over RMS limit\")) ## 0 lengths over RMS limit glimpse(over_rms) ## Rows: 0 ## Columns: 19 ## $ campaignid        <chr>  ## $ sample            <chr>  ## $ family            <chr>  ## $ genus             <chr>  ## $ species           <chr>  ## $ length_mm         <dbl>  ## $ number            <dbl>  ## $ range             <dbl>  ## $ rms               <dbl>  ## $ precision         <dbl>  ## $ status            <chr>  ## $ date_time         <chr>  ## $ location          <chr>  ## $ site              <chr>  ## $ depth_m           <chr>  ## $ successful_count  <chr>  ## $ successful_length <chr>  ## $ marine_region     <chr>  ## $ scientific        <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"number-of-length-measurements-over-the-precision-limit-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of length measurements over the precision limit (EM only)","title":"Check fish data from transect based methods","text":"check can set precision limit, identify measurements larger precision.","code":"# TODO - change to be a % precision/length_mm * 100  precision_limit <- 10 # in %  over_precision <- complete_length %>%   dplyr::filter(as.numeric(precision) > precision_limit)  message(paste(nrow(over_precision), \"lengths over precision limit\")) ## 2 lengths over precision limit glimpse(over_precision) ## Rows: 2 ## Columns: 19 ## $ campaignid        <chr> \"2017-04_Shoalwater.MP.Monitoring_stereoDOVs\", \"2017… ## $ sample            <chr> \"BP_SZ_20170428_DOV-T1\", \"BP_SZ_20170428_DOV-T1\" ## $ family            <chr> \"Kyphosidae\", \"Kyphosidae\" ## $ genus             <chr> \"Kyphosus\", \"Kyphosus\" ## $ species           <chr> \"sydneyanus\", \"sydneyanus\" ## $ length_mm         <dbl> 631.3505, 402.7545 ## $ number            <dbl> 1, 1 ## $ range             <dbl> 4077.000, 4166.826 ## $ rms               <dbl> 12.28661, 10.75454 ## $ precision         <dbl> 19.80021, 10.31061 ## $ status            <chr> \"No-take\", \"No-take\" ## $ date_time         <chr> \"2017-04-28T11:30:00+08:00\", \"2017-04-28T11:30:00+08… ## $ location          <chr> \"Shoalwater Islands\", \"Shoalwater Islands\" ## $ site              <chr> \"Becher Point SZ 1\", \"Becher Point SZ 1\" ## $ depth_m           <chr> \"5\", \"5\" ## $ successful_count  <chr> \"Yes\", \"Yes\" ## $ successful_length <chr> \"Yes\", \"Yes\" ## $ marine_region     <chr> \"South-west\", \"South-west\" ## $ scientific        <chr> \"Kyphosidae Kyphosus sydneyanus\", \"Kyphosidae Kyphos…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"number-of-3d-points-and-length-measurements-over-the-range-limit-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of 3D points and length measurements over the range limit (EM only)","title":"Check fish data from transect based methods","text":"check can set range limit, identify measurements larger range.","code":"range_limit <- 10 # in metres  over_range <- complete_length %>%   dplyr::filter(as.numeric(range) > (range_limit * 1000))  message(paste(nrow(over_range), \"lengths over range limit\")) ## 0 lengths over range limit glimpse(over_range) ## Rows: 0 ## Columns: 19 ## $ campaignid        <chr>  ## $ sample            <chr>  ## $ family            <chr>  ## $ genus             <chr>  ## $ species           <chr>  ## $ length_mm         <dbl>  ## $ number            <dbl>  ## $ range             <dbl>  ## $ rms               <dbl>  ## $ precision         <dbl>  ## $ status            <chr>  ## $ date_time         <chr>  ## $ location          <chr>  ## $ site              <chr>  ## $ depth_m           <chr>  ## $ successful_count  <chr>  ## $ successful_length <chr>  ## $ marine_region     <chr>  ## $ scientific        <chr>"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"number-of-3d-points-and-length-measurements-outside-transect-em-only","dir":"Articles > R-workflows","previous_headings":"Quality Control Checks","what":"Number of 3D points and length measurements outside transect (EM only)","title":"Check fish data from transect based methods","text":"check can set transect belt width identify measurements outside transect.","code":"transect_belt_width <- 5 # in metres  transect_limit <- (transect_belt_width*1000)/2  length_outside_transect <- length %>%   dplyr::mutate(x = as.numeric(x),                 y = as.numeric(y),                 z = as.numeric(z),                 midx = as.numeric(midx),                 midy = as.numeric(midy),                 midz = as.numeric(midz)) %>%   tidyr::replace_na(list(x = 0, y = 0, midx = 0, midy = 0)) %>%   dplyr::filter(c(midx > transect_limit | midx < -transect_limit | midy > transect_limit | midy < -transect_limit | x > transect_limit | x < -transect_limit | y > transect_limit | y < -transect_limit))   message(paste(nrow(length_outside_transect), \"lengths outside transect limit\")) ## 0 lengths outside transect limit glimpse(length_outside_transect) ## Rows: 0 ## Columns: 46 ## $ opcode            <chr>  ## $ imageptpair       <chr>  ## $ filenameleft      <chr>  ## $ frameleft         <chr>  ## $ filenameright     <chr>  ## $ frameright        <chr>  ## $ time              <chr>  ## $ period            <chr>  ## $ periodtime        <chr>  ## $ x                 <dbl>  ## $ y                 <dbl>  ## $ z                 <dbl>  ## $ sx                <chr>  ## $ sy                <chr>  ## $ sz                <chr>  ## $ rms               <dbl>  ## $ range             <dbl>  ## $ direction         <chr>  ## $ family            <chr>  ## $ genus             <chr>  ## $ species           <chr>  ## $ code              <chr>  ## $ number            <dbl>  ## $ stage             <chr>  ## $ activity          <chr>  ## $ attribute9        <chr>  ## $ attribute10       <chr>  ## $ campaignid        <chr>  ## $ length_mm         <dbl>  ## $ precision         <dbl>  ## $ horzdir           <chr>  ## $ vertdir           <chr>  ## $ midx              <dbl>  ## $ midy              <dbl>  ## $ midz              <dbl>  ## $ sample            <chr>  ## $ status            <chr>  ## $ date_time         <chr>  ## $ location          <chr>  ## $ site              <chr>  ## $ depth_m           <chr>  ## $ successful_count  <chr>  ## $ successful_length <chr>  ## $ marine_region     <chr>  ## $ count             <chr>  ## $ transect          <chr> # 1. Check for missing length weight relationship # taxa_missing_lw <- complete_length %>% #   dplyr::distinct(family, genus, species) %>% #   dplyr::anti_join(filter(CheckEM::australia_life_history, !is.na(a)), by = c(\"family\", \"genus\", \"species\")) #  # #2. Fill length data with relevant a and b and if blank use family--- # length_species_ab <- CheckEM::australia_life_history %>% # done this way around to avoid duplicating Family coloum #   dplyr::select(-family) %>% #   dplyr::inner_join(length, ., by = c(\"genus\", \"species\")) # only keeps row if has a and b #  # # 3. Make family length.weight # family_lw <- CheckEM::australia_life_history %>% #   dplyr::group_by(family, length_max_type) %>% #   dplyr::mutate(log.a = log10(a)) %>% #   dplyr::summarise(a = 10^(mean(log.a, na.rm = T)), #                    b = mean(b, na.rm = T), #                    all = mean(all, na.rm = T), #                    bll = mean(bll, na.rm = T)) %>% #   dplyr::ungroup() %>% #   dplyr::filter(!is.na(a)) %>% #   dplyr::mutate(all = str_replace_all(all, \"NaN\", \"0\")) %>% #   dplyr::mutate(bll = str_replace_all(bll, \"NaN\", \"1\")) %>% #   dplyr::mutate(all = as.numeric(all)) %>% #   dplyr::mutate(bll = as.numeric(bll)) %>% #   dplyr::mutate(rank = ifelse(length_max_type == \"FL\", 1, ifelse(length_max_type == \"TL\", 2, 3))) %>% #   dplyr::mutate(min.rank = rank - min(rank, na.rm = TRUE)) %>% #   dplyr::filter(min.rank ==  0) #  # length_family_ab <- length %>% #   dplyr::anti_join(australia_life_history(), by = c(\"genus\", \"species\")) %>% #   dplyr::left_join(family_lw, by = \"family\") #  # # 5. Fill length data with relevant a and b and if blank use family--- # complete.length.number.mass <- length_species_ab %>% #   bind_rows(length_family_ab) %>% #   dplyr::filter(!is.na(a)) %>% #this gets rid of species with no lw #   dplyr::mutate(length.cm = length_mm/10) %>% #   dplyr::mutate(all = ifelse(is.na(all) & length_max_type%in%c(\"TL\", \"FL\", \"SL\"), 0, all)) %>% # Temporary fix, remove later #   dplyr::mutate(bll = ifelse(is.na(bll) & length_max_type%in%c(\"TL\", \"FL\", \"SL\"), 1, bll)) %>% # Temporary fix, remove later #   dplyr::mutate(adjLength = ((length.cm*bll)+all)) %>% #   dplyr::mutate(mass.g = (adjLength^b)*a*number) %>% #   dplyr::filter(mass.g>0) %>% #   dplyr::full_join(metadata.regions()) %>% #   dplyr::select(c(campaignid, sample, family, genus, species, length_mm, number, mass.g, length.cm, code)) %>% # removed EM columns #   tidyr::complete(nesting(campaignid, sample), nesting(family, genus, species, code)) %>% #   tidyr::replace_na(list(mass.g = 0)) %>% #   dplyr::mutate(mass_kg = mass.g/1000)"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-fish-transect.html","id":"save-the-checked-data","dir":"Articles > R-workflows","previous_headings":"","what":"Save the checked data","title":"Check fish data from transect based methods","text":"","code":"saveRDS(complete_length,           file = here::here(paste0(\"r-workflows/data/staging/\",                        name, \"_complete-length.rds\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-habitat.html","id":"r-set-up","dir":"Articles > R-workflows","previous_headings":"","what":"R set up","title":"Checking habitat data exported from TransectMeasure","text":"Load necessary libraries. Set study name.","code":"library(devtools) library(CheckEM) library(tidyverse) library(ggplot2) library(ggbeeswarm) library(leaflet) library(leaflet.minicharts) library(RColorBrewer) library(here) library(tidyverse) name <- \"example-bruv-workflow\""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-habitat.html","id":"read-in-the-data","dir":"Articles > R-workflows","previous_headings":"","what":"Read in the data","title":"Checking habitat data exported from TransectMeasure","text":"Load format metadata. Save metadata R data file (creates lighter file saving .csv similar). Read points data exported Transect Measure, filter 2 dataframes relief habitat annotations. Filter data include habitat annotations. Filter data include relief annotations.","code":"metadata <- read_metadata(here::here(\"r-workflows/data/raw/\")) %>%     dplyr::select(campaignid, sample, longitude_dd, latitude_dd, date_time, location, site, depth_m, successful_count, successful_length, successful_habitat_forward, successful_habitat_backward) %>%   glimpse() ## reading metadata file: /home/runner/work/CheckEM/CheckEM/r-workflows/data/raw//2022-05_PtCloates_stereo-BRUVS_metadata.csv ## reading metadata file: /home/runner/work/CheckEM/CheckEM/r-workflows/data/raw//2023-03_SwC_stereo-BRUVs_Metadata.csv ## Rows: 94 ## Columns: 12 ## $ campaignid                  <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05… ## $ sample                      <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9… ## $ longitude_dd                <chr> \"113.5447\", \"113.5628\", \"113.5515\", \"113.5… ## $ latitude_dd                 <chr> \"-22.7221\", \"-22.6957\", \"-22.7379\", \"-22.7… ## $ date_time                   <chr> \"2022-05-22T10:03:24+08:00\", \"2022-05-22T1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"93.9\", \"77.3\", \"78.3\", \"73.9\", \"81.9\", \"7… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ successful_habitat_backward <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… saveRDS(metadata, file = here::here(paste0(\"r-workflows/data/tidy/\", name, \"_Metadata.rds\"))) points <- read_TM(here::here(\"r-workflows/data/raw/\"),                                sample = \"opcode\") habitat <- points %>%   dplyr::filter(relief_annotated %in% \"no\") %>%   dplyr::select(campaignid, sample, starts_with(\"level\"), scientific) %>%   glimpse() ## Rows: 1,241 ## Columns: 7 ## $ campaignid <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"20… ## $ sample     <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\",… ## $ level_2    <chr> \"Macroalgae\", \"Seagrasses\", \"Substrate\", \"Macroalgae\", \"Mac… ## $ level_3    <chr> \"Filamentous / filiform\", \"Strap-like leaves\", \"Unconsolida… ## $ level_4    <chr> \"Red\", NA, \"Sand / mud (<2mm)\", \"Red\", \"Red\", NA, NA, \"Brow… ## $ level_5    <chr> NA, NA, \"Coarse sand (with shell fragments)\", NA, NA, NA, N… ## $ scientific <chr> NA, \"Thalassodendron spp\", NA, NA, NA, \"Thalassodendron spp… relief <- points %>%   dplyr::filter(relief_annotated %in% \"yes\") %>%   dplyr::select(campaignid, sample, starts_with(\"level\"), scientific) %>%   glimpse() ## Rows: 1,242 ## Columns: 7 ## $ campaignid <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"20… ## $ sample     <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\",… ## $ level_2    <chr> NA, \"Relief\", \"Relief\", \"Relief\", NA, \"Relief\", \"Relief\", \"… ## $ level_3    <chr> NA, \"High\", \"High\", \"High\", NA, \"High\", \"Low / moderate\", \"… ## $ level_4    <chr> NA, \"High (>3m)\", \"High (>3m)\", \"High (>3m)\", NA, \"High (>3… ## $ level_5    <chr> NA, \"3\", \"3\", \"3\", NA, \"3\", \"2\", \"3\", NA, \"3\", \"2\", \"2\", NA… ## $ scientific <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-habitat.html","id":"check-the-data-for-a-variety-of-errors","dir":"Articles > R-workflows","previous_headings":"","what":"Check the data for a variety of errors","title":"Checking habitat data exported from TransectMeasure","text":"Set number expected annotations check . Check habitat annotations unexpected number annotation points. Check habitat annotations unexpected number annotation points. Check see samples habitat don’t match metadata. Check see samples metadata don’t matching habitat.","code":"num.points <- 20 wrong.points.habitat <- habitat %>%   group_by(campaignid, sample) %>%   summarise(points.annotated = n()) %>%   left_join(metadata) %>%   dplyr::mutate(expected = case_when(successful_habitat_forward %in% \"Yes\" & successful_habitat_backward %in% \"Yes\" ~ num.points * 2, successful_habitat_forward %in% \"Yes\" & successful_habitat_backward %in% \"No\" ~ num.points * 1, successful_habitat_forward %in% \"No\" & successful_habitat_backward %in% \"Yes\" ~ num.points * 1, successful_habitat_forward %in% \"No\" & successful_habitat_backward %in% \"No\" ~ num.points * 0)) %>%   dplyr::filter(!points.annotated == expected) %>%   glimpse() ## `summarise()` has grouped output by 'campaignid'. You can override using the ## `.groups` argument. ## Joining with `by = join_by(campaignid, sample)` ## Rows: 5 ## Columns: 14 ## Groups: campaignid [1] ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ sample                      <chr> \"21\", \"3\", \"37\", \"45\", \"47\" ## $ points.annotated            <int> 20, 41, 20, 20, 20 ## $ longitude_dd                <chr> \"114.857485\", \"114.9156417\", \"114.9235817\"… ## $ latitude_dd                 <chr> \"-34.06438333\", \"-34.10734167\", \"-34.10853… ## $ date_time                   <chr> \"18/03/2023 2:34\", \"15/03/2023 1:54\", \"15/… ## $ location                    <chr> NA, NA, NA, NA, NA ## $ site                        <chr> NA, NA, NA, NA, NA ## $ depth_m                     <chr> \"42.3\", \"46.7\", \"46.1\", \"61.9\", \"73\" ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\" ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\" ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\" ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\" ## $ expected                    <dbl> 40, 40, 40, 40, 40 wrong.points.relief <- relief %>%   group_by(campaignid, sample) %>%   summarise(points.annotated = n()) %>%   left_join(metadata) %>%   dplyr::mutate(expected = case_when(successful_habitat_forward %in% \"Yes\" & successful_habitat_backward %in% \"Yes\" ~ num.points * 2, successful_habitat_forward %in% \"Yes\" & successful_habitat_backward %in% \"No\" ~ num.points * 1, successful_habitat_forward %in% \"No\" & successful_habitat_backward %in% \"Yes\" ~ num.points * 1, successful_habitat_forward %in% \"No\" & successful_habitat_backward %in% \"No\" ~ num.points * 0)) %>%   dplyr::filter(!points.annotated == expected) %>%   glimpse() ## `summarise()` has grouped output by 'campaignid'. You can override using the ## `.groups` argument. ## Joining with `by = join_by(campaignid, sample)` ## Rows: 4 ## Columns: 14 ## Groups: campaignid [1] ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ sample                      <chr> \"17\", \"21\", \"23\", \"47\" ## $ points.annotated            <int> 41, 20, 41, 20 ## $ longitude_dd                <chr> \"114.85758\", \"114.857485\", \"114.9189517\", … ## $ latitude_dd                 <chr> \"-34.09634667\", \"-34.06438333\", \"-34.12832… ## $ date_time                   <chr> \"15/03/2023 3:00\", \"18/03/2023 2:34\", \"15/… ## $ location                    <chr> NA, NA, NA, NA ## $ site                        <chr> NA, NA, NA, NA ## $ depth_m                     <chr> \"43.3\", \"42.3\", \"41\", \"73\" ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\" ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\" ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\" ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\" ## $ expected                    <dbl> 40, 40, 40, 40 habitat.missing.metadata <- anti_join(habitat, metadata, by = c(\"campaignid\", \"sample\")) %>%   glimpse() ## Rows: 40 ## Columns: 7 ## $ campaignid <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"20… ## $ sample     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… ## $ level_2    <chr> \"Substrate\", \"Substrate\", \"Substrate\", \"Substrate\", \"Substr… ## $ level_3    <chr> \"Unconsolidated (soft)\", \"Unconsolidated (soft)\", \"Unconsol… ## $ level_4    <chr> \"Sand / mud (<2mm)\", \"Sand / mud (<2mm)\", \"Sand / mud (<2mm… ## $ level_5    <chr> \"Coarse sand (with shell fragments)\", \"Coarse sand (with sh… ## $ scientific <chr> NA, NA, NA, NA, NA, NA, NA, NA, \"Thalassodendron spp\", NA, … metadata.missing.habitat <- anti_join(metadata, habitat, by = c(\"campaignid\", \"sample\")) %>%   glimpse() ## Rows: 62 ## Columns: 12 ## $ campaignid                  <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05… ## $ sample                      <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9… ## $ longitude_dd                <chr> \"113.5447\", \"113.5628\", \"113.5515\", \"113.5… ## $ latitude_dd                 <chr> \"-22.7221\", \"-22.6957\", \"-22.7379\", \"-22.7… ## $ date_time                   <chr> \"2022-05-22T10:03:24+08:00\", \"2022-05-22T1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"93.9\", \"77.3\", \"78.3\", \"73.9\", \"81.9\", \"7… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ successful_habitat_backward <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/check-habitat.html","id":"format-and-save-the-final-tidy-dataset","dir":"Articles > R-workflows","previous_headings":"","what":"Format and save the final tidy dataset","title":"Checking habitat data exported from TransectMeasure","text":"Tidy habitat data joining complete schema file loaded CheckEM package. Save tidy habitat data R data file. Tidy relief data joining complete schema file loaded CheckEM package. Save tidy relief data R data file.","code":"tidy.habitat <- habitat %>%   dplyr::mutate(number = 1) %>%                                        left_join(catami) %>%   dplyr::select(campaignid, sample, number, starts_with(\"level\"), family, genus, species) %>%   dplyr::filter(!level_2 %in% c(\"\",\"Unscorable\", NA)) %>%     group_by(campaignid, sample, across(starts_with(\"level\")), family, genus, species) %>%   dplyr::tally(number, name = \"number\") %>%   ungroup() %>%                                                        dplyr::select(campaignid, sample, level_1, everything()) %>%   glimpse() ## Joining with `by = join_by(level_2, level_3, level_4, level_5)` ## Warning in left_join(., catami): Detected an unexpected many-to-many relationship between `x` and `y`. ## ℹ Row 23 of `x` matches multiple rows in `y`. ## ℹ Row 193 of `y` matches multiple rows in `x`. ## ℹ If a many-to-many relationship is expected, set `relationship = ##   \"many-to-many\"` to silence this warning. ## Rows: 369 ## Columns: 14 ## $ campaignid <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"20… ## $ sample     <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"12\", \"12\",… ## $ level_1    <chr> \"Biota\", \"Biota\", \"Biota\", \"Biota\", \"Biota\", \"Biota\", \"Biot… ## $ level_2    <chr> \"Macroalgae\", \"Macroalgae\", \"Macroalgae\", \"Macroalgae\", \"Se… ## $ level_3    <chr> \"Erect coarse branching\", \"Erect coarse branching\", \"Erect … ## $ level_4    <chr> \"Brown\", \"Red\", \"Red\", \"Red\", NA, \"Laminar\", \"Simple\", \"San… ## $ level_5    <chr> NA, NA, NA, NA, NA, NA, NA, \"Coarse sand (with shell fragme… ## $ level_6    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… ## $ level_7    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… ## $ level_8    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… ## $ family     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Le… ## $ genus      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Ec… ## $ species    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"ra… ## $ number     <dbl> 2, 3, 2, 1, 14, 1, 1, 3, 5, 8, 1, 2, 3, 3, 7, 7, 7, 7, 7, 2… saveRDS(tidy.habitat, file = here::here(paste0(\"r-workflows/data/staging/\", name, \"_habitat.rds\"))) tidy.relief <- relief %>%   dplyr::select(campaignid, sample, starts_with(\"level\"), scientific) %>%   dplyr::filter(!level_2 %in% c(\"\",\"Unscorable\", NA)) %>%                 dplyr::mutate(number = 1) %>%    left_join(catami) %>%   group_by(campaignid, sample, across(starts_with(\"level\"))) %>%    dplyr::tally(number, name = \"number\") %>%   ungroup() %>%                                                        glimpse() ## Joining with `by = join_by(level_2, level_3, level_4, level_5)` ## Rows: 73 ## Columns: 11 ## $ campaignid <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"20… ## $ sample     <chr> \"10\", \"10\", \"10\", \"12\", \"12\", \"14\", \"14\", \"14\", \"15\", \"15\",… ## $ level_2    <chr> \"Relief\", \"Relief\", \"Relief\", \"Relief\", \"Relief\", \"Relief\",… ## $ level_3    <chr> \"High\", \"High\", \"Low / moderate\", \"High\", \"Low / moderate\",… ## $ level_4    <chr> \"High (>3m)\", \"Wall\", \"Moderate (1-3m)\", \"High (>3m)\", \"Mod… ## $ level_5    <chr> \"3\", \"4\", \"2\", \"3\", \"2\", \"3\", \"1\", \"2\", \"3\", \"4\", \"1\", \"2\",… ## $ level_1    <chr> \"Physical\", \"Physical\", \"Physical\", \"Physical\", \"Physical\",… ## $ level_6    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… ## $ level_7    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… ## $ level_8    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,… ## $ number     <dbl> 8, 10, 5, 17, 4, 14, 3, 8, 16, 1, 4, 6, 20, 2, 13, 6, 14, 1… saveRDS(tidy.relief, file = here::here(paste0(\"r-workflows/data/staging/\", name, \"_relief.rds\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/fish-modelling.html","id":"r-setup","dir":"Articles > R-workflows","previous_headings":"","what":"R setup","title":"Select top models for fish using FSSgam","text":"Load libraries. packages available CRAN, aside ‘FSSgam’, can installed following instructions provided GitHub repository https://github.com/beckyfisher/FSSgam. Set study name. Study names used throughout make reproducible code can easily shifted different campaigns projects still providing meaningful filenames. Load fish count data. data created previous workflow, ‘Format & visualise fish data’.","code":"library(CheckEM) library(tidyverse) library(mgcv) library(devtools) library(FSSgam) library(here) library(ggplot2) library(ggnewscale) library(viridis) library(terra) library(sf) library(patchwork) name <- 'example-bruv-workflow' tidy.count <- readRDS(here::here(paste0('r-workflows/data/tidy/',                        name,'_tidy-count.rds'))) %>%   dplyr::filter(!is.na(mbdepth)) %>% # If this filters out any then you need to go back and create your spatial layers   glimpse() ## Rows: 64 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"10\", \"10\", \"12\", \"12\", \"14\", \"14\", \"15\", \"15\", \"16\", \"16… ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"total_abundance\", \"species_richness\", \"total_abundance\",… ## $ number       <dbl> 111, 13, 94, 15, 191, 9, 146, 16, 99, 14, 312, 18, 38, 13… ## $ longitude_dd <dbl> 114.8533, 114.8533, 114.8816, 114.8816, 114.8686, 114.868… ## $ latitude_dd  <dbl> -34.08387, -34.08387, -34.13249, -34.13249, -34.07530, -3… ## $ depth        <chr> \"44.3\", \"44.3\", \"42.6\", \"42.6\", \"42.7\", \"42.7\", \"45.3\", \"… ## $ mbdepth      <dbl> -42.77519, -42.77519, -42.02835, -42.02835, -41.07679, -4… ## $ slope        <dbl> 0.005708777, 0.005708777, 0.013768068, 0.013768068, 0.078… ## $ aspect       <dbl> 72.31942, 72.31942, 110.35012, 110.35012, 215.54254, 215.… ## $ tpi          <dbl> 0.05208921, 0.05208921, 0.03892708, 0.03892708, 0.2611088… ## $ tri          <dbl> 0.05208921, 0.05208921, 0.06246567, 0.06246567, 0.3096442… ## $ roughness    <dbl> 0.11757660, 0.11757660, 0.30690765, 0.30690765, 0.7959022… ## $ detrended    <dbl> -2.8542883, -2.8542883, -5.8822656, -5.8822656, -6.646017… ## $ mean_relief  <dbl> 3.217391, 3.217391, 2.809524, 2.809524, 2.440000, 2.44000… ## $ sd_relief    <dbl> 0.7952428, 0.7952428, 0.4023739, 0.4023739, 0.7118052, 0.… ## $ reef         <dbl> 0.9690722, 0.9690722, 1.0000000, 1.0000000, 0.9420290, 0.…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/fish-modelling.html","id":"set-up-data-for-modelling","dir":"Articles > R-workflows","previous_headings":"","what":"Set up data for modelling","title":"Select top models for fish using FSSgam","text":"Set potential predictor variables may used explain patterns found response variables. important select ecologically meaningful variables influence chosen response variable. Create correlation matrix assess correlations predictor variables. variables correlation greater 0.95, one variables included model selection. example data set, ‘roughness’, ‘slope’ ‘tri’ highly correlated, include roughness final predictor variable. Plot individual predictors assess transformations necessary. suggest use transformations absolutely necessary. example data set, response variables relatively balanced distributions, therefor left untransformed. important note example dataset, spread predictor variables across full range ideal, gaps key predictors depth detrended bathymetry. working GAMs, gaps outliers like may create spurious relationships, therefor suggest running scripts complete data small example data set provided .  Reset predictor variables remove highly correlated variables include transformed variables. Check make sure response variables less 80% zeroes. Full-subset GAM modelling produce unreliable results data zero inflated. Add directory save model outputs, set R environment model selection.","code":"pred.vars <- c(\"mbdepth\", \"roughness\", \"slope\", \"detrended\",                \"tpi\", \"tri\", \"aspect\", \"reef\") round(cor(tidy.count[ , pred.vars]), 2) ##           mbdepth roughness slope detrended   tpi   tri aspect  reef ## mbdepth      1.00     -0.66 -0.65     -0.89  0.03 -0.59  -0.32 -0.17 ## roughness   -0.66      1.00  0.99      0.48  0.29  0.99   0.06  0.19 ## slope       -0.65      0.99  1.00      0.47  0.29  0.99   0.06  0.18 ## detrended   -0.89      0.48  0.47      1.00  0.00  0.42   0.39  0.34 ## tpi          0.03      0.29  0.29      0.00  1.00  0.35  -0.02  0.01 ## tri         -0.59      0.99  0.99      0.42  0.35  1.00   0.04  0.19 ## aspect      -0.32      0.06  0.06      0.39 -0.02  0.04   1.00 -0.05 ## reef        -0.17      0.19  0.18      0.34  0.01  0.19  -0.05  1.00 CheckEM::plot_transformations(pred.vars = pred.vars, dat = tidy.count) pred.vars <- c(\"mbdepth\", \"roughness\", \"detrended\",                \"tpi\", \"aspect\", \"reef\") unique.vars <- unique(as.character(tidy.count$response))  resp.vars <- character() for(i in 1:length(unique.vars)){   temp.dat <- tidy.count[which(tidy.count$response == unique.vars[i]), ]   if(length(which(temp.dat$number == 0)) / nrow(temp.dat) < 0.8){     resp.vars <- c(resp.vars, unique.vars[i])} } resp.vars ## [1] \"total_abundance\"  \"species_richness\" outdir <- (\"r-workflows/model output/fish/\")  out.all <- list() var.imp <- list()"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/fish-modelling.html","id":"run-the-full-subset-model-selection-process-for-count-metrics","dir":"Articles > R-workflows","previous_headings":"","what":"Run the full subset model selection process for count metrics","title":"Select top models for fish using FSSgam","text":"loop adapted @beckyfisher/FSSgam, examples documentation available GitHub Fisher, R, Wilson, SK, Sin, TM, Lee, AC, Langlois, TJ. simple function full-subsets multiple regression ecology R. Ecol Evol. 2018; 8: 6104–6113. https://doi.org/10.1002/ece3.4134. Tidy model fits importance scores. combined models fits importance scores model selection lenght metrics. Load fish length data. data created previous workflow, ‘Format & visualise fish data’. Check make sure response variables less 80% zeroes. Full-subset GAM modelling produce unreliable results data zero inflated. Set R environment model selection.","code":"for(i in 1:length(resp.vars)){   use.dat = as.data.frame(tidy.count[which(tidy.count$response == resp.vars[i]),])   print(resp.vars[i])    Model1  <- gam(number ~ s(mbdepth, k = 3, bs = 'cr'),                  family = gaussian(link = \"identity\"),  data = use.dat)      model.set <- generate.model.set(use.dat = use.dat,                                test.fit = Model1,                                pred.vars.cont = pred.vars,                                factor.smooth.interactions = NA,                                cyclic.vars = \"aspect\",                                k = 3)   out.list <- fit.model.set(model.set,                          max.models = 600,                          parallel = T)   names(out.list)      out.list$failed.models    mod.table = out.list$mod.data.out    mod.table = mod.table[order(mod.table$AICc),]   mod.table$cumsum.wi = cumsum(mod.table$wi.AICc)   out.i = mod.table[which(mod.table$delta.AICc <= 2),]   out.all = c(out.all,list(out.i))   var.imp = c(var.imp,list(out.list$variable.importance$aic$variable.weights.raw))      for(m in 1:nrow(out.i)){     best.model.name = as.character(out.i$modname[m])     png(file = here::here(paste(outdir, paste(name, m, resp.vars[i], \"mod_fits.png\", sep = \"_\"), sep = \"/\")))     if(best.model.name != \"null\"){       par(mfrow = c(3,1), mar = c(9, 4, 3, 1))       best.model = out.list$success.models[[best.model.name]]       plot(best.model, all.terms = T,pages = 1,residuals = T,pch = 16)       mtext(side = 2, text = resp.vars[i], outer = F)}       dev.off()   } } names(out.all) <- resp.vars names(var.imp) <- resp.vars all.mod.fits <- list_rbind(out.all, names_to = \"response\") all.var.imp  <- as.data.frame(do.call(\"rbind\", var.imp)) tidy.length <- readRDS(here::here(paste0('r-workflows/data/tidy/',                        name,'_tidy-length.rds'))) %>%   dplyr::filter(!is.na(mbdepth)) %>% # If this filters out any then you need to go back and create your spatial layers   glimpse() ## Rows: 64 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"15\", \"17\", \"19\", \"23\", \"24\", \"26\", \"29\", \"3\", \"31\", \"32\"… ## $ number       <dbl> 1, 1, 8, 3, 2, 3, 4, 1, 4, 6, 1, 3, 1, 2, 4, 2, 6, 1, 13,… ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"greater than Lm\", \"greater than Lm\", \"greater than Lm\", … ## $ longitude_dd <dbl> 114.8444, 114.8576, 114.7822, 114.9190, 114.8485, 114.928… ## $ latitude_dd  <dbl> -34.08478, -34.09635, -34.12047, -34.12832, -34.11789, -3… ## $ depth        <chr> \"45.3\", \"43.3\", \"73.6\", \"41\", \"45.6\", \"36\", \"42.6\", \"46.7… ## $ mbdepth      <dbl> -44.29804, -42.74676, -71.60112, -38.25594, -44.23959, -4… ## $ slope        <dbl> 0.108975978, 0.008719478, 0.880997142, 0.444838455, 0.103… ## $ aspect       <dbl> 264.03427, 30.76545, 262.35388, 294.10675, 257.20307, 40.… ## $ tpi          <dbl> -0.19527912, 0.02505112, 1.04176044, 0.47694588, 0.042278… ## $ tri          <dbl> 0.34487247, 0.03473282, 2.80258274, 1.83670998, 0.3347983… ## $ roughness    <dbl> 0.91366196, 0.09923935, 9.01136017, 5.30128479, 1.2933082… ## $ detrended    <dbl> -0.2281526, -3.1375041, 17.9911461, -8.6934719, 2.9724391… ## $ mean_relief  <dbl> 2.518519, 3.333333, 2.583333, 3.555556, 3.360000, 4.00000… ## $ sd_relief    <dbl> 0.8024180, 0.9128709, 0.5036102, 0.8555853, 0.4898979, 0.… ## $ reef         <dbl> 0.8292683, 1.0000000, 0.9493671, 1.0000000, 1.0000000, 1.… unique.vars <- unique(as.character(tidy.length$response))  resp.vars <- character() for(i in 1:length(unique.vars)){   temp.dat <- tidy.length[which(tidy.length$response == unique.vars[i]), ]   if(length(which(temp.dat$number == 0)) / nrow(temp.dat) < 0.8){     resp.vars <- c(resp.vars, unique.vars[i])} } resp.vars ## [1] \"greater than Lm\" out.all = list() var.imp = list()"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/fish-modelling.html","id":"run-the-full-subset-model-selection-process-for-length-metrics","dir":"Articles > R-workflows","previous_headings":"","what":"Run the full subset model selection process for length metrics","title":"Select top models for fish using FSSgam","text":"loop adapted @beckyfisher/FSSgam, examples documentation available GitHub Fisher, R, Wilson, SK, Sin, TM, Lee, AC, Langlois, TJ. simple function full-subsets multiple regression ecology R. Ecol Evol. 2018; 8: 6104–6113. https://doi.org/10.1002/ece3.4134. Combine model fits importance scores previously created full subsets modelling count metrics, save files.","code":"for(i in 1:length(resp.vars)){   use.dat = as.data.frame(tidy.length[which(tidy.length$response == resp.vars[i]),])   print(resp.vars[i])    Model1  <- gam(number ~ s(mbdepth, k = 3, bs = 'cr'),                  family = tw(),  data = use.dat)      model.set <- generate.model.set(use.dat = use.dat,                                test.fit = Model1,                                pred.vars.cont = pred.vars,                                factor.smooth.interactions = NA,                                cyclic.vars = \"aspect\",                                 k = 3                                )   out.list <- fit.model.set(model.set,                          max.models = 600,                          parallel = T)   names(out.list)      out.list$failed.models   mod.table = out.list$mod.data.out   mod.table = mod.table[order(mod.table$AICc),]   mod.table$cumsum.wi = cumsum(mod.table$wi.AICc)   out.i = mod.table[which(mod.table$delta.AICc<=2),]   out.all = c(out.all, list(out.i))   var.imp = c(var.imp, list(out.list$variable.importance$aic$variable.weights.raw))      for(m in 1:nrow(out.i)){     best.model.name = as.character(out.i$modname[m])     png(file = here::here(paste(outdir, paste(name, m, resp.vars[i], \"mod_fits.png\", sep = \"_\"), sep = \"/\")))     if(best.model.name != \"null\"){       par(mfrow = c(3,1), mar = c(9, 4, 3, 1))       best.model = out.list$success.models[[best.model.name]]       plot(best.model, all.terms = T, pages = 1, residuals = T, pch = 16)       mtext(side = 2, text = resp.vars[i], outer = F)}       dev.off()   } } names(out.all) <- resp.vars names(var.imp) <- resp.vars all.mod.fits <- bind_rows(all.mod.fits, list_rbind(out.all, names_to = \"response\")) all.var.imp  <- bind_rows(all.var.imp, as.data.frame(do.call(\"rbind\",var.imp))) write.csv(all.mod.fits[ , -2], file = here::here(paste0(outdir, name, \"_all.mod.fits.csv\"))) write.csv(all.var.imp,         file = here::here(paste0(outdir, name, \"_all.var.imp.csv\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/fish-predictions.html","id":"r-setup","dir":"Articles > R-workflows","previous_headings":"","what":"R setup","title":"Generate Generalized Additive Model predictions of fish","text":"Load libraries. packages available CRAN, aside ‘FSSgam’, can installed following instructions provided GitHub repository https://github.com/beckyfisher/FSSgam. Set study name. Study names used throughout make reproducible code can easily shifted different campaigns projects still providing meaningful filenames.","code":"library(CheckEM) library(tidyverse) library(mgcv) library(devtools) library(FSSgam) library(here) library(ggplot2) library(ggnewscale) library(viridis) library(terra) library(sf) library(patchwork) name <- 'example-bruv-workflow'"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/fish-predictions.html","id":"set-up-data-for-prediction","dir":"Articles > R-workflows","previous_headings":"","what":"Set up data for prediction","title":"Generate Generalized Additive Model predictions of fish","text":"Load count data (MaxN). data crated previous workflow, ‘Format visualise fish data’. Load fish length data. data created previous workflow, ‘Format & visualise fish data’. Combine count length datasets make simple code. Filter data include 1 response variable. example included models fish total abundance, uses dummy model selected FSSgam, order provide necessary code produce fish predictions types response variable. example data Commonwealth National Park Zone (status = “-take”), overwritten status column include “Fished” “-take”. Manually set top model selected previous workflow, ‘Select top model fish using FSSgam’. Take care make sure matches model provided FSSgam (eg. number knots (k), smooth terms (bs), random effects). Remember example model, hence warning message using example data! Generate dataframe values detrended bathymetry holding predictor variables mean. Predict total abundance across range detrended bathymetry, using ‘predict.gam’ function. Combine two dataframes create mean standard deviation values relationship total abundance detrended bathymetry. Generate dataframe values status (factor variable) holding predictor variables mean. Predict total abundance two levels factor variable status, using ‘predict.gam’ function. Combine two dataframes create mean standard deviation values relationship total abundance status. Generate dataframe values aspect holding predictor variables mean. Predict total abundance across range aspect, using ‘predict.gam’ function. Combine two dataframes create mean standard deviation values relationship total abundance aspect. Create tidy plots visualise relationship fish total abundance detrended bathymetry.  Create tidy plots visualise relationship fish total abundance status. Note plot factor variable, relationship represented bar plots.  Create tidy plots visualise relationship fish total abundance aspect. Note aspect circular variable (compasss bearing 0 360 degrees), thus relationship represented polar plot.","code":"tidy.count <- readRDS(here::here(paste0('r-workflows/data/tidy/',                        name,'_tidy-count.rds'))) %>%   dplyr::filter(!is.na(mbdepth)) %>% # If this filters out any then you need to go back and create your spatial layers   glimpse() ## Rows: 64 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"10\", \"10\", \"12\", \"12\", \"14\", \"14\", \"15\", \"15\", \"16\", \"16… ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"total_abundance\", \"species_richness\", \"total_abundance\",… ## $ number       <dbl> 111, 13, 94, 15, 191, 9, 146, 16, 99, 14, 312, 18, 38, 13… ## $ longitude_dd <dbl> 114.8533, 114.8533, 114.8816, 114.8816, 114.8686, 114.868… ## $ latitude_dd  <dbl> -34.08387, -34.08387, -34.13249, -34.13249, -34.07530, -3… ## $ depth        <chr> \"44.3\", \"44.3\", \"42.6\", \"42.6\", \"42.7\", \"42.7\", \"45.3\", \"… ## $ mbdepth      <dbl> -42.77519, -42.77519, -42.02835, -42.02835, -41.07679, -4… ## $ slope        <dbl> 0.005708777, 0.005708777, 0.013768068, 0.013768068, 0.078… ## $ aspect       <dbl> 72.31942, 72.31942, 110.35012, 110.35012, 215.54254, 215.… ## $ tpi          <dbl> 0.05208921, 0.05208921, 0.03892708, 0.03892708, 0.2611088… ## $ tri          <dbl> 0.05208921, 0.05208921, 0.06246567, 0.06246567, 0.3096442… ## $ roughness    <dbl> 0.11757660, 0.11757660, 0.30690765, 0.30690765, 0.7959022… ## $ detrended    <dbl> -2.8542883, -2.8542883, -5.8822656, -5.8822656, -6.646017… ## $ mean_relief  <dbl> 3.217391, 3.217391, 2.809524, 2.809524, 2.440000, 2.44000… ## $ sd_relief    <dbl> 0.7952428, 0.7952428, 0.4023739, 0.4023739, 0.7118052, 0.… ## $ reef         <dbl> 0.9690722, 0.9690722, 1.0000000, 1.0000000, 0.9420290, 0.… tidy.length <- readRDS(here::here(paste0('r-workflows/data/tidy/',                        name,'_tidy-length.rds'))) %>%   dplyr::filter(!is.na(mbdepth)) %>% # If this filters out any then you need to go back and check your spatial layers   glimpse() ## Rows: 64 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"15\", \"17\", \"19\", \"23\", \"24\", \"26\", \"29\", \"3\", \"31\", \"32\"… ## $ number       <dbl> 1, 1, 8, 3, 2, 3, 4, 1, 4, 6, 1, 3, 1, 2, 4, 2, 6, 1, 13,… ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"greater than Lm\", \"greater than Lm\", \"greater than Lm\", … ## $ longitude_dd <dbl> 114.8444, 114.8576, 114.7822, 114.9190, 114.8485, 114.928… ## $ latitude_dd  <dbl> -34.08478, -34.09635, -34.12047, -34.12832, -34.11789, -3… ## $ depth        <chr> \"45.3\", \"43.3\", \"73.6\", \"41\", \"45.6\", \"36\", \"42.6\", \"46.7… ## $ mbdepth      <dbl> -44.29804, -42.74676, -71.60112, -38.25594, -44.23959, -4… ## $ slope        <dbl> 0.108975978, 0.008719478, 0.880997142, 0.444838455, 0.103… ## $ aspect       <dbl> 264.03427, 30.76545, 262.35388, 294.10675, 257.20307, 40.… ## $ tpi          <dbl> -0.19527912, 0.02505112, 1.04176044, 0.47694588, 0.042278… ## $ tri          <dbl> 0.34487247, 0.03473282, 2.80258274, 1.83670998, 0.3347983… ## $ roughness    <dbl> 0.91366196, 0.09923935, 9.01136017, 5.30128479, 1.2933082… ## $ detrended    <dbl> -0.2281526, -3.1375041, 17.9911461, -8.6934719, 2.9724391… ## $ mean_relief  <dbl> 2.518519, 3.333333, 2.583333, 3.555556, 3.360000, 4.00000… ## $ sd_relief    <dbl> 0.8024180, 0.9128709, 0.5036102, 0.8555853, 0.4898979, 0.… ## $ reef         <dbl> 0.8292683, 1.0000000, 0.9493671, 1.0000000, 1.0000000, 1.… dat <- bind_rows(tidy.count, tidy.length) dat_total <- dat %>%    dplyr::filter(response %in% \"total_abundance\") %>%   dplyr::mutate(status = rep(c(\"Fished\", \"No-take\"), times = 16)) mod <- gam(number ~ s(detrended, k = 3, bs = 'cr') + status + s(aspect, k = 3, bs = 'cc'), family = tw(), data = dat_total) ## Warning in smooth.construct.cc.smooth.spec(object, dk$data, dk$knots): basis dimension, k, increased to minimum possible testdata <- expand.grid(detrended = seq(min(dat$detrended), max(dat$detrended),length.out = 20),                         aspect = mean(mod$model$aspect),                         status = c(\"Fished\", \"No-take\")) %>%   distinct() %>%   glimpse() ## Rows: 40 ## Columns: 3 ## $ detrended <dbl> -12.9594803, -11.1420918, -9.3247032, -7.5073147, -5.6899261… ## $ aspect    <dbl> 211.1597, 211.1597, 211.1597, 211.1597, 211.1597, 211.1597, … ## $ status    <fct> Fished, Fished, Fished, Fished, Fished, Fished, Fished, Fish… fits <- predict.gam(mod, newdata = testdata, type = 'response', se.fit = T) predicts_total_detrended <- testdata %>%   data.frame(fits) %>%   group_by(detrended) %>% # Only change here   summarise(number = mean(fit), se.fit = mean(se.fit)) %>%   ungroup() testdata <- expand.grid(status = c(\"Fished\", \"No-take\"),                         detrended = mean(mod$model$detrended),                         aspect = mean(mod$model$aspect)) %>%   distinct() %>%   glimpse() ## Rows: 2 ## Columns: 3 ## $ status    <fct> Fished, No-take ## $ detrended <dbl> -0.0008681719, -0.0008681719 ## $ aspect    <dbl> 211.1597, 211.1597 fits <- predict.gam(mod, newdata = testdata, type = 'response', se.fit = T) predicts_total_status <- testdata %>%   data.frame(fits) %>%   group_by(status) %>% # Only change here   summarise(number = mean(fit), se.fit = mean(se.fit)) %>%   ungroup() testdata <- expand.grid(aspect = seq(min(dat$aspect), max(dat$aspect),length.out = 20),                         status = c(\"Fished\", \"No-take\"),                         detrended = mean(mod$model$detrended)) %>%   distinct() %>%   glimpse() ## Rows: 40 ## Columns: 3 ## $ aspect    <dbl> 30.76545, 47.30724, 63.84903, 80.39082, 96.93261, 113.47439,… ## $ status    <fct> Fished, Fished, Fished, Fished, Fished, Fished, Fished, Fish… ## $ detrended <dbl> -0.0008681719, -0.0008681719, -0.0008681719, -0.0008681719, … fits <- predict.gam(mod, newdata = testdata, type = 'response', se.fit = T) predicts_total_aspect <- testdata %>%   data.frame(fits) %>%   group_by(aspect) %>% # Only change here   summarise(number = mean(fit), se.fit = mean(se.fit))%>%   ungroup() gg_total_detrended <- ggplot() +   geom_point(data = dat_total, aes(x = detrended, y = number),  alpha = 0.2, size = 1, show.legend = F) +   geom_line(data = predicts_total_detrended, aes(x = detrended, y = number), alpha = 0.5) +   geom_line(data = predicts_total_detrended, aes(x = detrended, y = number - se.fit), linetype = \"dashed\", alpha = 0.5) +   geom_line(data = predicts_total_detrended, aes(x = detrended, y = number + se.fit), linetype = \"dashed\", alpha = 0.5) +   theme_classic() +   labs(x = \"Detrended bathymetry\", y = \"\", title = \"Total abundance\") +   theme(plot.title = element_text(hjust = 0)) gg_total_detrended gg_total_status <- ggplot() +   geom_bar(data = predicts_total_status, aes(x = status, y = number, fill = status), stat = \"identity\", show.legend = F) +   scale_fill_manual(values = c(\"No-take\" = \"#7bbc63\",                                   \"Fished\" = \"#b9e6fb\")) +   geom_errorbar(data = predicts_total_status, aes(x = status, ymin = number - se.fit, ymax = number + se.fit), width = 0.5) +   theme_classic() +   labs(x = \"Status\", y = \"\") gg_total_status gg_total_aspect <- ggplot() +   geom_point(data = dat_total, aes(x = aspect, y = number),  alpha = 0.2, size = 1, show.legend = F) +   geom_line(data = predicts_total_aspect, aes(x = aspect, y = number), alpha = 0.5) +   geom_line(data = predicts_total_aspect, aes(x = aspect, y = number - se.fit), linetype = \"dashed\", alpha = 0.5) +   geom_line(data = predicts_total_aspect, aes(x = aspect, y = number + se.fit), linetype = \"dashed\", alpha = 0.5) +   theme_classic() +   labs(x = \"Aspect\", y = \"\", title = \"Total abundance\") +   theme(plot.title = element_text(hjust = 0)) +   coord_polar() gg_total_aspect"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/fish-spatial-prediction.html","id":"r-setup","dir":"Articles > R-workflows","previous_headings":"","what":"R setup","title":"Spatially predict fish distributions","text":"Load libraries. packages available CRAN, aside ‘FSSgam’, can installed following instructions provided GitHub repository https://github.com/beckyfisher/FSSgam. Set study name. Study names used throughout make reproducible code can easily shifted different campaigns projects still providing meaningful filenames. Load fish length data. data created previous workflow, ‘Format & visualise fish data’. Load fish count data. data created previous workflow, ‘Format & visualise fish data’. Combine count length data easy spatial prediction. Read bathymetry derivatives.  Transform spatial bathymetry derivatives dataframe predict onto. Manually set best model full subsets model selection process. select ‘best’ model parsimonious model within 2 AICc lowest AICc. suggest select models using statistically rigorous criteria best suits analysis project.    Predict response variables across extent bathymetry derivatives. Save spatial predictions. computer crashes way don’t need run whole script . Pivot data long format easy plotting. Reset response variables loop plotting. Load marine park data. dataset used 2022 Collaborative Australian Protected Areas Database, available free download https://fed.dcceew.gov.au/datasets/782c02c691014efe8ffbd27445fe41d7_0/explore. Feel free replace shapefile suitable dataset available study area. Loop response variable create ggplot figure . Combine plots using patchwork.","code":"library(CheckEM) library(tidyverse) library(mgcv) library(devtools) library(FSSgam) library(here) library(ggplot2) library(ggnewscale) library(viridis) library(terra) library(sf) library(patchwork) name <- 'example-bruv-workflow' tidy.length <- readRDS(here::here(paste0('r-workflows/data/tidy/',                        name,'_tidy-length.rds'))) %>%   dplyr::filter(!is.na(mbdepth)) %>% # If this filters out any then you need to go back and create your spatial layers   glimpse() ## Rows: 64 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"15\", \"17\", \"19\", \"23\", \"24\", \"26\", \"29\", \"3\", \"31\", \"32\"… ## $ number       <dbl> 1, 1, 8, 3, 2, 3, 4, 1, 4, 6, 1, 3, 1, 2, 4, 2, 6, 1, 13,… ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"greater than Lm\", \"greater than Lm\", \"greater than Lm\", … ## $ longitude_dd <dbl> 114.8444, 114.8576, 114.7822, 114.9190, 114.8485, 114.928… ## $ latitude_dd  <dbl> -34.08478, -34.09635, -34.12047, -34.12832, -34.11789, -3… ## $ depth        <chr> \"45.3\", \"43.3\", \"73.6\", \"41\", \"45.6\", \"36\", \"42.6\", \"46.7… ## $ mbdepth      <dbl> -44.29804, -42.74676, -71.60112, -38.25594, -44.23959, -4… ## $ slope        <dbl> 0.108975978, 0.008719478, 0.880997142, 0.444838455, 0.103… ## $ aspect       <dbl> 264.03427, 30.76545, 262.35388, 294.10675, 257.20307, 40.… ## $ tpi          <dbl> -0.19527912, 0.02505112, 1.04176044, 0.47694588, 0.042278… ## $ tri          <dbl> 0.34487247, 0.03473282, 2.80258274, 1.83670998, 0.3347983… ## $ roughness    <dbl> 0.91366196, 0.09923935, 9.01136017, 5.30128479, 1.2933082… ## $ detrended    <dbl> -0.2281526, -3.1375041, 17.9911461, -8.6934719, 2.9724391… ## $ mean_relief  <dbl> 2.518519, 3.333333, 2.583333, 3.555556, 3.360000, 4.00000… ## $ sd_relief    <dbl> 0.8024180, 0.9128709, 0.5036102, 0.8555853, 0.4898979, 0.… ## $ reef         <dbl> 0.8292683, 1.0000000, 0.9493671, 1.0000000, 1.0000000, 1.… tidy.count <- readRDS(here::here(paste0('r-workflows/data/tidy/',                        name,'_tidy-count.rds'))) %>%   dplyr::filter(!is.na(mbdepth)) %>% # If this filters out any then you need to go back and create your spatial layers   glimpse() ## Rows: 64 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"10\", \"10\", \"12\", \"12\", \"14\", \"14\", \"15\", \"15\", \"16\", \"16… ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"total_abundance\", \"species_richness\", \"total_abundance\",… ## $ number       <dbl> 111, 13, 94, 15, 191, 9, 146, 16, 99, 14, 312, 18, 38, 13… ## $ longitude_dd <dbl> 114.8533, 114.8533, 114.8816, 114.8816, 114.8686, 114.868… ## $ latitude_dd  <dbl> -34.08387, -34.08387, -34.13249, -34.13249, -34.07530, -3… ## $ depth        <chr> \"44.3\", \"44.3\", \"42.6\", \"42.6\", \"42.7\", \"42.7\", \"45.3\", \"… ## $ mbdepth      <dbl> -42.77519, -42.77519, -42.02835, -42.02835, -41.07679, -4… ## $ slope        <dbl> 0.005708777, 0.005708777, 0.013768068, 0.013768068, 0.078… ## $ aspect       <dbl> 72.31942, 72.31942, 110.35012, 110.35012, 215.54254, 215.… ## $ tpi          <dbl> 0.05208921, 0.05208921, 0.03892708, 0.03892708, 0.2611088… ## $ tri          <dbl> 0.05208921, 0.05208921, 0.06246567, 0.06246567, 0.3096442… ## $ roughness    <dbl> 0.11757660, 0.11757660, 0.30690765, 0.30690765, 0.7959022… ## $ detrended    <dbl> -2.8542883, -2.8542883, -5.8822656, -5.8822656, -6.646017… ## $ mean_relief  <dbl> 3.217391, 3.217391, 2.809524, 2.809524, 2.440000, 2.44000… ## $ sd_relief    <dbl> 0.7952428, 0.7952428, 0.4023739, 0.4023739, 0.7118052, 0.… ## $ reef         <dbl> 0.9690722, 0.9690722, 1.0000000, 1.0000000, 0.9420290, 0.… dat <- bind_rows(tidy.count, tidy.length) %>%   glimpse() ## Rows: 128 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"10\", \"10\", \"12\", \"12\", \"14\", \"14\", \"15\", \"15\", \"16\", \"16… ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"total_abundance\", \"species_richness\", \"total_abundance\",… ## $ number       <dbl> 111, 13, 94, 15, 191, 9, 146, 16, 99, 14, 312, 18, 38, 13… ## $ longitude_dd <dbl> 114.8533, 114.8533, 114.8816, 114.8816, 114.8686, 114.868… ## $ latitude_dd  <dbl> -34.08387, -34.08387, -34.13249, -34.13249, -34.07530, -3… ## $ depth        <chr> \"44.3\", \"44.3\", \"42.6\", \"42.6\", \"42.7\", \"42.7\", \"45.3\", \"… ## $ mbdepth      <dbl> -42.77519, -42.77519, -42.02835, -42.02835, -41.07679, -4… ## $ slope        <dbl> 0.005708777, 0.005708777, 0.013768068, 0.013768068, 0.078… ## $ aspect       <dbl> 72.31942, 72.31942, 110.35012, 110.35012, 215.54254, 215.… ## $ tpi          <dbl> 0.05208921, 0.05208921, 0.03892708, 0.03892708, 0.2611088… ## $ tri          <dbl> 0.05208921, 0.05208921, 0.06246567, 0.06246567, 0.3096442… ## $ roughness    <dbl> 0.11757660, 0.11757660, 0.30690765, 0.30690765, 0.7959022… ## $ detrended    <dbl> -2.8542883, -2.8542883, -5.8822656, -5.8822656, -6.646017… ## $ mean_relief  <dbl> 3.217391, 3.217391, 2.809524, 2.809524, 2.440000, 2.44000… ## $ sd_relief    <dbl> 0.7952428, 0.7952428, 0.4023739, 0.4023739, 0.7118052, 0.… ## $ reef         <dbl> 0.9690722, 0.9690722, 1.0000000, 1.0000000, 0.9420290, 0.… preds  <- readRDS(here::here(paste0(\"r-workflows/data/spatial/rasters/\",                           name, \"_bathymetry_derivatives.rds\"))) plot(preds) preddf <- as.data.frame(preds, xy = TRUE, na.rm = TRUE) %>%   clean_names() %>%   glimpse() ## Rows: 73,350 ## Columns: 9 ## $ x         <dbl> 115.1714, 115.1739, 115.1764, 115.1789, 115.1814, 115.1839, … ## $ y         <dbl> -33.60361, -33.60361, -33.60361, -33.60361, -33.60361, -33.6… ## $ mbdepth   <dbl> -14.83014, -13.89184, -14.18757, -14.48647, -14.47323, -14.3… ## $ slope     <dbl> 0.24350203, 0.19746646, 0.17799167, 0.18316828, 0.22091857, … ## $ aspect    <dbl> 339.995240, 341.597571, 21.180346, 12.600024, 356.337121, 35… ## $ tpi       <dbl> -3.721524e-01, 5.277313e-01, 1.502453e-01, -1.123428e-03, 9.… ## $ tri       <dbl> 0.9656481, 0.8277034, 0.6934198, 0.6945946, 0.8081013, 0.902… ## $ roughness <dbl> 2.807414, 2.421717, 2.196986, 2.156502, 2.581898, 2.606502, … ## $ detrended <dbl> -2.871674, -2.161609, -2.683798, -3.207528, -3.417629, -3.56… # Indicator species greater than size of maturity m_mature <- gam(number ~                   s(aspect, k = 3, bs = \"cc\") +                   s(tpi, k = 3, bs = \"cr\"),                 data = dplyr::filter(dat, response %in% \"greater than Lm\"),                 family = tw()) ## Warning in smooth.construct.cc.smooth.spec(object, dk$data, dk$knots): basis dimension, k, increased to minimum possible summary(m_mature) ##  ## Family: Tweedie(p=1.257)  ## Link function: log  ##  ## Formula: ## number ~ s(aspect, k = 3, bs = \"cc\") + s(tpi, k = 3, bs = \"cr\") ##  ## Parametric coefficients: ##             Estimate Std. Error t value Pr(>|t|)    ## (Intercept)   0.6831     0.2130   3.206  0.00331 ** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##             edf Ref.df     F p-value   ## s(aspect) 1.487  2.000 2.757  0.0369 * ## s(tpi)    1.000  1.001 0.042  0.8404   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.0554   Deviance explained = 16.7% ## -REML = 62.912  Scale est. = 2.3328    n = 32 plot(m_mature, pages = 1, residuals = T, cex = 5) # Total abundance m_totabund <- gam(number ~                    s(detrended, k = 3, bs = \"cr\"),                  data = dplyr::filter(dat, response %in% \"total_abundance\"),                  family = gaussian(link = \"identity\")) summary(m_totabund) ##  ## Family: gaussian  ## Link function: identity  ##  ## Formula: ## number ~ s(detrended, k = 3, bs = \"cr\") ##  ## Parametric coefficients: ##             Estimate Std. Error t value Pr(>|t|)     ## (Intercept)   131.22      13.24   9.913 5.61e-11 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##              edf Ref.df     F p-value    ## s(detrended)   1      1 8.602 0.00638 ** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.197   Deviance explained = 22.3% ## GCV = 5981.2  Scale est. = 5607.4    n = 32 plot(m_totabund, pages = 1, residuals = T, cex = 5) # Species richness m_specrich <- gam(number ~                      s(mbdepth, k = 3, bs = \"cr\"),                    data = dplyr::filter(dat, response %in% \"species_richness\"),                    family = gaussian(link = \"identity\")) summary(m_specrich) ##  ## Family: gaussian  ## Link function: identity  ##  ## Formula: ## number ~ s(mbdepth, k = 3, bs = \"cr\") ##  ## Parametric coefficients: ##             Estimate Std. Error t value Pr(>|t|)     ## (Intercept)  13.9688     0.6462   21.62   <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##            edf Ref.df     F p-value   ## s(mbdepth)   1      1 3.904  0.0574 . ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.0856   Deviance explained = 11.5% ## GCV = 14.251  Scale est. = 13.36     n = 32 plot(m_specrich, pages = 1, residuals = T, cex = 5) preddf <- cbind(preddf,                  \"pmature\" = predict(m_mature, preddf, type = \"response\"),                 \"ptotabund\" = predict(m_totabund, preddf, type = \"response\"),                 \"pspecrich\" = predict(m_specrich, preddf, type = \"response\")) %>%   glimpse() ## Rows: 73,350 ## Columns: 12 ## $ x         <dbl> 115.1714, 115.1739, 115.1764, 115.1789, 115.1814, 115.1839, … ## $ y         <dbl> -33.60361, -33.60361, -33.60361, -33.60361, -33.60361, -33.6… ## $ mbdepth   <dbl> -14.83014, -13.89184, -14.18757, -14.48647, -14.47323, -14.3… ## $ slope     <dbl> 0.24350203, 0.19746646, 0.17799167, 0.18316828, 0.22091857, … ## $ aspect    <dbl> 339.995240, 341.597571, 21.180346, 12.600024, 356.337121, 35… ## $ tpi       <dbl> -3.721524e-01, 5.277313e-01, 1.502453e-01, -1.123428e-03, 9.… ## $ tri       <dbl> 0.9656481, 0.8277034, 0.6934198, 0.6945946, 0.8081013, 0.902… ## $ roughness <dbl> 2.807414, 2.421717, 2.196986, 2.156502, 2.581898, 2.606502, … ## $ detrended <dbl> -2.871674, -2.161609, -2.683798, -3.207528, -3.417629, -3.56… ## $ pmature   <dbl> 1.508352, 1.380291, 1.540683, 1.758228, 1.203778, 1.207899, … ## $ ptotabund <dbl> 140.7683, 138.4064, 140.1434, 141.8855, 142.5844, 143.0622, … ## $ pspecrich <dbl> 17.83208, 17.94093, 17.90662, 17.87195, 17.87349, 17.88257, … saveRDS(preddf, file = here::here(paste0(\"r-workflows/model output/fish/\",                                name, \"_fish-prediction.RDS\"))) dat <- preddf %>%   dplyr::select(x, y, starts_with(\"p\")) %>%   pivot_longer(names_to = \"response\", values_to = \"value\",                cols = !c(x, y)) %>%   glimpse() ## Rows: 220,050 ## Columns: 4 ## $ x        <dbl> 115.1714, 115.1714, 115.1714, 115.1739, 115.1739, 115.1739, 1… ## $ y        <dbl> -33.60361, -33.60361, -33.60361, -33.60361, -33.60361, -33.60… ## $ response <chr> \"pmature\", \"ptotabund\", \"pspecrich\", \"pmature\", \"ptotabund\", … ## $ value    <dbl> 1.508352, 140.768348, 17.832085, 1.380291, 138.406351, 17.940… resp.vars <- unique(dat$response) marine.parks <- st_read(here::here(\"r-workflows/data/spatial/shapefiles/Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine.shp\")) %>%   st_make_valid() %>%   dplyr::mutate(ZONE_TYPE = str_replace_all(ZONE_TYPE,                                              \"\\\\s*\\\\([^\\\\)]+\\\\)\", \"\")) %>%   dplyr::filter(str_detect(ZONE_TYPE, \"Sanctuary|National Park\"),                 STATE %in% \"WA\") %>%                           st_transform(4326) ## Reading layer `Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine' from data source `/home/runner/work/CheckEM/CheckEM/r-workflows/data/spatial/shapefiles/Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 3775 features and 26 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: 70.71702 ymin: -58.44947 xmax: 170.3667 ymax: -8.473407 ## Geodetic CRS:  WGS 84 for (i in 1:length(resp.vars)) {   use.dat <- dat %>%     dplyr::filter(response %in% resp.vars[i])      p <- ggplot() +     geom_tile(data = use.dat, aes(x, y, fill = value)) +     scale_fill_gradientn(colours = c(\"#fde725\", \"#21918c\", \"#440154\"), na.value = \"transparent\") +     labs(fill = resp.vars[i], x = NULL, y = NULL) +     new_scale_fill() +                          geom_sf(data = marine.parks, fill = NA, colour = \"#7bbc63\",              size = 0.2, show.legend = F) +     coord_sf(xlim = c(min(dat$x), max(dat$x)),              ylim = c(min(dat$y), max(dat$y))) +     theme_minimal() +     theme(axis.text.x = element_text(size = 7))   assign(paste0(\"gg_\", resp.vars[i]), p) } gg_pmature + gg_ptotabund + gg_pspecrich +   theme(legend.justification = \"left\") +   plot_layout(ncol = 2, nrow = 2)"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-fish.html","id":"r-set-up","dir":"Articles > R-workflows","previous_headings":"","what":"R set up","title":"Format & visualise fish data","text":"Load necessary libraries. Set study name.","code":"library(CheckEM) library(tidyverse) library(ggplot2) library(sf) library(here) library(leaflet) name <- \"example-bruv-workflow\""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-fish.html","id":"read-in-the-data","dir":"Articles > R-workflows","previous_headings":"","what":"Read in the data","title":"Format & visualise fish data","text":"Load format metadata. Load format habitat data. create ‘reef’ column consists reef-forming habitat found study area, used subsequent fish modelling scripts. Load length maturity data. maturity dataset loaded package installed. Load format count data, transform total abundance species richness. two response variables used subsequent fish modelling scripts. Load format length data.","code":"metadata.bathy.derivatives <- readRDS(here::here(paste0(\"r-workflows/data/tidy/\", name, \"_metadata-bathymetry-derivatives.rds\"))) %>%   glimpse() ## Rows: 32 ## Columns: 22 ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ sample                      <chr> \"35\", \"5\", \"26\", \"23\", \"29\", \"4\", \"32\", \"3… ## $ date_time                   <chr> \"14/03/2023 23:36\", \"14/03/2023 23:49\", \"1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth                       <chr> \"39.6\", \"42.7\", \"36\", \"41\", \"42.6\", \"45\", … ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ x                           <dbl> 114.9236, 114.9292, 114.9284, 114.9190, 11… ## $ y                           <dbl> -34.13155, -34.12953, -34.12729, -34.12832… ## $ longitude_dd                <dbl> 114.9236, 114.9292, 114.9284, 114.9190, 11… ## $ latitude_dd                 <dbl> -34.13155, -34.12953, -34.12729, -34.12832… ## $ ID                          <dbl> 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73… ## $ mbdepth                     <dbl> -34.97151, -36.35807, -40.68553, -38.25594… ## $ slope                       <dbl> 0.146843375, 0.812689749, 0.694289634, 0.4… ## $ aspect                      <dbl> 209.89577, 62.41434, 40.87387, 294.10675, … ## $ TPI                         <dbl> 0.42153454, 2.39535522, -0.67607403, 0.476… ## $ TRI                         <dbl> 0.75557327, 3.29823494, 2.39221191, 1.8367… ## $ roughness                   <dbl> 2.21119308, 8.36493301, 8.36493301, 5.3012… ## $ detrended                   <dbl> -5.6631737, -7.0394716, -11.2637815, -8.69… habitat <- readRDS(here::here(paste0(\"r-workflows/data/tidy/\", name, \"_tidy-habitat.rds\"))) %>%   dplyr::mutate(number = number / total_points_annotated) %>%   dplyr::select(campaignid, sample, longitude_dd, latitude_dd, depth, mbdepth, slope, aspect, tpi, tri, roughness, detrended, habitat, number, mean_relief, sd_relief) %>%   pivot_wider(names_from = habitat, values_from = number, values_fill = 0) %>%   CheckEM::clean_names() %>%   dplyr::mutate(reef = consolidated_hard + macroalgae + seagrasses + sessile_invertebrates) %>%              dplyr::select(-c(consolidated_hard, macroalgae, seagrasses, sessile_invertebrates, unconsolidated_soft)) %>%   glimpse() ## Rows: 32 ## Columns: 15 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"35\", \"5\", \"26\", \"23\", \"29\", \"4\", \"32\", \"37\", \"3\", \"2\", \"… ## $ longitude_dd <dbl> 114.9236, 114.9292, 114.9284, 114.9190, 114.9105, 114.911… ## $ latitude_dd  <dbl> -34.13155, -34.12953, -34.12729, -34.12832, -34.12296, -3… ## $ depth        <chr> \"39.6\", \"42.7\", \"36\", \"41\", \"42.6\", \"45\", \"44.4\", \"46.1\",… ## $ mbdepth      <dbl> -34.97151, -36.35807, -40.68553, -38.25594, -39.91339, -4… ## $ slope        <dbl> 0.146843375, 0.812689749, 0.694289634, 0.444838455, 0.322… ## $ aspect       <dbl> 209.89577, 62.41434, 40.87387, 294.10675, 307.15484, 319.… ## $ tpi          <dbl> 0.42153454, 2.39535522, -0.67607403, 0.47694588, 0.875010… ## $ tri          <dbl> 0.75557327, 3.29823494, 2.39221191, 1.83670998, 1.3206706… ## $ roughness    <dbl> 2.21119308, 8.36493301, 8.36493301, 5.30128479, 3.3831062… ## $ detrended    <dbl> -5.6631737, -7.0394716, -11.2637815, -8.6934719, -9.84557… ## $ mean_relief  <dbl> 3.034483, 3.900000, 4.000000, 3.555556, 4.000000, 3.76190… ## $ sd_relief    <dbl> 1.1174831, 0.4472136, 0.0000000, 0.8555853, 0.0000000, 0.… ## $ reef         <dbl> 0.9298246, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.… maturity.mean <- maturity %>%   dplyr::group_by(family, genus, species, sex) %>%   dplyr::slice(which.min(l50_mm)) %>%   ungroup() %>%   dplyr::group_by(family, genus, species) %>%   dplyr::summarise(l50 = mean(l50_mm)) %>%   ungroup() %>%   glimpse() ## `summarise()` has grouped output by 'family', 'genus'. You can override using ## the `.groups` argument. ## Rows: 42 ## Columns: 4 ## $ family  <chr> \"Arripidae\", \"Berycidae\", \"Carangidae\", \"Carangidae\", \"Carchar… ## $ genus   <chr> \"Arripis\", \"Centroberyx\", \"Pseudocaranx\", \"Seriola\", \"Carcharh… ## $ species <chr> \"truttaceus\", \"gerrardi\", \"spp\", \"hippos\", \"obscurus\", \"plumbe… ## $ l50     <dbl> 600.0, 266.0, 310.0, 831.0, 2540.0, 1360.0, 670.0, 400.0, 466.… tidy.count <- readRDS(here::here(paste0(\"r-workflows/data/staging/\", name, \"_complete-count.rds\"))) %>%   dplyr::filter(campaignid %in% \"2023-03_SwC_stereo-BRUVs\") %>% # Remove Pt Cloates campaign for now                dplyr::group_by(campaignid, sample, status, scientific) %>%   dplyr::summarise(count = sum(count)) %>%   pivot_wider(names_from = \"scientific\", values_from = count, values_fill = 0) %>%   dplyr::ungroup() %>%   dplyr::mutate(total_abundance = rowSums(.[, 4:(ncol(.))], na.rm = TRUE), species_richness = rowSums(.[, 4:(ncol(.))] > 0)) %>%    dplyr::select(campaignid, sample, status, total_abundance, species_richness) %>%   pivot_longer(cols = c(\"total_abundance\", \"species_richness\"), names_to = \"response\", values_to = \"number\") %>%   dplyr::left_join(habitat) %>%   glimpse() ## `summarise()` has grouped output by 'campaignid', 'sample', 'status'. You can ## override using the `.groups` argument. ## Joining with `by = join_by(campaignid, sample)` ## Rows: 64 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"10\", \"10\", \"12\", \"12\", \"14\", \"14\", \"15\", \"15\", \"16\", \"16… ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"total_abundance\", \"species_richness\", \"total_abundance\",… ## $ number       <dbl> 111, 13, 94, 15, 191, 9, 146, 16, 99, 14, 312, 18, 38, 13… ## $ longitude_dd <dbl> 114.8533, 114.8533, 114.8816, 114.8816, 114.8686, 114.868… ## $ latitude_dd  <dbl> -34.08387, -34.08387, -34.13249, -34.13249, -34.07530, -3… ## $ depth        <chr> \"44.3\", \"44.3\", \"42.6\", \"42.6\", \"42.7\", \"42.7\", \"45.3\", \"… ## $ mbdepth      <dbl> -42.77519, -42.77519, -42.02835, -42.02835, -41.07679, -4… ## $ slope        <dbl> 0.005708777, 0.005708777, 0.013768068, 0.013768068, 0.078… ## $ aspect       <dbl> 72.31942, 72.31942, 110.35012, 110.35012, 215.54254, 215.… ## $ tpi          <dbl> 0.05208921, 0.05208921, 0.03892708, 0.03892708, 0.2611088… ## $ tri          <dbl> 0.05208921, 0.05208921, 0.06246567, 0.06246567, 0.3096442… ## $ roughness    <dbl> 0.11757660, 0.11757660, 0.30690765, 0.30690765, 0.7959022… ## $ detrended    <dbl> -2.8542883, -2.8542883, -5.8822656, -5.8822656, -6.646017… ## $ mean_relief  <dbl> 3.217391, 3.217391, 2.809524, 2.809524, 2.440000, 2.44000… ## $ sd_relief    <dbl> 0.7952428, 0.7952428, 0.4023739, 0.4023739, 0.7118052, 0.… ## $ reef         <dbl> 0.9690722, 0.9690722, 1.0000000, 1.0000000, 0.9420290, 0.… lengths <- readRDS(here::here(paste0(\"r-workflows/data/staging/\", name, \"_complete-length.rds\"))) %>%   dplyr::filter(campaignid %in% \"2023-03_SwC_stereo-BRUVs\") %>% # Remove Pt Cloates campaign for now    # dplyr::mutate(depth = as.numeric(depth)) %>%                         left_join(habitat) %>%   left_join(maturity.mean) %>%   dplyr::mutate(number = 1) %>%   glimpse() ## Joining with `by = join_by(campaignid, sample)` ## Joining with `by = join_by(family, genus, species)` ## Rows: 9,867 ## Columns: 35 ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ sample                      <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", … ## $ family                      <chr> \"Acanthuridae\", \"Acanthuridae\", \"Acanthuri… ## $ genus                       <chr> \"Naso\", \"Naso\", \"Naso\", \"Albula\", \"Aplodac… ## $ species                     <chr> \"brachycentron\", \"fageni\", \"hexacanthus\", … ## $ length_mm                   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ number                      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ range                       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ rms                         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ precision                   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ status                      <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\"… ## $ date_time                   <chr> \"18/03/2023 2:44\", \"18/03/2023 2:44\", \"18/… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"44.3\", \"44.3\", \"44.3\", \"44.3\", \"44.3\", \"4… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ marine_region               <chr> \"South-west\", \"South-west\", \"South-west\", … ## $ scientific                  <chr> \"Acanthuridae Naso brachycentron\", \"Acanth… ## $ longitude_dd                <dbl> 114.8533, 114.8533, 114.8533, 114.8533, 11… ## $ latitude_dd                 <dbl> -34.08387, -34.08387, -34.08387, -34.08387… ## $ depth                       <chr> \"44.3\", \"44.3\", \"44.3\", \"44.3\", \"44.3\", \"4… ## $ mbdepth                     <dbl> -42.77519, -42.77519, -42.77519, -42.77519… ## $ slope                       <dbl> 0.005708777, 0.005708777, 0.005708777, 0.0… ## $ aspect                      <dbl> 72.31942, 72.31942, 72.31942, 72.31942, 72… ## $ tpi                         <dbl> 0.05208921, 0.05208921, 0.05208921, 0.0520… ## $ tri                         <dbl> 0.05208921, 0.05208921, 0.05208921, 0.0520… ## $ roughness                   <dbl> 0.1175766, 0.1175766, 0.1175766, 0.1175766… ## $ detrended                   <dbl> -2.854288, -2.854288, -2.854288, -2.854288… ## $ mean_relief                 <dbl> 3.217391, 3.217391, 3.217391, 3.217391, 3.… ## $ sd_relief                   <dbl> 0.7952428, 0.7952428, 0.7952428, 0.7952428… ## $ reef                        <dbl> 0.9690722, 0.9690722, 0.9690722, 0.9690722… ## $ l50                         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-fish.html","id":"format-data-for-visualisation-and-modelling","dir":"Articles > R-workflows","previous_headings":"","what":"Format data for visualisation and modelling","title":"Format & visualise fish data","text":"Filter length data include ‘indicator species’. case study, three species defined bioregional-scale demersal fish indicators West Australian Department Primary Industries Regional Development. equivalent study area, suggest using ecologically-relevant highly-targeted species. Create unique list samples per campaign, fill zeroes back processed length data. Create dataframe indicator species greater length maturity. Create dataframe indicator species smaller length maturity. Join two datasets.","code":"indicator.species <- lengths %>%   dplyr::mutate(scientific = paste(genus, species, sep = \" \")) %>%   dplyr::filter(scientific %in% c(\"Choerodon rubescens\", \"Chrysophrys auratus\", \"Glaucosoma hebraicum\")) %>%   glimpse() ## Rows: 144 ## Columns: 35 ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ sample                      <chr> \"10\", \"10\", \"10\", \"12\", \"12\", \"12\", \"14\", … ## $ family                      <chr> \"Glaucosomatidae\", \"Labridae\", \"Sparidae\",… ## $ genus                       <chr> \"Glaucosoma\", \"Choerodon\", \"Chrysophrys\", … ## $ species                     <chr> \"hebraicum\", \"rubescens\", \"auratus\", \"hebr… ## $ length_mm                   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ number                      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, … ## $ range                       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ rms                         <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ precision                   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ status                      <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\"… ## $ date_time                   <chr> \"18/03/2023 2:44\", \"18/03/2023 2:44\", \"18/… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"44.3\", \"44.3\", \"44.3\", \"42.6\", \"42.6\", \"4… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ marine_region               <chr> \"South-west\", \"South-west\", \"South-west\", … ## $ scientific                  <chr> \"Glaucosoma hebraicum\", \"Choerodon rubesce… ## $ longitude_dd                <dbl> 114.8533, 114.8533, 114.8533, 114.8816, 11… ## $ latitude_dd                 <dbl> -34.08387, -34.08387, -34.08387, -34.13249… ## $ depth                       <chr> \"44.3\", \"44.3\", \"44.3\", \"42.6\", \"42.6\", \"4… ## $ mbdepth                     <dbl> -42.77519, -42.77519, -42.77519, -42.02835… ## $ slope                       <dbl> 0.005708777, 0.005708777, 0.005708777, 0.0… ## $ aspect                      <dbl> 72.31942, 72.31942, 72.31942, 110.35012, 1… ## $ tpi                         <dbl> 0.05208921, 0.05208921, 0.05208921, 0.0389… ## $ tri                         <dbl> 0.05208921, 0.05208921, 0.05208921, 0.0624… ## $ roughness                   <dbl> 0.11757660, 0.11757660, 0.11757660, 0.3069… ## $ detrended                   <dbl> -2.8542883, -2.8542883, -2.8542883, -5.882… ## $ mean_relief                 <dbl> 3.217391, 3.217391, 3.217391, 2.809524, 2.… ## $ sd_relief                   <dbl> 0.7952428, 0.7952428, 0.7952428, 0.4023739… ## $ reef                        <dbl> 0.9690722, 0.9690722, 0.9690722, 1.0000000… ## $ l50                         <dbl> 310.5, 379.0, 352.0, 310.5, 379.0, 352.0, … metadata.length <- lengths %>%   distinct(campaignid, sample, status) %>%   glimpse() ## Rows: 32 ## Columns: 3 ## $ campaignid <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"20… ## $ sample     <chr> \"10\", \"12\", \"14\", \"15\", \"16\", \"17\", \"19\", \"2\", \"21\", \"22\", … ## $ status     <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-… greater.mat <- indicator.species %>%   dplyr::filter(length_mm > l50) %>%   dplyr::group_by(campaignid, sample) %>%   dplyr::summarise(number = sum(number)) %>%   ungroup() %>%   right_join(metadata.length) %>%   dplyr::mutate(number = ifelse(is.na(number), 0, number)) %>%   dplyr::mutate(response = \"greater than Lm\") %>%   left_join(habitat) %>%   dplyr::glimpse() ## `summarise()` has grouped output by 'campaignid'. You can override using the ## `.groups` argument. ## Joining with `by = join_by(campaignid, sample)` ## Joining with `by = join_by(campaignid, sample)` ## Rows: 32 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"15\", \"17\", \"19\", \"23\", \"24\", \"26\", \"29\", \"3\", \"31\", \"32\"… ## $ number       <dbl> 1, 1, 8, 3, 2, 3, 4, 1, 4, 6, 1, 3, 1, 2, 4, 2, 6, 1, 13,… ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"greater than Lm\", \"greater than Lm\", \"greater than Lm\", … ## $ longitude_dd <dbl> 114.8444, 114.8576, 114.7822, 114.9190, 114.8485, 114.928… ## $ latitude_dd  <dbl> -34.08478, -34.09635, -34.12047, -34.12832, -34.11789, -3… ## $ depth        <chr> \"45.3\", \"43.3\", \"73.6\", \"41\", \"45.6\", \"36\", \"42.6\", \"46.7… ## $ mbdepth      <dbl> -44.29804, -42.74676, -71.60112, -38.25594, -44.23959, -4… ## $ slope        <dbl> 0.108975978, 0.008719478, 0.880997142, 0.444838455, 0.103… ## $ aspect       <dbl> 264.03427, 30.76545, 262.35388, 294.10675, 257.20307, 40.… ## $ tpi          <dbl> -0.19527912, 0.02505112, 1.04176044, 0.47694588, 0.042278… ## $ tri          <dbl> 0.34487247, 0.03473282, 2.80258274, 1.83670998, 0.3347983… ## $ roughness    <dbl> 0.91366196, 0.09923935, 9.01136017, 5.30128479, 1.2933082… ## $ detrended    <dbl> -0.2281526, -3.1375041, 17.9911461, -8.6934719, 2.9724391… ## $ mean_relief  <dbl> 2.518519, 3.333333, 2.583333, 3.555556, 3.360000, 4.00000… ## $ sd_relief    <dbl> 0.8024180, 0.9128709, 0.5036102, 0.8555853, 0.4898979, 0.… ## $ reef         <dbl> 0.8292683, 1.0000000, 0.9493671, 1.0000000, 1.0000000, 1.… smaller.mat <- indicator.species %>%   dplyr::filter(length_mm < l50) %>%   dplyr::group_by(campaignid, sample) %>%   dplyr::summarise(number = sum(number)) %>%   ungroup() %>%   right_join(metadata.length) %>%   dplyr::mutate(number = ifelse(is.na(number), 0, number)) %>%   dplyr::mutate(response = \"smaller than Lm\") %>%   left_join(habitat) %>%   dplyr::glimpse() ## `summarise()` has grouped output by 'campaignid'. You can override using the ## `.groups` argument. ## Joining with `by = join_by(campaignid, sample)` ## Joining with `by = join_by(campaignid, sample)` ## Rows: 32 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"26\", \"4\", \"7\", \"10\", \"12\", \"14\", \"15\", \"16\", \"17\", \"19\",… ## $ number       <dbl> 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"smaller than Lm\", \"smaller than Lm\", \"smaller than Lm\", … ## $ longitude_dd <dbl> 114.9284, 114.9112, 114.7854, 114.8533, 114.8816, 114.868… ## $ latitude_dd  <dbl> -34.12729, -34.11597, -34.09623, -34.08387, -34.13249, -3… ## $ depth        <chr> \"36\", \"45\", \"62.7\", \"44.3\", \"42.6\", \"42.7\", \"45.3\", \"45.4… ## $ mbdepth      <dbl> -40.68553, -42.80315, -60.38860, -42.77519, -42.02835, -4… ## $ slope        <dbl> 0.694289634, 0.045436668, 0.115437569, 0.005708777, 0.013… ## $ aspect       <dbl> 40.87387, 319.32290, 319.71953, 72.31942, 110.35012, 215.… ## $ tpi          <dbl> -0.67607403, 0.17132854, 0.07896280, 0.05208921, 0.038927… ## $ tri          <dbl> 2.39221191, 0.20512867, 0.37800837, 0.05208921, 0.0624656… ## $ roughness    <dbl> 8.36493301, 0.54244614, 1.60873032, 0.11757660, 0.3069076… ## $ detrended    <dbl> -11.2637815, -12.7394981, 19.9898605, -2.8542883, -5.8822… ## $ mean_relief  <dbl> 4.000000, 3.761905, 3.000000, 3.217391, 2.809524, 2.44000… ## $ sd_relief    <dbl> 0.0000000, 0.4364358, 0.0000000, 0.7952428, 0.4023739, 0.… ## $ reef         <dbl> 1.0000000, 1.0000000, 1.0000000, 0.9690722, 1.0000000, 0.… tidy.length <- bind_rows(greater.mat, smaller.mat) %>%   glimpse() ## Rows: 64 ## Columns: 18 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"15\", \"17\", \"19\", \"23\", \"24\", \"26\", \"29\", \"3\", \"31\", \"32\"… ## $ number       <dbl> 1, 1, 8, 3, 2, 3, 4, 1, 4, 6, 1, 3, 1, 2, 4, 2, 6, 1, 13,… ## $ status       <chr> \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"No-take\", \"N… ## $ response     <chr> \"greater than Lm\", \"greater than Lm\", \"greater than Lm\", … ## $ longitude_dd <dbl> 114.8444, 114.8576, 114.7822, 114.9190, 114.8485, 114.928… ## $ latitude_dd  <dbl> -34.08478, -34.09635, -34.12047, -34.12832, -34.11789, -3… ## $ depth        <chr> \"45.3\", \"43.3\", \"73.6\", \"41\", \"45.6\", \"36\", \"42.6\", \"46.7… ## $ mbdepth      <dbl> -44.29804, -42.74676, -71.60112, -38.25594, -44.23959, -4… ## $ slope        <dbl> 0.108975978, 0.008719478, 0.880997142, 0.444838455, 0.103… ## $ aspect       <dbl> 264.03427, 30.76545, 262.35388, 294.10675, 257.20307, 40.… ## $ tpi          <dbl> -0.19527912, 0.02505112, 1.04176044, 0.47694588, 0.042278… ## $ tri          <dbl> 0.34487247, 0.03473282, 2.80258274, 1.83670998, 0.3347983… ## $ roughness    <dbl> 0.91366196, 0.09923935, 9.01136017, 5.30128479, 1.2933082… ## $ detrended    <dbl> -0.2281526, -3.1375041, 17.9911461, -8.6934719, 2.9724391… ## $ mean_relief  <dbl> 2.518519, 3.333333, 2.583333, 3.555556, 3.360000, 4.00000… ## $ sd_relief    <dbl> 0.8024180, 0.9128709, 0.5036102, 0.8555853, 0.4898979, 0.… ## $ reef         <dbl> 0.8292683, 1.0000000, 0.9493671, 1.0000000, 1.0000000, 1.…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-fish.html","id":"visualise-the-fish-count-data","dir":"Articles > R-workflows","previous_headings":"","what":"Visualise the fish count data","title":"Format & visualise fish data","text":"Filter count (maxn) data include one response. example count metrics included total abundance species richness. Visualise count data bubble plot. White bubbles represent zeroes size blue bubbles represents abundance.","code":"response.name <- 'total_abundance'  overzero <-  tidy.count %>%    filter(response %in% response.name & number > 0)   equalzero <- tidy.count %>%    filter(response %in% response.name & number == 0) bubble.plot <- leaflet(data = tidy.count) %>%                        addTiles() %>%                                                       addProviderTiles('Esri.WorldImagery', group = \"World Imagery\") %>%   addLayersControl(baseGroups = c(\"Open Street Map\", \"World Imagery\"), options = layersControlOptions(collapsed = FALSE))  if (nrow(overzero)) {                                                  bubble.plot <- bubble.plot %>%     addCircleMarkers(data = overzero, lat = ~ latitude_dd, lng = ~ longitude_dd, radius = ~ number / 10, fillOpacity = 0.5, stroke = FALSE, label = ~ as.character(sample))}  if (nrow(equalzero)) {                                               bubble.plot <- bubble.plot %>%     addCircleMarkers(data = equalzero, lat = ~ latitude_dd, lng = ~ longitude_dd, radius = 2, fillOpacity = 0.5, color = \"white\", stroke = FALSE, label = ~ as.character(sample))} bubble.plot"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-fish.html","id":"visualise-the-fish-length-data","dir":"Articles > R-workflows","previous_headings":"","what":"Visualise the fish length data","title":"Format & visualise fish data","text":"Filter length data include one response. example length metrics included indicator species greater smaller length maturity. Visualise count data bubble plot. White bubbles represent zeroes size blue bubbles represents abundance.","code":"response.name <- 'greater than Lm'  overzero <-  tidy.length %>%    dplyr::filter(response %in% response.name & number > 0)   equalzero <- tidy.length %>%    dplyr::filter(response %in% response.name & number == 0) bubble.plot <- leaflet(data = tidy.length) %>%                        addTiles() %>%                                                       addProviderTiles('Esri.WorldImagery', group = \"World Imagery\") %>%   addLayersControl(baseGroups = c(\"Open Street Map\", \"World Imagery\"), options = layersControlOptions(collapsed = FALSE))  if (nrow(overzero)) {                                                  bubble.plot <- bubble.plot %>%     addCircleMarkers(data = overzero, lat = ~ latitude_dd, lng = ~ longitude_dd, radius = ~ number + 3, fillOpacity = 0.5, stroke = FALSE, label = ~ as.character(sample))}  if (nrow(equalzero)) {                                               bubble.plot <- bubble.plot %>%     addCircleMarkers(data = equalzero, lat = ~ latitude_dd, lng = ~ longitude_dd, radius = 2, fillOpacity = 0.5, color = \"white\", stroke = FALSE, label = ~ as.character(sample))} bubble.plot"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-fish.html","id":"save-tidy-datasets-for-modelling","dir":"Articles > R-workflows","previous_headings":"","what":"Save tidy datasets for modelling","title":"Format & visualise fish data","text":"Save count response data (total abundance species richness). Save length response data (indicator species greater smaller length maturity).","code":"saveRDS(tidy.count, file = here::here(paste0(\"r-workflows/data/tidy/\", name, \"_tidy-count.rds\"))) saveRDS(tidy.length, file = here::here(paste0(\"r-workflows/data/tidy/\", name, \"_tidy-length.rds\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-habitat.html","id":"r-set-up","dir":"Articles > R-workflows","previous_headings":"","what":"R set up","title":"Format & visualise habitat data","text":"Load necessary libraries. Set study name.","code":"library(CheckEM) library(tidyverse) library(ggbeeswarm) library(RColorBrewer) library(leaflet) library(leaflet.minicharts) library(here) name <- \"example-bruv-workflow\""},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-habitat.html","id":"read-in-the-data","dir":"Articles > R-workflows","previous_headings":"","what":"Read in the data","title":"Format & visualise habitat data","text":"Load metadata bathymetry derivatives joined . Load habitat data format ‘broad’ classes modelling. classes included example just recommendation, however deciding habitat classes model, suggest using ecologically meaningful classes rare model. Load relief data summarise mean standard deviation relief.","code":"metadata.bathy.derivatives <- readRDS(here::here(paste0(\"r-workflows/data/tidy/\", name, \"_metadata-bathymetry-derivatives.rds\"))) %>%   dplyr::mutate(sample = as.character(sample)) %>%   glimpse() ## Rows: 32 ## Columns: 22 ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ sample                      <chr> \"35\", \"5\", \"26\", \"23\", \"29\", \"4\", \"32\", \"3… ## $ date_time                   <chr> \"14/03/2023 23:36\", \"14/03/2023 23:49\", \"1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth                       <chr> \"39.6\", \"42.7\", \"36\", \"41\", \"42.6\", \"45\", … ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ x                           <dbl> 114.9236, 114.9292, 114.9284, 114.9190, 11… ## $ y                           <dbl> -34.13155, -34.12953, -34.12729, -34.12832… ## $ longitude_dd                <dbl> 114.9236, 114.9292, 114.9284, 114.9190, 11… ## $ latitude_dd                 <dbl> -34.13155, -34.12953, -34.12729, -34.12832… ## $ ID                          <dbl> 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73… ## $ mbdepth                     <dbl> -34.97151, -36.35807, -40.68553, -38.25594… ## $ slope                       <dbl> 0.146843375, 0.812689749, 0.694289634, 0.4… ## $ aspect                      <dbl> 209.89577, 62.41434, 40.87387, 294.10675, … ## $ TPI                         <dbl> 0.42153454, 2.39535522, -0.67607403, 0.476… ## $ TRI                         <dbl> 0.75557327, 3.29823494, 2.39221191, 1.8367… ## $ roughness                   <dbl> 2.21119308, 8.36493301, 8.36493301, 5.3012… ## $ detrended                   <dbl> -5.6631737, -7.0394716, -11.2637815, -8.69… habitat <- readRDS(here::here(paste0(\"r-workflows/data/staging/\", name, \"_habitat.rds\"))) %>%   dplyr::mutate(habitat = case_when(level_2 %in% \"Macroalgae\" ~ level_2, level_2 %in% \"Seagrasses\" ~ level_2, level_2 %in% \"Substrate\" & level_3 %in% \"Consolidated (hard)\" ~ level_3, level_2 %in% \"Substrate\" & level_3 %in% \"Unconsolidated (soft)\" ~ level_3,  level_2 %in% \"Sponges\" ~ \"Sessile invertebrates\", level_2 %in% \"Sessile invertebrates\" ~ level_2, level_2 %in% \"Bryozoa\" ~ \"Sessile invertebrates\", level_2 %in% \"Cnidaria\" ~ \"Sessile invertebrates\")) %>%    dplyr::select(campaignid, sample, habitat, number) %>%   group_by(campaignid, sample, habitat) %>%    dplyr::tally(number, name = \"number\") %>% dplyr::mutate(total_points_annotated = sum(number)) %>%    ungroup() %>%    pivot_wider(names_from = \"habitat\", values_from = \"number\", values_fill = 0) %>%   dplyr::mutate(reef = Macroalgae + Seagrasses + `Sessile invertebrates` + `Consolidated (hard)`) %>%   pivot_longer(cols = c(\"Macroalgae\", \"Seagrasses\", \"Sessile invertebrates\", \"Consolidated (hard)\", \"Unconsolidated (soft)\", \"reef\"), names_to = \"habitat\", values_to = \"number\") %>%   glimpse() ## Rows: 198 ## Columns: 5 ## $ campaignid             <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo… ## $ sample                 <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"12\", \"12\",… ## $ total_points_annotated <dbl> 27, 27, 27, 27, 27, 27, 61, 61, 61, 61, 61, 61,… ## $ habitat                <chr> \"Macroalgae\", \"Seagrasses\", \"Sessile invertebra… ## $ number                 <dbl> 8, 14, 2, 0, 3, 24, 57, 2, 2, 0, 0, 61, 50, 2, … tidy.relief <- readRDS(here::here(paste0(\"r-workflows/data/staging/\", name, \"_relief.rds\"))) %>%   uncount(number) %>%   group_by(campaignid, sample) %>%   dplyr::summarise(mean.relief = mean(as.numeric(level_5)), sd.relief = sd(as.numeric(level_5), na.rm = T)) %>%   ungroup() %>%   glimpse() ## `summarise()` has grouped output by 'campaignid'. You can override using the ## `.groups` argument. ## Rows: 32 ## Columns: 4 ## $ campaignid  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"2… ## $ sample      <chr> \"10\", \"12\", \"14\", \"15\", \"16\", \"17\", \"19\", \"2\", \"21\", \"22\",… ## $ mean.relief <dbl> 3.217391, 2.809524, 2.440000, 2.518519, 4.000000, 3.333333… ## $ sd.relief   <dbl> 0.7952428, 0.4023739, 0.7118052, 0.8024180, 0.0000000, 0.9…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-habitat.html","id":"format-the-habitat-and-relief-data-for-plotting-and-modelling","dir":"Articles > R-workflows","previous_headings":"","what":"Format the habitat and relief data for plotting and modelling","title":"Format & visualise habitat data","text":"Join habitat data relief, metadata bathymetry derivatives. Format relief format suitable exploratory plotting.","code":"tidy.habitat <- metadata.bathy.derivatives %>%   left_join(habitat) %>%   left_join(tidy.relief) %>%   dplyr::mutate(longitude_dd = as.numeric(longitude_dd),                 latitude_dd = as.numeric(latitude_dd)) %>%   clean_names() %>%   glimpse() ## Joining with `by = join_by(campaignid, sample)` ## Joining with `by = join_by(campaignid, sample)` ## Rows: 192 ## Columns: 27 ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ sample                      <chr> \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"5\", \"… ## $ date_time                   <chr> \"14/03/2023 23:36\", \"14/03/2023 23:36\", \"1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth                       <chr> \"39.6\", \"39.6\", \"39.6\", \"39.6\", \"39.6\", \"3… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ x                           <dbl> 114.9236, 114.9236, 114.9236, 114.9236, 11… ## $ y                           <dbl> -34.13155, -34.13155, -34.13155, -34.13155… ## $ longitude_dd                <dbl> 114.9236, 114.9236, 114.9236, 114.9236, 11… ## $ latitude_dd                 <dbl> -34.13155, -34.13155, -34.13155, -34.13155… ## $ id                          <dbl> 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64… ## $ mbdepth                     <dbl> -34.97151, -34.97151, -34.97151, -34.97151… ## $ slope                       <dbl> 0.1468434, 0.1468434, 0.1468434, 0.1468434… ## $ aspect                      <dbl> 209.89577, 209.89577, 209.89577, 209.89577… ## $ tpi                         <dbl> 0.4215345, 0.4215345, 0.4215345, 0.4215345… ## $ tri                         <dbl> 0.7555733, 0.7555733, 0.7555733, 0.7555733… ## $ roughness                   <dbl> 2.211193, 2.211193, 2.211193, 2.211193, 2.… ## $ detrended                   <dbl> -5.663174, -5.663174, -5.663174, -5.663174… ## $ total_points_annotated      <dbl> 109, 109, 109, 109, 109, 109, 116, 116, 11… ## $ habitat                     <chr> \"Macroalgae\", \"Seagrasses\", \"Sessile inver… ## $ number                      <dbl> 96, 1, 3, 1, 8, 101, 110, 6, 0, 0, 0, 116,… ## $ mean_relief                 <dbl> 3.034483, 3.034483, 3.034483, 3.034483, 3.… ## $ sd_relief                   <dbl> 1.1174831, 1.1174831, 1.1174831, 1.1174831… plot.relief <- readRDS(here::here(paste0(\"r-workflows/data/staging/\", name, \"_relief.rds\"))) %>%   group_by(campaignid, sample, level_5) %>%   dplyr::summarise(number = sum(number)) %>%   ungroup() %>%   dplyr::mutate(class.relief = as.factor(level_5)) %>%   glimpse() ## `summarise()` has grouped output by 'campaignid', 'sample'. You can override ## using the `.groups` argument. ## Rows: 73 ## Columns: 5 ## $ campaignid   <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_stereo-BRUVs\", \"… ## $ sample       <chr> \"10\", \"10\", \"10\", \"12\", \"12\", \"14\", \"14\", \"14\", \"15\", \"15… ## $ level_5      <chr> \"2\", \"3\", \"4\", \"2\", \"3\", \"1\", \"2\", \"3\", \"1\", \"2\", \"3\", \"4… ## $ number       <dbl> 5, 8, 10, 4, 17, 3, 8, 14, 4, 6, 16, 1, 20, 6, 2, 13, 10,… ## $ class.relief <fct> 2, 3, 4, 2, 3, 1, 2, 3, 1, 2, 3, 4, 4, 2, 3, 4, 2, 3, 3, …"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-habitat.html","id":"visualise-the-habitat-and-relief-data","dir":"Articles > R-workflows","previous_headings":"","what":"Visualise the habitat and relief data","title":"Format & visualise habitat data","text":"Plot occurence data per habitat class. data point represents unique sample. Plot occurence data level relief. Create colour palette plotting. Format habitat wide format suitable plotting. Visualise habitat classes spatial pie charts. Choose individual habitat class visualise spatial bubble plots. Visualise individual habitat classes.","code":"ggplot() +   geom_quasirandom(data = tidy.habitat, aes(x = total_points_annotated, y = habitat), groupOnX = F, method = \"quasirandom\", alpha = 0.25, size = 1.8, width = 0.2) +   labs(x = \"Number of points\", y = \"\") +   theme_classic() ## Orientation inferred to be along y-axis; override with ## `position_quasirandom(orientation = 'x')` ggplot() +   geom_quasirandom(data = plot.relief, aes(x = number, y = class.relief), groupOnX = F, method = \"quasirandom\", alpha = 0.25, size = 1.8, width = 0.05) +   labs(x = \"Number of points\", y = \"Relief (0-5)\") +    theme_classic() ## Orientation inferred to be along y-axis; override with ## `position_quasirandom(orientation = 'x')` cols <- colorRampPalette(brewer.pal(12, \"Paired\"))(length(unique(tidy.habitat$habitat))) plot.habitat <- tidy.habitat %>%   pivot_wider(names_from = \"habitat\", values_from = \"number\", names_prefix = \"broad.\") %>%   glimpse() ## Rows: 32 ## Columns: 31 ## $ campaignid                    <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC… ## $ sample                        <chr> \"35\", \"5\", \"26\", \"23\", \"29\", \"4\", \"32\", … ## $ date_time                     <chr> \"14/03/2023 23:36\", \"14/03/2023 23:49\", … ## $ location                      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ site                          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … ## $ depth                         <chr> \"39.6\", \"42.7\", \"36\", \"41\", \"42.6\", \"45\"… ## $ successful_count              <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\"… ## $ successful_length             <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\"… ## $ successful_habitat_forward    <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\"… ## $ successful_habitat_backward   <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\"… ## $ x                             <dbl> 114.9236, 114.9292, 114.9284, 114.9190, … ## $ y                             <dbl> -34.13155, -34.12953, -34.12729, -34.128… ## $ longitude_dd                  <dbl> 114.9236, 114.9292, 114.9284, 114.9190, … ## $ latitude_dd                   <dbl> -34.13155, -34.12953, -34.12729, -34.128… ## $ id                            <dbl> 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, … ## $ mbdepth                       <dbl> -34.97151, -36.35807, -40.68553, -38.255… ## $ slope                         <dbl> 0.146843375, 0.812689749, 0.694289634, 0… ## $ aspect                        <dbl> 209.89577, 62.41434, 40.87387, 294.10675… ## $ tpi                           <dbl> 0.42153454, 2.39535522, -0.67607403, 0.4… ## $ tri                           <dbl> 0.75557327, 3.29823494, 2.39221191, 1.83… ## $ roughness                     <dbl> 2.21119308, 8.36493301, 8.36493301, 5.30… ## $ detrended                     <dbl> -5.6631737, -7.0394716, -11.2637815, -8.… ## $ total_points_annotated        <dbl> 109, 116, 123, 68, 56, 58, 25, 14, 28, 3… ## $ mean_relief                   <dbl> 3.034483, 3.900000, 4.000000, 3.555556, … ## $ sd_relief                     <dbl> 1.1174831, 0.4472136, 0.0000000, 0.85558… ## $ broad.Macroalgae              <dbl> 96, 110, 105, 50, 28, 50, 7, 1, 16, 30, … ## $ broad.Seagrasses              <dbl> 1, 6, 18, 11, 28, 6, 0, 1, 1, 9, 2, 4, 1… ## $ `broad.Sessile invertebrates` <dbl> 3, 0, 0, 7, 0, 2, 2, 0, 0, 0, 2, 0, 1, 0… ## $ `broad.Consolidated (hard)`   <dbl> 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0… ## $ `broad.Unconsolidated (soft)` <dbl> 8, 0, 0, 0, 0, 0, 13, 12, 11, 0, 0, 0, 0… ## $ broad.reef                    <dbl> 101, 116, 123, 68, 56, 58, 12, 2, 17, 39… leaflet() %>%                                             addTiles(group = \"Open Street Map\") %>%                              addProviderTiles('Esri.WorldImagery', group = \"World Imagery\") %>%   addLayersControl(baseGroups = c(\"World Imagery\", \"Open Street Map\"), options = layersControlOptions(collapsed = FALSE)) %>%   addMinicharts(plot.habitat$longitude_dd, plot.habitat$latitude_dd, type = \"pie\", colorPalette = cols, chartdata = plot.habitat[grep(\"broad\", names(plot.habitat))], width = 20, transitionTime = 0) %>%                    setView(mean(as.numeric(plot.habitat$longitude_dd)),            mean(as.numeric(plot.habitat$latitude_dd)), zoom = 12) hab.name <- 'Sessile invertebrates'  overzero <-  tidy.habitat %>%    filter(habitat %in% hab.name & number > 0)   equalzero <- tidy.habitat %>%    filter(habitat %in% hab.name & number == 0) bubble.plot <- leaflet(data = tidy.habitat) %>%                        addTiles() %>%                                                       addProviderTiles('Esri.WorldImagery', group = \"World Imagery\") %>%   addLayersControl(baseGroups = c(\"Open Street Map\", \"World Imagery\"), options = layersControlOptions(collapsed = FALSE))  if (nrow(overzero)) {                                                  bubble.plot <- bubble.plot %>%     addCircleMarkers(data = overzero, lat = ~ latitude_dd, lng = ~ longitude_dd, radius = ~ number + 3, fillOpacity = 0.5, stroke = FALSE, label = ~ as.character(sample))}  if (nrow(equalzero)) {                                               bubble.plot <- bubble.plot %>%     addCircleMarkers(data = equalzero, lat = ~ latitude_dd, lng = ~ longitude_dd, radius = 2, fillOpacity = 0.5, color = \"white\", stroke = FALSE, label = ~ as.character(sample))} bubble.plot"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/format-visualise-habitat.html","id":"save-the-final-tidy-habitat-data","dir":"Articles > R-workflows","previous_headings":"","what":"Save the final tidy habitat data","title":"Format & visualise habitat data","text":"","code":"saveRDS(tidy.habitat, file = here::here(paste(\"r-workflows/data/tidy/\", paste(name,\"tidy-habitat.rds\", sep = \"_\"), sep = \"/\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/habitat-modelling.html","id":"r-setup","dir":"Articles > R-workflows","previous_headings":"","what":"R setup","title":"Generate spatial predictions of habitat using FSSgam","text":"Load libraries. Set study name.","code":"library(CheckEM) library(tidyverse) library(mgcv) library(devtools) library(FSSgam) library(here) library(ggplot2) library(ggnewscale) library(viridis) library(terra) library(sf) library(patchwork) name <- 'example-bruv-workflow'"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/habitat-modelling.html","id":"load-data","dir":"Articles > R-workflows","previous_headings":"","what":"Load data","title":"Generate spatial predictions of habitat using FSSgam","text":"Load habitat point annotation data.","code":"dat <- readRDS(here::here(paste0(\"r-workflows/data/tidy/\",                        name, \"_tidy-habitat.rds\"))) %>%   glimpse() ## Rows: 192 ## Columns: 27 ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ sample                      <chr> \"35\", \"35\", \"35\", \"35\", \"35\", \"35\", \"5\", \"… ## $ date_time                   <chr> \"14/03/2023 23:36\", \"14/03/2023 23:36\", \"1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth                       <chr> \"39.6\", \"39.6\", \"39.6\", \"39.6\", \"39.6\", \"3… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ x                           <dbl> 114.9236, 114.9236, 114.9236, 114.9236, 11… ## $ y                           <dbl> -34.13155, -34.13155, -34.13155, -34.13155… ## $ longitude_dd                <dbl> 114.9236, 114.9236, 114.9236, 114.9236, 11… ## $ latitude_dd                 <dbl> -34.13155, -34.13155, -34.13155, -34.13155… ## $ id                          <dbl> 63, 63, 63, 63, 63, 63, 64, 64, 64, 64, 64… ## $ mbdepth                     <dbl> -34.97151, -34.97151, -34.97151, -34.97151… ## $ slope                       <dbl> 0.1468434, 0.1468434, 0.1468434, 0.1468434… ## $ aspect                      <dbl> 209.89577, 209.89577, 209.89577, 209.89577… ## $ tpi                         <dbl> 0.4215345, 0.4215345, 0.4215345, 0.4215345… ## $ tri                         <dbl> 0.7555733, 0.7555733, 0.7555733, 0.7555733… ## $ roughness                   <dbl> 2.211193, 2.211193, 2.211193, 2.211193, 2.… ## $ detrended                   <dbl> -5.663174, -5.663174, -5.663174, -5.663174… ## $ total_points_annotated      <dbl> 109, 109, 109, 109, 109, 109, 116, 116, 11… ## $ habitat                     <chr> \"Macroalgae\", \"Seagrasses\", \"Sessile inver… ## $ number                      <dbl> 96, 1, 3, 1, 8, 101, 110, 6, 0, 0, 0, 116,… ## $ mean_relief                 <dbl> 3.034483, 3.034483, 3.034483, 3.034483, 3.… ## $ sd_relief                   <dbl> 1.1174831, 1.1174831, 1.1174831, 1.1174831…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/habitat-modelling.html","id":"set-up-data-for-modelling","dir":"Articles > R-workflows","previous_headings":"","what":"Set up data for modelling","title":"Generate spatial predictions of habitat using FSSgam","text":"Set predictor variables. Check correlation predictor variables remove anything highly correlated (>0.95). Plot individual predictors assess transformations necessary. suggest use transformations absolutely necessary. example dataset, response variables relatively balanced distributions, therefor left untransformed.  Reset predictor variables remove highly correlated variables include transformed variables. Check make sure response variables less 80% zeroes. Full-subset GAM modelling produce unreliable results data zero inflated. Add directory save model outputs, set R environment model selection.","code":"names(dat) ##  [1] \"campaignid\"                  \"sample\"                      ##  [3] \"date_time\"                   \"location\"                    ##  [5] \"site\"                        \"depth\"                       ##  [7] \"successful_count\"            \"successful_length\"           ##  [9] \"successful_habitat_forward\"  \"successful_habitat_backward\" ## [11] \"x\"                           \"y\"                           ## [13] \"longitude_dd\"                \"latitude_dd\"                 ## [15] \"id\"                          \"mbdepth\"                     ## [17] \"slope\"                       \"aspect\"                      ## [19] \"tpi\"                         \"tri\"                         ## [21] \"roughness\"                   \"detrended\"                   ## [23] \"total_points_annotated\"      \"habitat\"                     ## [25] \"number\"                      \"mean_relief\"                 ## [27] \"sd_relief\" pred.vars <- c(\"mbdepth\",\"roughness\", \"detrended\",                 \"slope\", \"tpi\", \"aspect\", \"tri\") round(cor(dat[ , pred.vars]), 2) ##           mbdepth roughness detrended slope   tpi aspect   tri ## mbdepth      1.00     -0.66     -0.89 -0.65  0.03  -0.32 -0.59 ## roughness   -0.66      1.00      0.48  0.99  0.29   0.06  0.99 ## detrended   -0.89      0.48      1.00  0.47  0.00   0.39  0.42 ## slope       -0.65      0.99      0.47  1.00  0.29   0.06  0.99 ## tpi          0.03      0.29      0.00  0.29  1.00  -0.02  0.35 ## aspect      -0.32      0.06      0.39  0.06 -0.02   1.00  0.04 ## tri         -0.59      0.99      0.42  0.99  0.35   0.04  1.00 plot_transformations(pred.vars = pred.vars, dat = dat) pred.vars <- c(\"depth\",\"roughness\", \"detrended\",                 \"tpi\", \"aspect\", \"tri\") resp.vars.all = unique(as.character(dat$habitat)) resp.vars = character() for(i in 1:length(resp.vars.all)){   temp.dat = dat[which(dat$habitat == resp.vars.all[i]),]   if(length(which(temp.dat$habitat == 0)) / nrow(temp.dat) < 0.8){     resp.vars = c(resp.vars, resp.vars.all[i])} } resp.vars ## [1] \"Macroalgae\"            \"Seagrasses\"            \"Sessile invertebrates\" ## [4] \"Consolidated (hard)\"   \"Unconsolidated (soft)\" \"reef\" outdir    <- (\"r-workflows/model output/habitat/\") out.all   <- list() var.imp   <- list()"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/habitat-modelling.html","id":"run-the-full-subset-model-selection-process","dir":"Articles > R-workflows","previous_headings":"","what":"Run the full subset model selection process","title":"Generate spatial predictions of habitat using FSSgam","text":"loop adapted @beckyfisher/FSSgam, examples documentation available GitHub Fisher, R, Wilson, SK, Sin, TM, Lee, AC, Langlois, TJ. simple function full-subsets multiple regression ecology R. Ecol Evol. 2018; 8: 6104–6113. https://doi.org/10.1002/ece3.4134 Save model fits importance scores.","code":"for(i in 1:length(resp.vars)){   print(resp.vars[i])   use.dat <- dat[dat$habitat == resp.vars[i],]   use.dat   <- as.data.frame(use.dat)   Model1  <- gam(cbind(number, (total_points_annotated - number)) ~                     s(mbdepth, bs = 'cr'),                  family = binomial(\"logit\"),  data = use.dat)      model.set <- generate.model.set(use.dat = use.dat,                                   test.fit = Model1,                                   pred.vars.cont = pred.vars,                                   cyclic.vars = c(\"aspect\"),                                   k = 5,                                   cov.cutoff = 0.7   )   out.list <- fit.model.set(model.set,                             max.models = 600,                             parallel = T)   names(out.list)      out.list$failed.models    mod.table <- out.list$mod.data.out   mod.table <- mod.table[order(mod.table$AICc), ]   mod.table$cumsum.wi <- cumsum(mod.table$wi.AICc)   out.i     <- mod.table[which(mod.table$delta.AICc <= 2), ]   out.all   <- c(out.all, list(out.i))   var.imp   <- c(var.imp, list(out.list$variable.importance$aic$variable.weights.raw))      for(m in 1:nrow(out.i)){     best.model.name <- as.character(out.i$modname[m])          png(file = here::here(paste(outdir, m, resp.vars[i], \"mod_fits.png\", sep = \"\")))     if(best.model.name != \"null\"){       par(mfrow = c(3, 1), mar = c(9, 4, 3, 1))       best.model = out.list$success.models[[best.model.name]]       plot(best.model, all.terms = T, pages = 1, residuals = T, pch = 16)       mtext(side = 2, text = resp.vars[i], outer = F)}       dev.off()   } } names(out.all) <- resp.vars names(var.imp) <- resp.vars all.mod.fits <- list_rbind(out.all, names_to = \"response\") all.var.imp  <- do.call(\"rbind\",var.imp) write.csv(all.mod.fits[ , -2], file = here::here(paste0(outdir, name, \"_all.mod.fits.csv\"))) write.csv(all.var.imp,         file = here::here(paste0(outdir, name, \"_all.var.imp.csv\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/habitat-modelling.html","id":"spatially-predict-the-top-model-from-the-model-selection-process","dir":"Articles > R-workflows","previous_headings":"","what":"Spatially predict the top model from the model selection process","title":"Generate spatial predictions of habitat using FSSgam","text":"Transform habitat data wide format easy prediction. Load raster bathymetry data derivatives.  Transform raster dataframe predict onto. Manually set top model full subset model selection.","code":"widedat <- dat %>%   pivot_wider(values_from = \"number\", names_from = \"habitat\", values_fill = 0) %>%   clean_names() %>%   glimpse() ## Rows: 32 ## Columns: 31 ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ sample                      <chr> \"35\", \"5\", \"26\", \"23\", \"29\", \"4\", \"32\", \"3… ## $ date_time                   <chr> \"14/03/2023 23:36\", \"14/03/2023 23:49\", \"1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth                       <chr> \"39.6\", \"42.7\", \"36\", \"41\", \"42.6\", \"45\", … ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ x                           <dbl> 114.9236, 114.9292, 114.9284, 114.9190, 11… ## $ y                           <dbl> -34.13155, -34.12953, -34.12729, -34.12832… ## $ longitude_dd                <dbl> 114.9236, 114.9292, 114.9284, 114.9190, 11… ## $ latitude_dd                 <dbl> -34.13155, -34.12953, -34.12729, -34.12832… ## $ id                          <dbl> 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73… ## $ mbdepth                     <dbl> -34.97151, -36.35807, -40.68553, -38.25594… ## $ slope                       <dbl> 0.146843375, 0.812689749, 0.694289634, 0.4… ## $ aspect                      <dbl> 209.89577, 62.41434, 40.87387, 294.10675, … ## $ tpi                         <dbl> 0.42153454, 2.39535522, -0.67607403, 0.476… ## $ tri                         <dbl> 0.75557327, 3.29823494, 2.39221191, 1.8367… ## $ roughness                   <dbl> 2.21119308, 8.36493301, 8.36493301, 5.3012… ## $ detrended                   <dbl> -5.6631737, -7.0394716, -11.2637815, -8.69… ## $ total_points_annotated      <dbl> 109, 116, 123, 68, 56, 58, 25, 14, 28, 39,… ## $ mean_relief                 <dbl> 3.034483, 3.900000, 4.000000, 3.555556, 4.… ## $ sd_relief                   <dbl> 1.1174831, 0.4472136, 0.0000000, 0.8555853… ## $ macroalgae                  <dbl> 96, 110, 105, 50, 28, 50, 7, 1, 16, 30, 57… ## $ seagrasses                  <dbl> 1, 6, 18, 11, 28, 6, 0, 1, 1, 9, 2, 4, 14,… ## $ sessile_invertebrates       <dbl> 3, 0, 0, 7, 0, 2, 2, 0, 0, 0, 2, 0, 1, 0, … ## $ consolidated_hard           <dbl> 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, … ## $ unconsolidated_soft         <dbl> 8, 0, 0, 0, 0, 0, 13, 12, 11, 0, 0, 0, 0, … ## $ reef                        <dbl> 101, 116, 123, 68, 56, 58, 12, 2, 17, 39, … preds  <- rast(here::here(paste0(\"r-workflows/data/spatial/rasters/\",                           name, \"_bathymetry_derivatives.rds\"))) plot(preds) preddf <- as.data.frame(preds, xy = TRUE, na.rm = TRUE) %>%   dplyr::mutate(depth = abs(mbdepth)) %>%                                          clean_names() %>%   glimpse() ## Rows: 73,350 ## Columns: 10 ## $ x         <dbl> 115.1714, 115.1739, 115.1764, 115.1789, 115.1814, 115.1839, … ## $ y         <dbl> -33.60361, -33.60361, -33.60361, -33.60361, -33.60361, -33.6… ## $ mbdepth   <dbl> -14.83014, -13.89184, -14.18757, -14.48647, -14.47323, -14.3… ## $ slope     <dbl> 0.24350203, 0.19746646, 0.17799167, 0.18316828, 0.22091857, … ## $ aspect    <dbl> 339.995240, 341.597571, 21.180346, 12.600024, 356.337121, 35… ## $ tpi       <dbl> -3.721524e-01, 5.277313e-01, 1.502453e-01, -1.123428e-03, 9.… ## $ tri       <dbl> 0.9656481, 0.8277034, 0.6934198, 0.6945946, 0.8081013, 0.902… ## $ roughness <dbl> 2.807414, 2.421717, 2.196986, 2.156502, 2.581898, 2.606502, … ## $ detrended <dbl> -2.871674, -2.161609, -2.683798, -3.207528, -3.417629, -3.56… ## $ depth     <dbl> 14.83014, 13.89184, 14.18757, 14.48647, 14.47323, 14.39490, … # Sessile invertebrates m_inverts <- gam(cbind(sessile_invertebrates, total_points_annotated - sessile_invertebrates) ~                   s(detrended,     k = 5, bs = \"cr\")  +                   s(roughness, k = 5, bs = \"cr\") +                  s(tpi, k = 5, bs = \"cr\"),                 data = widedat, method = \"REML\", family = binomial(\"logit\")) summary(m_inverts) ##  ## Family: binomial  ## Link function: logit  ##  ## Formula: ## cbind(sessile_invertebrates, total_points_annotated - sessile_invertebrates) ~  ##     s(detrended, k = 5, bs = \"cr\") + s(roughness, k = 5, bs = \"cr\") +  ##         s(tpi, k = 5, bs = \"cr\") ##  ## Parametric coefficients: ##             Estimate Std. Error z value Pr(>|z|)     ## (Intercept)  -2.6145     0.1877  -13.93   <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##                edf Ref.df Chi.sq  p-value     ## s(detrended) 3.587  3.873 242.13  < 2e-16 *** ## s(roughness) 2.767  3.011  35.91  < 2e-16 *** ## s(tpi)       3.516  3.861  30.84 1.93e-06 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.971   Deviance explained = 95.4% ## -REML = 70.308  Scale est. = 1         n = 32 plot(m_inverts, pages = 1, residuals = T, cex = 5) # Rock m_rock <- gam(cbind(consolidated_hard, total_points_annotated - consolidated_hard) ~                     s(aspect,     k = 5, bs = \"cr\") +                    s(detrended, k = 5, bs = \"cr\") +                    s(tpi, k = 5, bs = \"cr\"),                   data = widedat, method = \"REML\", family = binomial(\"logit\")) summary(m_rock) ##  ## Family: binomial  ## Link function: logit  ##  ## Formula: ## cbind(consolidated_hard, total_points_annotated - consolidated_hard) ~  ##     s(aspect, k = 5, bs = \"cr\") + s(detrended, k = 5, bs = \"cr\") +  ##         s(tpi, k = 5, bs = \"cr\") ##  ## Parametric coefficients: ##             Estimate Std. Error z value Pr(>|z|)     ## (Intercept)  -6.1469     0.6382  -9.632   <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##                edf Ref.df Chi.sq  p-value     ## s(aspect)    3.610  3.881 14.619 0.005658 **  ## s(detrended) 3.191  3.561 20.012 0.000264 *** ## s(tpi)       1.000  1.000  4.553 0.032883 *   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.889   Deviance explained = 83.6% ## -REML = 27.178  Scale est. = 1         n = 32 plot(m_rock, pages = 1, residuals = T, cex = 5) # Sand m_sand <- gam(cbind(unconsolidated_soft, total_points_annotated - unconsolidated_soft) ~                  s(aspect,     k = 5, bs = \"cr\")  +                  s(detrended, k = 5, bs = \"cr\") +                 s(roughness, k = 5, bs = \"cr\"),                data = widedat, method = \"REML\", family = binomial(\"logit\")) summary(m_sand) ##  ## Family: binomial  ## Link function: logit  ##  ## Formula: ## cbind(unconsolidated_soft, total_points_annotated - unconsolidated_soft) ~  ##     s(aspect, k = 5, bs = \"cr\") + s(detrended, k = 5, bs = \"cr\") +  ##         s(roughness, k = 5, bs = \"cr\") ##  ## Parametric coefficients: ##             Estimate Std. Error z value Pr(>|z|)     ## (Intercept)  -11.744      3.232  -3.634 0.000279 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##                edf Ref.df Chi.sq p-value     ## s(aspect)    3.732  3.928 54.809  <2e-16 *** ## s(detrended) 3.646  3.914 92.895  <2e-16 *** ## s(roughness) 1.966  2.195  9.042  0.0161 *   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.867   Deviance explained = 83.1% ## -REML = 66.533  Scale est. = 1         n = 32 plot(m_sand, pages = 1, residuals = T, cex = 5) # Seagrasses m_seagrass <- gam(cbind(seagrasses, total_points_annotated - seagrasses) ~                  s(aspect,     k = 5, bs = \"cr\")  +                  s(detrended, k = 5, bs = \"cr\") +                  s(roughness, k = 5, bs = \"cr\"),                data = widedat, method = \"REML\", family = binomial(\"logit\")) summary(m_seagrass) ##  ## Family: binomial  ## Link function: logit  ##  ## Formula: ## cbind(seagrasses, total_points_annotated - seagrasses) ~ s(aspect,  ##     k = 5, bs = \"cr\") + s(detrended, k = 5, bs = \"cr\") + s(roughness,  ##     k = 5, bs = \"cr\") ##  ## Parametric coefficients: ##             Estimate Std. Error z value Pr(>|z|)     ## (Intercept)   -51.90      10.61  -4.894  9.9e-07 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##                edf Ref.df Chi.sq p-value     ## s(aspect)    3.594  3.874  38.01  <2e-16 *** ## s(detrended) 3.876  3.977  46.87  <2e-16 *** ## s(roughness) 3.310  3.647  45.92  <2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.668   Deviance explained =   83% ## -REML = 84.672  Scale est. = 1         n = 32 plot(m_seagrass, pages = 1, residuals = T, cex = 5) # Macroalgae m_macro <- gam(cbind(macroalgae, total_points_annotated - macroalgae) ~                   s(mbdepth,     k = 5, bs = \"cr\")  +                   s(detrended, k = 5, bs = \"cr\") +                  s(tpi, k = 5, bs = \"cr\"),                 data = widedat, method = \"REML\", family = binomial(\"logit\")) summary(m_macro) ##  ## Family: binomial  ## Link function: logit  ##  ## Formula: ## cbind(macroalgae, total_points_annotated - macroalgae) ~ s(mbdepth,  ##     k = 5, bs = \"cr\") + s(detrended, k = 5, bs = \"cr\") + s(tpi,  ##     k = 5, bs = \"cr\") ##  ## Parametric coefficients: ##             Estimate Std. Error z value Pr(>|z|) ## (Intercept)  0.09879    0.08551   1.155    0.248 ##  ## Approximate significance of smooth terms: ##                edf Ref.df Chi.sq  p-value     ## s(mbdepth)   2.454  2.922 130.02  < 2e-16 *** ## s(detrended) 1.000  1.000  15.81 7.01e-05 *** ## s(tpi)       3.595  3.878  58.72  < 2e-16 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.768   Deviance explained = 80.5% ## -REML = 148.34  Scale est. = 1         n = 32 plot(m_macro, pages = 1, residuals = T, cex = 5) # Reef m_reef <- gam(cbind(reef, total_points_annotated - reef) ~                   s(aspect,     k = 5, bs = \"cr\")  +                   s(detrended, k = 5, bs = \"cr\") +                  s(roughness, k = 5, bs = \"cr\"),                 data = widedat, method = \"REML\", family = binomial(\"logit\")) summary(m_reef) ##  ## Family: binomial  ## Link function: logit  ##  ## Formula: ## cbind(reef, total_points_annotated - reef) ~ s(aspect, k = 5,  ##     bs = \"cr\") + s(detrended, k = 5, bs = \"cr\") + s(roughness,  ##     k = 5, bs = \"cr\") ##  ## Parametric coefficients: ##             Estimate Std. Error z value Pr(>|z|)     ## (Intercept)   11.744      3.232   3.634 0.000279 *** ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Approximate significance of smooth terms: ##                edf Ref.df Chi.sq p-value     ## s(aspect)    3.732  3.928 54.809  <2e-16 *** ## s(detrended) 3.646  3.914 92.895  <2e-16 *** ## s(roughness) 1.966  2.195  9.042  0.0161 *   ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## R-sq.(adj) =  0.867   Deviance explained = 83.1% ## -REML = 66.533  Scale est. = 1         n = 32 plot(m_reef, pages = 1, residuals = T, cex = 5)"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/habitat-modelling.html","id":"predict-rasterise-and-plot-habitat-predictions","dir":"Articles > R-workflows","previous_headings":"","what":"Predict, rasterise and plot habitat predictions","title":"Generate spatial predictions of habitat using FSSgam","text":"","code":"preddf <- cbind(preddf,                  \"pmacro\" = predict(m_macro, preddf, type = \"response\"),                 \"prock\" = predict(m_rock, preddf, type = \"response\"),                 \"psand\" = predict(m_sand, preddf, type = \"response\"),                 \"pseagrass\" = predict(m_seagrass, preddf, type = \"response\"),                 \"pinverts\" = predict(m_inverts, preddf, type = \"response\"),                 \"preef\" = predict(m_reef, preddf, type = \"response\")) %>%   glimpse() ## Rows: 73,350 ## Columns: 16 ## $ x         <dbl> 115.1714, 115.1739, 115.1764, 115.1789, 115.1814, 115.1839, … ## $ y         <dbl> -33.60361, -33.60361, -33.60361, -33.60361, -33.60361, -33.6… ## $ mbdepth   <dbl> -14.83014, -13.89184, -14.18757, -14.48647, -14.47323, -14.3… ## $ slope     <dbl> 0.24350203, 0.19746646, 0.17799167, 0.18316828, 0.22091857, … ## $ aspect    <dbl> 339.995240, 341.597571, 21.180346, 12.600024, 356.337121, 35… ## $ tpi       <dbl> -3.721524e-01, 5.277313e-01, 1.502453e-01, -1.123428e-03, 9.… ## $ tri       <dbl> 0.9656481, 0.8277034, 0.6934198, 0.6945946, 0.8081013, 0.902… ## $ roughness <dbl> 2.807414, 2.421717, 2.196986, 2.156502, 2.581898, 2.606502, … ## $ detrended <dbl> -2.871674, -2.161609, -2.683798, -3.207528, -3.417629, -3.56… ## $ depth     <dbl> 14.83014, 13.89184, 14.18757, 14.48647, 14.47323, 14.39490, … ## $ pmacro    <dbl> 0.9994044, 0.9986021, 0.9991463, 0.9991944, 0.9991232, 0.999… ## $ prock     <dbl> 0.007066725, 0.002316534, 0.032253187, 0.125768311, 0.005744… ## $ psand     <dbl> 2.220446e-16, 2.220446e-16, 1.530496e-04, 1.067617e-04, 2.22… ## $ pseagrass <dbl> 0.63705545, 0.70420525, 0.45269763, 0.33056725, 0.72609061, … ## $ pinverts  <dbl> 0.005092447, 0.005315867, 0.004900178, 0.005803717, 0.006133… ## $ preef     <dbl> 1.0000000, 1.0000000, 0.9998470, 0.9998932, 1.0000000, 1.000…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/habitat-modelling.html","id":"tidy-and-save-the-final-dataset","dir":"Articles > R-workflows","previous_headings":"","what":"Tidy and save the final dataset","title":"Generate spatial predictions of habitat using FSSgam","text":"Create column ‘dominant’ habitat Save final predictions","code":"preddf$dom_tag <- apply(preddf %>% dplyr::select(pmacro, prock, psand, pseagrass, pinverts), 1,                          FUN = function(x){names(which.max(x))}) glimpse(preddf) ## Rows: 73,350 ## Columns: 17 ## $ x         <dbl> 115.1714, 115.1739, 115.1764, 115.1789, 115.1814, 115.1839, … ## $ y         <dbl> -33.60361, -33.60361, -33.60361, -33.60361, -33.60361, -33.6… ## $ mbdepth   <dbl> -14.83014, -13.89184, -14.18757, -14.48647, -14.47323, -14.3… ## $ slope     <dbl> 0.24350203, 0.19746646, 0.17799167, 0.18316828, 0.22091857, … ## $ aspect    <dbl> 339.995240, 341.597571, 21.180346, 12.600024, 356.337121, 35… ## $ tpi       <dbl> -3.721524e-01, 5.277313e-01, 1.502453e-01, -1.123428e-03, 9.… ## $ tri       <dbl> 0.9656481, 0.8277034, 0.6934198, 0.6945946, 0.8081013, 0.902… ## $ roughness <dbl> 2.807414, 2.421717, 2.196986, 2.156502, 2.581898, 2.606502, … ## $ detrended <dbl> -2.871674, -2.161609, -2.683798, -3.207528, -3.417629, -3.56… ## $ depth     <dbl> 14.83014, 13.89184, 14.18757, 14.48647, 14.47323, 14.39490, … ## $ pmacro    <dbl> 0.9994044, 0.9986021, 0.9991463, 0.9991944, 0.9991232, 0.999… ## $ prock     <dbl> 0.007066725, 0.002316534, 0.032253187, 0.125768311, 0.005744… ## $ psand     <dbl> 2.220446e-16, 2.220446e-16, 1.530496e-04, 1.067617e-04, 2.22… ## $ pseagrass <dbl> 0.63705545, 0.70420525, 0.45269763, 0.33056725, 0.72609061, … ## $ pinverts  <dbl> 0.005092447, 0.005315867, 0.004900178, 0.005803717, 0.006133… ## $ preef     <dbl> 1.0000000, 1.0000000, 0.9998470, 0.9998932, 1.0000000, 1.000… ## $ dom_tag   <chr> \"pmacro\", \"pmacro\", \"pmacro\", \"pmacro\", \"pmacro\", \"pmacro\", … saveRDS(preddf, file = here::here(paste0(\"r-workflows/model output/habitat/\",                                name, \"_habitat-prediction.RDS\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/habitat-modelling.html","id":"set-up-for-plotting","dir":"Articles > R-workflows","previous_headings":"","what":"Set up for plotting","title":"Generate spatial predictions of habitat using FSSgam","text":"Load marine park data. dataset used 2022 Collaborative Australian Protected Areas Database, available free download https://fed.dcceew.gov.au/datasets/782c02c691014efe8ffbd27445fe41d7_0/explore. Feel free replace shapefile suitable dataset available study area. Set colours habitat plotting.","code":"marine.parks <- st_read(here::here(\"r-workflows/data/spatial/shapefiles/Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine.shp\")) %>%   st_make_valid() %>%   dplyr::mutate(ZONE_TYPE = str_replace_all(ZONE_TYPE,\"\\\\s*\\\\([^\\\\)]+\\\\)\", \"\")) %>%   dplyr::filter(str_detect(ZONE_TYPE, \"Sanctuary|National Park\"), STATE %in% \"WA\") %>%                           st_transform(4326) ## Reading layer `Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine' from data source `/home/runner/work/CheckEM/CheckEM/r-workflows/data/spatial/shapefiles/Collaborative_Australian_Protected_Areas_Database_(CAPAD)_2022_-_Marine.shp'  ##   using driver `ESRI Shapefile' ## Simple feature collection with 3775 features and 26 fields ## Geometry type: MULTIPOLYGON ## Dimension:     XY ## Bounding box:  xmin: 70.71702 ymin: -58.44947 xmax: 170.3667 ymax: -8.473407 ## Geodetic CRS:  WGS 84 unique(preddf$dom_tag) ## [1] \"pmacro\"    \"pseagrass\" \"psand\"     \"pinverts\"  \"prock\" hab_fills <- scale_fill_manual(values = c(   \"psand\" = \"wheat\",   \"pinverts\" = \"plum\",   \"pseagrass\" = \"forestgreen\",   \"pmacro\" = \"darkgoldenrod4\" ), name = \"Habitat\")"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/habitat-modelling.html","id":"plot-the-dominant-habitats","dir":"Articles > R-workflows","previous_headings":"","what":"Plot the dominant habitats","title":"Generate spatial predictions of habitat using FSSgam","text":"Build plot elements display.","code":"ggplot() +   geom_tile(data = preddf, aes(x, y, fill = dom_tag)) +   hab_fills +    new_scale_fill() +   geom_sf(data = marine.parks, fill = NA, colour = \"#7bbc63\",            size = 0.2, show.legend = F) +   coord_sf(xlim = c(min(preddf$x), max(preddf$x)),            ylim = c(min(preddf$y), max(preddf$y))) +   labs(x = NULL, y = NULL, colour = NULL) +   theme_minimal()"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/habitat-modelling.html","id":"plot-the-individual-habitat-probabilities","dir":"Articles > R-workflows","previous_headings":"","what":"Plot the individual habitat probabilities","title":"Generate spatial predictions of habitat using FSSgam","text":"Transform habitat predictions long format easy plotting ggplot::facet_wrap. Build plot elements individual habitat probabilities.","code":"indclass <- preddf %>%   pivot_longer(cols = starts_with(\"p\"), names_to = \"habitat\",                 values_to = \"Probability\") %>%   dplyr::mutate(habitat = case_when(habitat %in% \"pinverts\" ~ \"Sessile invertebrates\",                                     habitat %in% \"pmacro\" ~ \"Macroalgae\",                                     habitat %in% \"prock\" ~ \"Rock\",                                     habitat %in% \"psand\" ~ \"Sand\",                                     habitat %in% \"pseagrass\" ~ \"Seagrass\",                                     habitat %in% \"preef\" ~ \"Reef\")) %>%   glimpse() ## Rows: 440,100 ## Columns: 13 ## $ x           <dbl> 115.1714, 115.1714, 115.1714, 115.1714, 115.1714, 115.1714… ## $ y           <dbl> -33.60361, -33.60361, -33.60361, -33.60361, -33.60361, -33… ## $ mbdepth     <dbl> -14.83014, -14.83014, -14.83014, -14.83014, -14.83014, -14… ## $ slope       <dbl> 0.2435020, 0.2435020, 0.2435020, 0.2435020, 0.2435020, 0.2… ## $ aspect      <dbl> 339.99524, 339.99524, 339.99524, 339.99524, 339.99524, 339… ## $ tpi         <dbl> -0.372152448, -0.372152448, -0.372152448, -0.372152448, -0… ## $ tri         <dbl> 0.9656481, 0.9656481, 0.9656481, 0.9656481, 0.9656481, 0.9… ## $ roughness   <dbl> 2.807414, 2.807414, 2.807414, 2.807414, 2.807414, 2.807414… ## $ detrended   <dbl> -2.871674, -2.871674, -2.871674, -2.871674, -2.871674, -2.… ## $ depth       <dbl> 14.83014, 14.83014, 14.83014, 14.83014, 14.83014, 14.83014… ## $ dom_tag     <chr> \"pmacro\", \"pmacro\", \"pmacro\", \"pmacro\", \"pmacro\", \"pmacro\"… ## $ habitat     <chr> \"Macroalgae\", \"Rock\", \"Sand\", \"Seagrass\", \"Sessile inverte… ## $ Probability <dbl> 9.994044e-01, 7.066725e-03, 2.220446e-16, 6.370555e-01, 5.… ggplot() +   geom_tile(data = indclass, aes(x, y, fill = Probability)) +   scale_fill_viridis(option = \"D\", direction = -1) +   new_scale_fill() +                        geom_sf(data = marine.parks, fill = NA, colour = \"#7bbc63\",            size = 0.2, show.legend = F) +   coord_sf(xlim = c(min(preddf$x), max(preddf$x)),            ylim = c(min(preddf$y), max(preddf$y))) +   labs(x = NULL, y = NULL, fill = \"Probability\") +   theme_minimal() +   facet_wrap(~habitat) +   theme(axis.text.x = element_text(size = 7))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/spatial-layers.html","id":"r-set-up","dir":"Articles > R-workflows","previous_headings":"","what":"R set up","title":"Generate spatial layers for modelling","text":"Load necessary libraries. Set study name.","code":"library(sf) library(terra) library(stars) library(starsExtra) library(tidyverse) library(here) name <- 'example-bruv-workflow'"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/spatial-layers.html","id":"load-bathymetry-data-and-create-bathymetry-derivatives","dir":"Articles > R-workflows","previous_headings":"","what":"Load bathymetry data and create bathymetry derivatives","title":"Generate spatial layers for modelling","text":"bathymetry data used example relatively low spatial resolution dataset downloaded https://ecat.ga.gov.au/geonetwork/srv/eng/catalog.search#/metadata/148758. Feel free replace suitable bathymetry .tif format. Calculate terrain derivatives. Calculate detrended bathymetry. Join bathymetry terrain detrended derivatives. Save spatial-layers.","code":"bathy <- rast(here::here(\"r-workflows/data/spatial/rasters/swc_ga250m.tif\")) %>%   clamp(upper = 0, lower = -250, values = F) %>%   trim() preds <- terrain(bathy, neighbors = 8,                  v = c(\"slope\", \"aspect\", \"TPI\", \"TRI\", \"roughness\"),           # Remove here as necessary                  unit = \"degrees\") zstar <- st_as_stars(bathy)                                                     detre <- detrend(zstar, parallel = 8)                                            detre <- as(object = detre, Class = \"SpatRaster\")                                names(detre) <- c(\"detrended\", \"lineartrend\") preds <- rast(list(bathy, preds, detre[[1]]))                                    names(preds)[1] <- \"mbdepth\" preds_w <- wrap(preds) saveRDS(preds_w,            file = here::here(paste0(\"r-workflows/data/spatial/rasters/\",                          name, \"_bathymetry_derivatives.rds\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/spatial-layers.html","id":"load-metadata-and-extract-site-specific-derivatives","dir":"Articles > R-workflows","previous_headings":"","what":"Load metadata and extract site-specific derivatives","title":"Generate spatial layers for modelling","text":"Read metadata. Convert metadata spatial file. Check see metadata bathymetry align correctly. Add latitude longitude coordinates back metadata. Extract bathymetry derivatives sampling location.","code":"metadata <- readRDS(here::here(paste0(\"r-workflows/data/tidy/\",                              name, \"_Metadata.rds\"))) %>%   dplyr::mutate(longitude_dd = as.numeric(longitude_dd),                 latitude_dd = as.numeric(latitude_dd)) %>%   glimpse() ## Rows: 94 ## Columns: 12 ## $ campaignid                  <chr> \"2022-05_PtCloates_stereo-BRUVS\", \"2022-05… ## $ sample                      <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9… ## $ longitude_dd                <dbl> 113.5447, 113.5628, 113.5515, 113.5555, 11… ## $ latitude_dd                 <dbl> -22.7221, -22.6957, -22.7379, -22.7337, -2… ## $ date_time                   <chr> \"2022-05-22T10:03:24+08:00\", \"2022-05-22T1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"93.9\", \"77.3\", \"78.3\", \"73.9\", \"81.9\", \"7… ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ successful_habitat_backward <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… metadata.vect <- vect(metadata, geom = c(\"longitude_dd\", \"latitude_dd\"), crs = \"epsg:4326\") plot(preds[[1]]) plot(metadata.vect, add = T) tidy.metadata_t   <- as.data.frame(metadata.vect, geom = \"XY\") %>%   left_join(metadata) ## Joining with `by = join_by(campaignid, sample, date_time, location, site, ## depth_m, successful_count, successful_length, successful_habitat_forward, ## successful_habitat_backward)` metadata.bathy.derivatives   <- cbind(tidy.metadata_t,                                       terra::extract(preds, metadata.vect)) %>%   dplyr::filter(!is.na(depth),                                                                   !is.na(roughness)) %>%   glimpse() ## Warning: There was 1 warning in `dplyr::filter()`. ## ℹ In argument: `!is.na(depth)`. ## Caused by warning in `is.na()`: ## ! is.na() applied to non-(list or vector) of type 'closure' ## Rows: 32 ## Columns: 22 ## $ campaignid                  <chr> \"2023-03_SwC_stereo-BRUVs\", \"2023-03_SwC_s… ## $ sample                      <chr> \"35\", \"5\", \"26\", \"23\", \"29\", \"4\", \"32\", \"3… ## $ date_time                   <chr> \"14/03/2023 23:36\", \"14/03/2023 23:49\", \"1… ## $ location                    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ site                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… ## $ depth_m                     <chr> \"39.6\", \"42.7\", \"36\", \"41\", \"42.6\", \"45\", … ## $ successful_count            <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_length           <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_forward  <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ successful_habitat_backward <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", … ## $ x                           <dbl> 114.9236, 114.9292, 114.9284, 114.9190, 11… ## $ y                           <dbl> -34.13155, -34.12953, -34.12729, -34.12832… ## $ longitude_dd                <dbl> 114.9236, 114.9292, 114.9284, 114.9190, 11… ## $ latitude_dd                 <dbl> -34.13155, -34.12953, -34.12729, -34.12832… ## $ ID                          <dbl> 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73… ## $ mbdepth                     <dbl> -34.97151, -36.35807, -40.68553, -38.25594… ## $ slope                       <dbl> 0.146843375, 0.812689749, 0.694289634, 0.4… ## $ aspect                      <dbl> 209.89577, 62.41434, 40.87387, 294.10675, … ## $ TPI                         <dbl> 0.42153454, 2.39535522, -0.67607403, 0.476… ## $ TRI                         <dbl> 0.75557327, 3.29823494, 2.39221191, 1.8367… ## $ roughness                   <dbl> 2.21119308, 8.36493301, 8.36493301, 5.3012… ## $ detrended                   <dbl> -5.6631737, -7.0394716, -11.2637815, -8.69…"},{"path":"https://globalarchivemanual.github.io/CheckEM/articles/r-workflows/spatial-layers.html","id":"save-the-joined-metadata-and-bathymetry-derivatives","dir":"Articles > R-workflows","previous_headings":"","what":"Save the joined metadata and bathymetry derivatives","title":"Generate spatial layers for modelling","text":"","code":"saveRDS(metadata.bathy.derivatives, here::here(paste0(\"r-workflows/data/tidy/\", name, \"_metadata-bathymetry-derivatives.rds\")))"},{"path":"https://globalarchivemanual.github.io/CheckEM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brooke Gibbons. Author, maintainer. Claude Spencer. Author. Tim Langlois. Author. Todd Bond. Contributor. Jacquomo Monk. Contributor. Jordan Goetze. Contributor. . Funder. . Funder.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gibbons B, Spencer C, Langlois T (2024). CheckEM: R package Shiny App Formatting, Checking, Visualising Analysing Stereo-Video Annotation Data. R package version 0.1.0, https://globalarchivemanual.github.io/CheckEM/.","code":"@Manual{,   title = {CheckEM: An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data},   author = {Brooke Gibbons and Claude Spencer and Tim Langlois},   year = {2024},   note = {R package version 0.1.0},   url = {https://globalarchivemanual.github.io/CheckEM/}, }"},{"path":"https://globalarchivemanual.github.io/CheckEM/index.html","id":"stereo-video-workflows-for-fish-and-benthic-ecologists","dir":"","previous_headings":"","what":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","title":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","text":"Stereo imagery widely used research institutions management bodies around world cost-effective non-destructive method research monitor fish habitats (Whitmarsh, Fairweather Huveneers, 2017). Stereo-video can provide accurate precise size range measurements can used study spatial temporal patterns fish assemblages (McLean et al., 2016), habitat composition complexity (Collins et al., 2017), behaviour (Goetze et al., 2017), responses anthropogenic pressures (Bosch et al., 2022) recovery growth benthic fauna (Langlois et al. 2020). important users stereo-video collect, annotate, quality control store data consistent manner, ensure data produced highest quality possible enable large scale collaborations. collate existing best practices propose new tools equip ecologists ensure aspects stereo-video workflow performed consistent way.","code":""},{"path":[]},{"path":"https://globalarchivemanual.github.io/CheckEM/index.html","id":"id_1-data-collection","dir":"","previous_headings":"","what":"1. Data Collection","title":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","text":"Standardised protocols reduce variation methodologies among researchers, encourage use Findable, Accessible, Interoperable Reusable (FAIR, Wilkinson et al., 2016) protocols, increases collaborations allows researchers answer broadscale ecological questions. Two standard operating procedures field data collection published: globally endorsed best-practice field manual baited remote underwater stereo-video (stereo-BRUVs) published 2020 (Langlois et al., 2020). field manual available online . best-practice field manual diver operated stereo-video (stereo-DOVs) published 2019. field manual can found online .","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/index.html","id":"id_2-video-annotation","dir":"","previous_headings":"","what":"2. Video Annotation","title":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","text":"two field manuals mentioned outline standard protocols video annotation. developed creating step--step annotation guides fish habitat using two common software developed SeaGIS, EventMeasure TransectMeasure: annotation guide EventMeasure outlines obtain count data length measurements stereo-BRUV imagery. annotation guide TransectMeasure outlines rapid approach characterise benthic composition complexity horizontally facing imagery (including stereo-BRUVs panoramic drop cameras), adapting existing standardised schema benthic composition (CATAMI classification scheme) benthic complexity per Wilson et al. (2006).","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/index.html","id":"id_3-quality-control","dir":"","previous_headings":"","what":"3. Quality Control","title":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","text":"Robust automated quality control procedures essential consistently identify errors stereo-video data provide immediate feedback datasets contributed environmental reporting (Campbell et al., 2013). developed interactive web-based application, called CheckEM, allow users compare annotations life-history information, create interactive plots tables graphical interface, provide summarised data error reports download, addition ability compile multiple discrete annotation data sets single synthesis ready databasing analysis. free online version app can accessed via link can run local version CheckEM application (without internet) using R (see instructions ). user guide CheckEM shiny app available also developed R-package, containing functions workflows, allow R-savvy ecologists perform quality control checks, format model data. Instructions installing R-package can found . R workflows available : Check habitat data exported TransectMeasure Check fish data exported EventMeasure Generate spatial layers modelling Format & visualise habitat data Format & visualise fish data Generate spatial predictions habitat using FSSgam Generate spatial predictions fish using FSSgam","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/index.html","id":"id_4-data-storage","dir":"","previous_headings":"","what":"4. Data Storage","title":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","text":"GlobalArchive designed centralised repository ecological survey data associated information. overarching design principles GlobalArchive included ease use, secure user access, flexible data import, collection sampling image analysis information. GlobalArchive provides secure archive metadata associated annotation data files, focus stereo techniques. Following data format required GlobalArchive ensures researchers formating theire data consistent way allows multiple researchers easily combine data together. encourage users stereo-video upload store stereo-video data GlobalArchive enable future colloborations answer broad-scale ecological questions.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/index.html","id":"our-aim","dir":"","previous_headings":"","what":"Our aim","title":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","text":"curated exisiting standard operating procedures developed new tools improve consistency aspects stereo-video workflow. encourage use tools open feedback. hope efforts standardise stereo-video workflow streamline data collection, annotation quality control result data meet FAIR principles increase colloboration stereo-video users.","code":""},{"path":[]},{"path":"https://globalarchivemanual.github.io/CheckEM/index.html","id":"to-install-in-r","dir":"","previous_headings":"","what":"To install in R","title":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","text":"","code":"install.packages('remotes') library('remotes') options(timeout=9999999)  remotes::install_github(\"GlobalArchiveManual/CheckEM\") library(CheckEM)"},{"path":"https://globalarchivemanual.github.io/CheckEM/index.html","id":"shiny-app","dir":"","previous_headings":"","what":"Shiny-app","title":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","text":"CheckEM available web based app hosted shinyapps.io can accessed link can run local version CheckEM (without internet) using R via:","code":"CheckEM::runCheckEM()"},{"path":"https://globalarchivemanual.github.io/CheckEM/index.html","id":"feedback","dir":"","previous_headings":"","what":"Feedback","title":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","text":"Please submit feedback R package, web based application, workflows field manuals using form.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"An R package and Shiny App for Formatting, Checking, Visualising and Analysing Stereo-Video Annotation Data","text":"Australian Data Partnership: Fish Shark Data project received investment (https://doi.org/10.47486/DP761) Australian Research Data Commons (ARDC) University Western Australia. ARDC funded National Collaborative Research Infrastructure Strategy (NCRIS).","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/add_zeros_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Add in zeros for deployments not present in the count data — add_zeros_count","title":"Add in zeros for deployments not present in the count data — add_zeros_count","text":"Add zeros deployments present count data","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/add_zeros_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add in zeros for deployments not present in the count data — add_zeros_count","text":"","code":"add_zeros_count(count_data, metadata)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/add_zeros_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add in zeros for deployments not present in the count data — add_zeros_count","text":"count_data  metadata","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/add_zeros_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add in zeros for deployments not present in the count data — add_zeros_count","text":"dataframe row every species count data, every sample metadata","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/add_zeros_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Add in zeros for deployments not present in the length data — add_zeros_length","title":"Add in zeros for deployments not present in the length data — add_zeros_length","text":"Add zeros deployments present length data","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/add_zeros_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add in zeros for deployments not present in the length data — add_zeros_length","text":"","code":"add_zeros_length(length_data, metadata)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/add_zeros_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add in zeros for deployments not present in the length data — add_zeros_length","text":"length_data  metadata","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/add_zeros_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add in zeros for deployments not present in the length data — add_zeros_length","text":"dataframe row every species length data, every sample metadata","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardise Column Names in a Data Frame — clean_names","title":"Standardise Column Names in a Data Frame — clean_names","text":"function takes data frame standardises column names converting lower case, replacing special characters underscores, ensuring names syntactically valid R names.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardise Column Names in a Data Frame — clean_names","text":"","code":"clean_names(dat)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardise Column Names in a Data Frame — clean_names","text":"dat data frame whose column names need standardized.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/clean_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardise Column Names in a Data Frame — clean_names","text":"data frame standardised column names. column names converted lower case, special characters replaced underscores, redundant underscores end names removed.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/clean_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardise Column Names in a Data Frame — clean_names","text":"","code":"# Create a data frame with various column names dat <- data.frame(\"NAmE1\" = 1:3, \"name-2\" = 4:6, \"nAMe.-72\" = 7:9)  # Clean the column names cleaned_dat <- clean_names(dat) #> Loading required package: tidyverse #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.4     ✔ readr     2.1.5 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 #> ✔ purrr     1.0.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors  # Check the result print(cleaned_dat) #>   name1 name_2 name_72 #> 1     1      4       7 #> 2     2      5       8 #> 3     3      6       9"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/create_cti.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Community Temperature Index as per Day et al. 2018 — create_cti","title":"Create Community Temperature Index as per Day et al. 2018 — create_cti","text":"function creates new dataframe containing Community Temperature Index (CTI) fish species abundance data. function designed work data extracted GlobalArchive using 'ga_api_count' function, processed using provided scripts. input dataframe must contain columns 'campaignid', 'sample', 'count', 'family', 'genus' 'species'. CTI calculated","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/create_cti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Community Temperature Index as per Day et al. 2018 — create_cti","text":"","code":"create_cti(data, life_history = CheckEM::australia_life_history)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/create_cti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Community Temperature Index as per Day et al. 2018 — create_cti","text":"data dataframe columns 'campaignid', 'sample', 'count', 'family', 'genus' 'species' life_history dataframe containing thermal niche data fish species. example dataframe see CheckEM::australia_life_history.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/create_cti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Community Temperature Index as per Day et al. 2018 — create_cti","text":"data frame containing campaignid, sample cti (value Community Temperature Index). Note dataframe may less rows number samples, may samples fish valid thermal niche data.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/create_cti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Community Temperature Index as per Day et al. 2018 — create_cti","text":"","code":"if (FALSE) { # \\dontrun{ # Fetch metadata for a specific synthesis count <- readRDS(paste0(\"data/geographe/raw/\", name, \"_complete_count.RDS\")) %>%   dplyr::select(campaignid, sample, family, genus, species, count) %>%   dplyr::mutate(scientific_name = paste(family, genus, species, sep = \" \")) %>%   glimpse()    cti <- create_cti(data = count) %>%   dplyr::rename(number = cti) %>% # Rename the column to number to match with other dataframes for FSSgam modelling   dplyr::mutate(response = \"cti\") %>%   glimpse()    } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/create_min_max.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Minimum and Maximum Size Limits for Fish Species — create_min_max","title":"Calculate Minimum and Maximum Size Limits for Fish Species — create_min_max","text":"function processes data frame containing fish life history information compute minimum maximum size limits species based maximum length check annotations . uses maximum length data genus family levels fill missing maximum lengths species level. resulting data frame includes computed minimum maximum size limits millimeters.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/create_min_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Minimum and Maximum Size Limits for Fish Species — create_min_max","text":"","code":"create_min_max(life_history, minimum, maximum)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/create_min_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Minimum and Maximum Size Limits for Fish Species — create_min_max","text":"life_history data frame containing fish life history information. data frame include columns family, genus, species, length_max_cm (maximum length centimeters). Missing values length_max_cm filled using average lengths genus family levels available. minimum numeric value representing multiplier calculate minimum size limit. final minimum size limit millimeters computed minimum * length_max_mm. maximum numeric value representing multiplier calculate maximum size limit. final maximum size limit millimeters computed maximum * length_max_mm.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/create_min_max.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Minimum and Maximum Size Limits for Fish Species — create_min_max","text":"data frame following columns: family: Fish family. genus: Fish genus. species: Fish species. min_length_mm: Calculated minimum size limit millimeters. max_length_mm: Calculated maximum size limit millimeters. length_max_mm: Maximum length fish millimeters. Rows missing minimum length values excluded result.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/create_min_max.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Minimum and Maximum Size Limits for Fish Species — create_min_max","text":"","code":"# Assume australia_life_history is a data frame with appropriate columns life_history_with_min_max <- create_min_max(CheckEM::australia_life_history, minimum = 15, maximum = 85) #> Joining with `by = join_by(genus)`"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/expand_life_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand Life-History Data Frame for Species and Regions — expand_life_history","title":"Expand Life-History Data Frame for Species and Regions — expand_life_history","text":"function takes life-history data frame multiple marine regions species listed single cell, separated commas. expands data frame species-region combination gets row, marine regions translated full names.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/expand_life_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand Life-History Data Frame for Species and Regions — expand_life_history","text":"","code":"expand_life_history(dat)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/expand_life_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand Life-History Data Frame for Species and Regions — expand_life_history","text":"dat data frame containing life history information column marine regions. marine_region column contain comma-separated region codes (e.g., \"NW, N, CS\").","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/expand_life_history.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand Life-History Data Frame for Species and Regions — expand_life_history","text":"data frame species-region combination represented separate row. marine_region codes expanded full names (e.g., \"NW\" \"North-west\").","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/expand_life_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand Life-History Data Frame for Species and Regions — expand_life_history","text":"","code":"# Create a sample data frame with species and comma-separated marine regions dat <- data.frame(   species = c(\"Species A\", \"Species B\"),   marine_region = c(\"NW, N, CS\", \"TE, SE\") )  # Expand the data frame to have one row per species-region combination expanded_dat <- expand_life_history(dat)  # Check the result print(expanded_dat) #> # A tibble: 5 × 2 #>   species   marine_region  #>   <chr>     <chr>          #> 1 Species A North-west     #> 2 Species A North          #> 3 Species A Coral Sea      #> 4 Species B Temperate East #> 5 Species B South-east"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/find_lw.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Bayesian Length-Weight Equation from FishBase — find_lw","title":"Retrieve Bayesian Length-Weight Equation from FishBase — find_lw","text":"function retrieves Bayesian length-weight equation parameters given species FishBase. fetches data FishBase website parses Bayesian length-weight parameters including mean (m), standard deviation (sd), metric used.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/find_lw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Bayesian Length-Weight Equation from FishBase — find_lw","text":"","code":"find_lw(sp, mirror = \"us\")"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/find_lw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Bayesian Length-Weight Equation from FishBase — find_lw","text":"sp character string representing species name. species name provided appears FishBase, spaces replaced hyphens. mirror character string specifying FishBase mirror site use. Defaults \"us\" (FishBase USA). mirrors can specified needed.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/find_lw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Bayesian Length-Weight Equation from FishBase — find_lw","text":"data frame containing Bayesian length-weight parameters species. data frame includes following columns: species: species name. lwa_m: parameter length-weight equation (). lwa_sd: standard deviation parameter length-weight equation (). lwb_m: parameter length-weight equation (b). lwb_sd: standard deviation parameter length-weight equation (b). metric: metric used length measurement (e.g., \"based LWR estimates species & (Sub)family-body\"). internet connection species page retrieved, function returns NULL.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/find_lw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Bayesian Length-Weight Equation from FishBase — find_lw","text":"","code":"# Retrieve Bayesian length-weight parameters for a species lw_params <- find_lw(\"Lutjanus campechanus\") #> Timeout was reached: [www.fishbase.us] Operation timed out after 9881 milliseconds with 0 bytes received print(lw_params) #> NULL"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/find_tl.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Trophic Level and Standard Error from FishBase — find_tl","title":"Retrieve Trophic Level and Standard Error from FishBase — find_tl","text":"function retrieves trophic level standard error given species FishBase. fetches data FishBase website, extracts trophic level information, formats data frame.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/find_tl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Trophic Level and Standard Error from FishBase — find_tl","text":"","code":"find_tl(sp, mirror = \"us\")"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/find_tl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Trophic Level and Standard Error from FishBase — find_tl","text":"sp character string representing species name. species name provided appears FishBase, spaces replaced hyphens. mirror character string specifying FishBase mirror site use. Defaults \"us\" (FishBase USA). mirrors can specified needed.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/find_tl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Trophic Level and Standard Error from FishBase — find_tl","text":"data frame containing trophic level information species. data frame includes following columns: species: species name. trophic_level: trophic level species. se: standard error trophic level. metric: source used (provided) e.g. \"based food items\". internet connection, species page retrieved parsed, function returns NULL.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/find_tl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Trophic Level and Standard Error from FishBase — find_tl","text":"","code":"# Retrieve trophic level and standard error for a species tl_info <- find_tl(\"Lutjanus campechanus\") print(tl_info) #>                species trophic_level   se              metric #> 1 Lutjanus campechanus           3.9 0.72 based on food items"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_all_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve all Data from a synthesis using the GlobalArchive API — ga_api_all_data","title":"Retrieve all Data from a synthesis using the GlobalArchive API — ga_api_all_data","text":"function retrieves metadata, count, length data CheckEM synthesis, processes data, saves results RDS files specified directory given name. also returns processed data environment allows users add zeros species present directory exist, created, user informed.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_all_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve all Data from a synthesis using the GlobalArchive API — ga_api_all_data","text":"","code":"ga_api_all_data(token, synthesis_id, dir, include_zeros = FALSE)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_all_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve all Data from a synthesis using the GlobalArchive API — ga_api_all_data","text":"token character string representing GlobalArchive token API authentication. synthesis_id character string numeric value representing GlobalArchive synthesis ID data retrieved. dir character string specifying directory RDS files saved. include_zeros Either TRUE FALSE, like data include zeros species observed, warning: can create large datasets use lot og RAM","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_all_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve all Data from a synthesis using the GlobalArchive API — ga_api_all_data","text":"list containing metadata, count, length data frames.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_benthic_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Benthic Species List from the Global Archive API — ga_api_benthic_list","title":"Retrieve Benthic Species List from the Global Archive API — ga_api_benthic_list","text":"function retrieves list benthic species Global Archive API. makes API call specified endpoint using basic authentication, reads response Feather format, returns data data frame. resulting data frame cleaned renaming removing certain columns.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_benthic_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Benthic Species List from the Global Archive API — ga_api_benthic_list","text":"","code":"ga_api_benthic_list(token)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_benthic_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Benthic Species List from the Global Archive API — ga_api_benthic_list","text":"token character string representing GlobalArchive token API authentication.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_benthic_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Benthic Species List from the Global Archive API — ga_api_benthic_list","text":"data frame containing list benthic species. data frame includes columns species details, columns removed clarity.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_benthic_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Benthic Species List from the Global Archive API — ga_api_benthic_list","text":"","code":"if (FALSE) { # \\dontrun{ # Retrieve the benthic species list using API credentials species_list <- ga_api_benthic_list(\"your_username\", \"your_password\") print(species_list) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Count Data from the GlobalArchive API — ga_api_count","title":"Retrieve Count Data from the GlobalArchive API — ga_api_count","text":"function retrieves count data GlobalArchive synthesis using API call. allows include exclude life history information retrieved data processes data accordingly.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Count Data from the GlobalArchive API — ga_api_count","text":"","code":"ga_api_count(token, synthesis_id, include_life_history = TRUE)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Count Data from the GlobalArchive API — ga_api_count","text":"token character string representing GlobalArchive token API authentication. synthesis_id character string numeric value representing GlobalArchive synthesis ID count data retrieved. include_life_history logical value indicating whether life history information included retrieved data. Defaults TRUE. FALSE, basic species information included.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Count Data from the GlobalArchive API — ga_api_count","text":"data frame containing count data retrieved GlobalArchive API. data frame includes count data various subjects, optional life history details depending include_life_history parameter.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Count Data from the GlobalArchive API — ga_api_count","text":"","code":"if (FALSE) { # \\dontrun{ # Retrieve count data including life history information count_data <- ga_api_count(username = \"your_username\", password = \"your_password\",                             synthesis_id = \"your_synthesis_id\", include_life_history = TRUE)  # Retrieve count data without life history information count_data <- ga_api_count(username = \"your_username\", password = \"your_password\",                             synthesis_id = \"your_synthesis_id\", include_life_history = FALSE) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_habitat.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Habitat Data from the GlobalArchive API — ga_api_habitat","title":"Retrieve Habitat Data from the GlobalArchive API — ga_api_habitat","text":"function retrieves habitat data GlobalArchive synthesis using API call. processes data include relevant species information merging benthic species list.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_habitat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Habitat Data from the GlobalArchive API — ga_api_habitat","text":"","code":"ga_api_habitat(token, synthesis_id)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_habitat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Habitat Data from the GlobalArchive API — ga_api_habitat","text":"token character string representing GlobalArchive token API authentication. synthesis_id character string numeric value representing GlobalArchive synthesis ID habitat data retrieved.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_habitat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Habitat Data from the GlobalArchive API — ga_api_habitat","text":"data frame containing habitat data retrieved GlobalArchive API. data frame includes species information merged benthic species list.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_habitat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Habitat Data from the GlobalArchive API — ga_api_habitat","text":"","code":"if (FALSE) { # \\dontrun{ # Retrieve habitat metadata from a synthesis habitat <- ga_api_habitat(username = \"your_username\", password = \"your_password\",                                     synthesis_id = \"your_synthesis_id\") print(habitat) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Length Data from the GlobalArchive API — ga_api_length","title":"Retrieve Length Data from the GlobalArchive API — ga_api_length","text":"function retrieves length data associated specific synthesis GlobalArchive making API call. data can optionally include life history information species. data returned processed format species information joined based synthesis data.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Length Data from the GlobalArchive API — ga_api_length","text":"","code":"ga_api_length(token, synthesis_id, include_life_history = TRUE)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Length Data from the GlobalArchive API — ga_api_length","text":"token character string representing GlobalArchive token API authentication. synthesis_id character string numeric value representing GlobalArchive synthesis ID length data retrieved. include_life_history logical value indicating whether include life history data (default TRUE). FALSE, basic species information returned.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Length Data from the GlobalArchive API — ga_api_length","text":"data frame containing length data synthesis, optional life history information species data joined GlobalArchive. data frame includes following columns: australian_common_name: Common name species. family: family species. genus: genus species. species: species name. caab: CAAB (Codes Australian Aquatic Biota) code. length: recorded length. sample_url: URL sample GlobalArchive. other_columns: columns present Feather file removed.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Length Data from the GlobalArchive API — ga_api_length","text":"","code":"if (FALSE) { # \\dontrun{ # Fetch length data including life history length <- ga_api_length(\"your_username\", \"your_password\", synthesis_id = 1234)  # Fetch length data without life history length <- ga_api_length(\"your_username\", \"your_password\", synthesis_id = 1234, include_life_history = FALSE) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Metadata from the GlobalArchive API — ga_api_metadata","title":"Retrieve Metadata from the GlobalArchive API — ga_api_metadata","text":"function retrieves metadata associated specific synthesis GlobalArchive making API call. metadata includes geographic coordinates, processed separate latitude longitude columns.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Metadata from the GlobalArchive API — ga_api_metadata","text":"","code":"ga_api_metadata(token, synthesis_id)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Metadata from the GlobalArchive API — ga_api_metadata","text":"token character string representing GlobalArchive token API authentication. synthesis_id character string numeric value representing GlobalArchive synthesis ID metadata retrieved.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Metadata from the GlobalArchive API — ga_api_metadata","text":"data frame containing metadata synthesis, including processed coordinates relevant information. API request fails, function returns NULL prints status code. data frame includes following columns: TODO - brooke add columns latitude_dd: latitude decimal degrees. longitude_dd: longitude decimal degrees. sample_url: URL sample GlobalArchive. other_columns: columns present Feather file removed.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Metadata from the GlobalArchive API — ga_api_metadata","text":"","code":"if (FALSE) { # \\dontrun{ # Fetch metadata for a specific synthesis metadata <- ga_api_metadata(\"your_username\", \"your_password\", synthesis_id = 1234)  # Display the first few rows of metadata head(metadata) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_set_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Set GlobalArchive API Token — ga_api_set_token","title":"Set GlobalArchive API Token — ga_api_set_token","text":"function prompts user enter GlobalArchive API token, saves RDS file within \"secrets\" directory, optionally adds \"secrets\" directory .gitignore file function run inside Git repository.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_set_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set GlobalArchive API Token — ga_api_set_token","text":"","code":"ga_api_set_token()"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_set_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set GlobalArchive API Token — ga_api_set_token","text":"function performs following steps: Prompts user input GlobalArchive API token via console. Creates \"secrets\" directory current working directory already exist. Saves token RDS file named api_token.rds inside \"secrets\" directory. Checks current directory part Git repository (.e., contains .git folder). Git repository, function adds \"secrets/\" directory .gitignore file already listed.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_set_token.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set GlobalArchive API Token — ga_api_set_token","text":"function intended used projects involving GlobalArchive, sensitive information like API tokens committed version control. Ensure working directory set correctly running function.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_set_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set GlobalArchive API Token — ga_api_set_token","text":"","code":"if (FALSE) { # \\dontrun{   # Run the function to set a GlobalArchive API token   set_token() } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_species_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Species List from the Global Archive API — ga_api_species_list","title":"Retrieve Species List from the Global Archive API — ga_api_species_list","text":"function retrieves species list GlobalArchive making API call. data returned data frame relevant species information, excluding columns needed analysis.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_species_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Species List from the Global Archive API — ga_api_species_list","text":"","code":"ga_api_species_list(token)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_species_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Species List from the Global Archive API — ga_api_species_list","text":"token character string representing GlobalArchive token API authentication.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_species_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Species List from the Global Archive API — ga_api_species_list","text":"data frame containing species list GlobalArchive. data frame includes following columns: subject: URL identifier species GlobalArchive. australian_common_name: Common name species. family: family species. genus: genus species. species: species name. caab: CAAB (Codes Australian Aquatic Biota) code. other_columns: relevant columns included original dataset.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/ga_api_species_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Species List from the Global Archive API — ga_api_species_list","text":"","code":"if (FALSE) { # \\dontrun{ # Fetch the species list from GlobalArchive species_list <- ga_api_species_list(\"your_username\", \"your_password\")  # Display the first few rows of the species list head(species_list) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/has_special_characters.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a String Contains Special Characters — has_special_characters","title":"Check if a String Contains Special Characters — has_special_characters","text":"function checks whether given string contains special characters. Special characters defined character alphanumeric (letters numbers).","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/has_special_characters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a String Contains Special Characters — has_special_characters","text":"","code":"has_special_characters(string)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/has_special_characters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a String Contains Special Characters — has_special_characters","text":"string character string checked special characters.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/has_special_characters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a String Contains Special Characters — has_special_characters","text":"logical value: TRUE string contains special characters, FALSE otherwise.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/has_special_characters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a String Contains Special Characters — has_special_characters","text":"","code":"# Check if a string contains special characters has_special_characters(\"HelloWorld123\") # Returns FALSE #> [1] FALSE has_special_characters(\"Hello@World!\")  # Returns TRUE #> [1] TRUE"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/hdi_table.html","id":null,"dir":"Reference","previous_headings":"","what":"hdi_table — hdi_table","title":"hdi_table — hdi_table","text":"Generates summary table species data Highest Density Interval (HDI) statistics comparisons species-specific maximum lengths.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/hdi_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hdi_table — hdi_table","text":"","code":"hdi_table(species_data, max_lengths)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/hdi_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"hdi_table — hdi_table","text":"species_data dataframe species data, including columns family, genus, species, scientific_name, length_mm (length measurements millimeters). max_lengths dataframe species-specific maximum lengths. must include column scientific_name match species length_max_mm maximum length millimeters.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/hdi_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"hdi_table — hdi_table","text":"dataframe summarizing HDI statistics species, including: family Family species. genus Genus species. species Species name. scientific_name Scientific name species. species_length_max_mm Maximum length (millimeters) provided species-specific data. hdci_99_lower_bound Lower bound 99% HDI species' length measurements. hdci_99_upper_bound Upper bound 99% HDI species' length measurements. num_measurements Number individual length measurements (rows) species. highest_metric Indicates whether maximum length (FishBase) HDI upper bound higher. num_lengths_over_max count lengths exceed species-specific maximum length. num_lengths_over_hdi_upper count lengths exceed 99% HDI upper bound. num_lengths_smaller_hdi_lower count lengths smaller 99% HDI lower bound.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/hdi_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"hdi_table — hdi_table","text":"function calculates HDI statistics (99% interval) species' length data, compares statistics species-specific maximum lengths (provided separately), creates summary dataframe. summary includes family, genus, species, scientific name, species length max, HDI bounds, number individuals measured, metrics like number lengths exceeding max HDI upper bound. function first loops species species_data, calculates 99% HDI using ggdist::median_hdci() function, compares species' maximum length (max_lengths) HDI statistics. appends results species final dataframe.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/hdi_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"hdi_table — hdi_table","text":"","code":"# Example usage species_data <- data.frame(family = c(\"Acanthuridae\"), genus = c(\"Acanthurus\"),                            species = c(\"triostegus\"), scientific_name = c(\"Acanthurus triostegus\"),                            length_mm = c(120, 130, 125, 140, 135, 290, 200, 260, 150, 190, 280)) max_lengths <- data.frame(scientific_name = c(\"Acanthurus triostegus\"), length_max_mm = c(270))  hdi_table(species_data, max_lengths) #> Error in loadNamespace(x): there is no package called ‘ggdist’"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/load_rds_from_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an RDS File from a Private GitHub Repository — load_rds_from_github","title":"Load an RDS File from a Private GitHub Repository — load_rds_from_github","text":"function loads RDS file private GitHub repository. uses provided interactive GitHub Personal Access Token (PAT). PAT provided, function try retrieve using gitcreds prompt user enter manually. also checks user access repository provides instructions requesting access needed.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/load_rds_from_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an RDS File from a Private GitHub Repository — load_rds_from_github","text":"","code":"load_rds_from_github(url, pat = NULL)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/load_rds_from_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an RDS File from a Private GitHub Repository — load_rds_from_github","text":"url character string specifying raw URL RDS file private GitHub repository. pat character string containing GitHub Personal Access Token (PAT) access repository. provided, function attempt retrieve using gitcreds prompt user enter .","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/load_rds_from_github.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an RDS File from a Private GitHub Repository — load_rds_from_github","text":"content RDS file R object, NULL access denied file loaded.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/load_rds_from_github.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load an RDS File from a Private GitHub Repository — load_rds_from_github","text":"PAT provided, function attempt retrieve gitcreds. gitcreds provide PAT, user prompted enter one manually. function encounters 404 status code, inform user contact Brooke Gibbons brooke.gibbons@uwa.edu.au GitHub username request access repository.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/load_rds_from_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load an RDS File from a Private GitHub Repository — load_rds_from_github","text":"","code":"# Define the URL to the RDS file in your private GitHub repository rds_url <- \"https://raw.githubusercontent.com/GlobalArchiveManual/australia-synthesis-2024/main/data/tidy/australian-synthesis_covariates.RDS\"  # Call the function to load the RDS file data <- load_rds_from_github(rds_url) #> Error in GET(url, authenticate(\"\", pat, type = \"basic\")): could not find function \"GET\"  # Print or work with the data if (!is.null(data)) {   print(data) } #> function (..., list = character(), package = NULL, lib.loc = NULL,  #>     verbose = getOption(\"verbose\"), envir = .GlobalEnv, overwrite = TRUE)  #> { #>     fileExt <- function(x) { #>         db <- grepl(\"\\\\.[^.]+\\\\.(gz|bz2|xz)$\", x) #>         ans <- sub(\".*\\\\.\", \"\", x) #>         ans[db] <- sub(\".*\\\\.([^.]+\\\\.)(gz|bz2|xz)$\", \"\\\\1\\\\2\",  #>             x[db]) #>         ans #>     } #>     my_read_table <- function(...) { #>         lcc <- Sys.getlocale(\"LC_COLLATE\") #>         on.exit(Sys.setlocale(\"LC_COLLATE\", lcc)) #>         Sys.setlocale(\"LC_COLLATE\", \"C\") #>         read.table(...) #>     } #>     stopifnot(is.character(list)) #>     names <- c(as.character(substitute(list(...))[-1L]), list) #>     if (!is.null(package)) { #>         if (!is.character(package))  #>             stop(\"'package' must be a character vector or NULL\") #>     } #>     paths <- find.package(package, lib.loc, verbose = verbose) #>     if (is.null(lib.loc))  #>         paths <- c(path.package(package, TRUE), if (!length(package)) getwd(),  #>             paths) #>     paths <- unique(normalizePath(paths[file.exists(paths)])) #>     paths <- paths[dir.exists(file.path(paths, \"data\"))] #>     dataExts <- tools:::.make_file_exts(\"data\") #>     if (length(names) == 0L) { #>         db <- matrix(character(), nrow = 0L, ncol = 4L) #>         for (path in paths) { #>             entries <- NULL #>             packageName <- if (file_test(\"-f\", file.path(path,  #>                 \"DESCRIPTION\")))  #>                 basename(path) #>             else \".\" #>             if (file_test(\"-f\", INDEX <- file.path(path, \"Meta\",  #>                 \"data.rds\"))) { #>                 entries <- readRDS(INDEX) #>             } #>             else { #>                 dataDir <- file.path(path, \"data\") #>                 entries <- tools::list_files_with_type(dataDir,  #>                   \"data\") #>                 if (length(entries)) { #>                   entries <- unique(tools::file_path_sans_ext(basename(entries))) #>                   entries <- cbind(entries, \"\") #>                 } #>             } #>             if (NROW(entries)) { #>                 if (is.matrix(entries) && ncol(entries) == 2L)  #>                   db <- rbind(db, cbind(packageName, dirname(path),  #>                     entries)) #>                 else warning(gettextf(\"data index for package %s is invalid and will be ignored\",  #>                   sQuote(packageName)), domain = NA, call. = FALSE) #>             } #>         } #>         colnames(db) <- c(\"Package\", \"LibPath\", \"Item\", \"Title\") #>         footer <- if (missing(package))  #>             paste0(\"Use \", sQuote(paste(\"data(package =\", \".packages(all.available = TRUE))\")),  #>                 \"\\n\", \"to list the data sets in all *available* packages.\") #>         else NULL #>         y <- list(title = \"Data sets\", header = NULL, results = db,  #>             footer = footer) #>         class(y) <- \"packageIQR\" #>         return(y) #>     } #>     paths <- file.path(paths, \"data\") #>     for (name in names) { #>         found <- FALSE #>         for (p in paths) { #>             tmp_env <- if (overwrite)  #>                 envir #>             else new.env() #>             if (file_test(\"-f\", file.path(p, \"Rdata.rds\"))) { #>                 rds <- readRDS(file.path(p, \"Rdata.rds\")) #>                 if (name %in% names(rds)) { #>                   found <- TRUE #>                   if (verbose)  #>                     message(sprintf(\"name=%s:\\t found in Rdata.rds\",  #>                       name), domain = NA) #>                   thispkg <- sub(\".*/([^/]*)/data$\", \"\\\\1\", p) #>                   thispkg <- sub(\"_.*$\", \"\", thispkg) #>                   thispkg <- paste0(\"package:\", thispkg) #>                   objs <- rds[[name]] #>                   lazyLoad(file.path(p, \"Rdata\"), envir = tmp_env,  #>                     filter = function(x) x %in% objs) #>                   break #>                 } #>                 else if (verbose)  #>                   message(sprintf(\"name=%s:\\t NOT found in names() of Rdata.rds, i.e.,\\n\\t%s\\n\",  #>                     name, paste(names(rds), collapse = \",\")),  #>                     domain = NA) #>             } #>             files <- list.files(p, full.names = TRUE) #>             files <- files[grep(name, files, fixed = TRUE)] #>             if (length(files) > 1L) { #>                 o <- match(fileExt(files), dataExts, nomatch = 100L) #>                 paths0 <- dirname(files) #>                 paths0 <- factor(paths0, levels = unique(paths0)) #>                 files <- files[order(paths0, o)] #>             } #>             if (length(files)) { #>                 for (file in files) { #>                   if (verbose)  #>                     message(\"name=\", name, \":\\t file= ...\", .Platform$file.sep,  #>                       basename(file), \"::\\t\", appendLF = FALSE,  #>                       domain = NA) #>                   ext <- fileExt(file) #>                   if (basename(file) != paste0(name, \".\", ext))  #>                     found <- FALSE #>                   else { #>                     found <- TRUE #>                     switch(ext, R = , r = { #>                       library(\"utils\") #>                       sys.source(file, chdir = TRUE, envir = tmp_env) #>                     }, RData = , rdata = , rda = load(file, envir = tmp_env),  #>                       TXT = , txt = , tab = , tab.gz = , tab.bz2 = ,  #>                       tab.xz = , txt.gz = , txt.bz2 = , txt.xz = assign(name,  #>                         my_read_table(file, header = TRUE, as.is = FALSE),  #>                         envir = tmp_env), CSV = , csv = , csv.gz = ,  #>                       csv.bz2 = , csv.xz = assign(name, my_read_table(file,  #>                         header = TRUE, sep = \";\", as.is = FALSE),  #>                         envir = tmp_env), found <- FALSE) #>                   } #>                   if (found)  #>                     break #>                 } #>                 if (verbose)  #>                   message(if (!found)  #>                     \"*NOT* \", \"found\", domain = NA) #>             } #>             if (found)  #>                 break #>         } #>         if (!found) { #>             warning(gettextf(\"data set %s not found\", sQuote(name)),  #>                 domain = NA) #>         } #>         else if (!overwrite) { #>             for (o in ls(envir = tmp_env, all.names = TRUE)) { #>                 if (exists(o, envir = envir, inherits = FALSE))  #>                   warning(gettextf(\"an object named %s already exists and will not be overwritten\",  #>                     sQuote(o))) #>                 else assign(o, get(o, envir = tmp_env, inherits = FALSE),  #>                   envir = envir) #>             } #>             rm(tmp_env) #>         } #>     } #>     invisible(names) #> } #> <bytecode: 0x55b3cbf480e8> #> <environment: namespace:utils>"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/plot_species_hdi.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot length frequency histogram with High Density Interval — plot_species_hdi","title":"Plot length frequency histogram with High Density Interval — plot_species_hdi","text":"function takes data frame standardises column names converting lower case, replacing special characters underscores, ensuring names syntactically valid R names.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/plot_species_hdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot length frequency histogram with High Density Interval — plot_species_hdi","text":"","code":"plot_species_hdi(species_data, max_lengths, dir)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/plot_species_hdi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot length frequency histogram with High Density Interval — plot_species_hdi","text":"species_data data frame length information one species max_lengths data frame lmaximum length information dir Directory plots saved","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/plot_species_hdi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot length frequency histogram with High Density Interval — plot_species_hdi","text":"Saves plots directory","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/plot_transformations.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Basic Transformations of Predictor Variables for GAM Modelling — plot_transformations","title":"Plot Basic Transformations of Predictor Variables for GAM Modelling — plot_transformations","text":"function generates diagnostic plots visualise distribution predictor variables effects basic transformations (square root log transformations) variables. creates scatter plots histograms raw, square root, log-transformed data. function useful exploring suitability different transformations fitting Generalized Additive Model (GAM).","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/plot_transformations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Basic Transformations of Predictor Variables for GAM Modelling — plot_transformations","text":"","code":"plot_transformations(pred.vars, dat)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/plot_transformations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Basic Transformations of Predictor Variables for GAM Modelling — plot_transformations","text":"pred.vars character vector predictor variable names plotted. dat data frame containing predictor variables grouping variable, either 'opcode' 'sample', used scatter plots.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/plot_transformations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Basic Transformations of Predictor Variables for GAM Modelling — plot_transformations","text":"function generates prints diagnostic plots return value.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/plot_transformations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Basic Transformations of Predictor Variables for GAM Modelling — plot_transformations","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'dat' is a data frame containing the predictor variables and 'opcode' or 'sample' column plot_transformations(pred.vars = c(\"var1\", \"var2\"), dat = dat) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_TM.html","id":null,"dir":"Reference","previous_headings":"","what":"Read .txt Exports from SeaGIS TransectMeasure — read_TM","title":"Read .txt Exports from SeaGIS TransectMeasure — read_TM","text":"function reads processes .txt files exported SeaGIS TransectMeasure located specified directory. files contain data dot point measurements, read single dataframe column campaign ID specified sample type (either \"opcode\" \"period\").","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_TM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read .txt Exports from SeaGIS TransectMeasure — read_TM","text":"","code":"read_TM(dir, sample)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_TM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read .txt Exports from SeaGIS TransectMeasure — read_TM","text":"dir directory .txt files saved. sample character string indicating sample type; either \"opcode\" \"period\".","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_TM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read .txt Exports from SeaGIS TransectMeasure — read_TM","text":"dataframe containing combined data .txt files specified directory, including column sample type.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_TM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read .txt Exports from SeaGIS TransectMeasure — read_TM","text":"","code":"if (FALSE) { # \\dontrun{ # To read .txt files with sample recorded as \"opcode\" data <- read_TM(\"path/to/directory\", sample = \"opcode\")  # To read .txt files with sample recorded as \"period\" data <- read_TM(\"path/to/directory\", sample = \"period\") } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Count Data from Generic Count Data (_Count.csv) — read_counts","title":"Read Count Data from Generic Count Data (_Count.csv) — read_counts","text":"function reads processes point count data Generic files either CSV TXT format. can handle BRUVs (Baited Remote Underwater Video Systems) DOVs (Diver Operated Video) methods, ensuring data correctly cleaned formatted analysis.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Count Data from Generic Count Data (_Count.csv) — read_counts","text":"","code":"read_counts(dir, method = \"BRUVs\", recursive = FALSE)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Count Data from Generic Count Data (_Count.csv) — read_counts","text":"dir character string specifying directory containing count files. method character string specifying method used: either \"BRUVs\" \"DOVs\". Defaults \"BRUVs\". recursive logical value indicating whether read files recursively directory. Defaults FALSE.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Count Data from Generic Count Data (_Count.csv) — read_counts","text":"data frame containing cleaned formatted count data specified files.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Count Data from Generic Count Data (_Count.csv) — read_counts","text":"","code":"if (FALSE) { # \\dontrun{ # Read all count files from the directory for BRUVs method counts_data <- read_counts(dir = \"path/to/directory\", method = \"BRUVs\", recursive = TRUE)  # Read all count files from the directory for DOVs method counts_data <- read_counts(dir = \"path/to/directory\", method = \"DOVs\", recursive = TRUE) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_em_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Read EventMeasure length and 3D point data (_3DPoints.txt & _Lengths.txt) — read_em_length","title":"Read EventMeasure length and 3D point data (_3DPoints.txt & _Lengths.txt) — read_em_length","text":"function reads length 3D point information EventMeasure export files (_3DPoints.txt _Lengths.txt) specified directory processes single dataframe. dataframe includes details length, species, sample, additional metadata.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_em_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read EventMeasure length and 3D point data (_3DPoints.txt & _Lengths.txt) — read_em_length","text":"","code":"read_em_length(dir, method = \"BRUVs\", recursive = FALSE)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_em_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read EventMeasure length and 3D point data (_3DPoints.txt & _Lengths.txt) — read_em_length","text":"dir directory EventMeasure length data files located. method character string indicating method used (\"BRUVs\" \"DOVs\"). Default \"BRUVs\". recursive Logical, whether search files recursively subdirectories. Default FALSE.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_em_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read EventMeasure length and 3D point data (_3DPoints.txt & _Lengths.txt) — read_em_length","text":"data frame containing length data specified files, standardised column names formats.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_em_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read EventMeasure length and 3D point data (_3DPoints.txt & _Lengths.txt) — read_em_length","text":"","code":"if (FALSE) { # \\dontrun{ # To read EventMeasure length data from a directory using the BRUVs method length_data <- read_em_length(\"path/to/directory\")  # To read length data from a directory recursively using the DOVs method length_data <- read_em_length(\"path/to/directory\", method = \"DOVs\", recursive = TRUE) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_gen_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Read ","title":"Read ","text":"function reads \"Generic\" length data files (either .csv .txt) specified directory processes single data frame. data frame contains information campaignID, sample, length (mm) species information.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_gen_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read ","text":"","code":"read_gen_length(dir, method = \"BRUVs\", recursive = FALSE)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_gen_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read ","text":"dir directory length data files saved. method character string indicating method used (\"BRUVs\" \"DOVs\"). Default \"BRUVs\". recursive Logical, whether search files recursively subdirectories. Default FALSE.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_gen_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read ","text":"data frame containing length data specified files, standardised column names formats.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_gen_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read ","text":"","code":"if (FALSE) { # \\dontrun{ # To read length data from a directory using the BRUVs method length_data <- read_gen_length(\"path/to/directory\")  # To read length data from a directory recursively using the DOVs method length_data <- read_gen_length(\"path/to/directory\", method = \"DOVs\", recursive = TRUE) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Metadata — read_metadata","title":"Read Metadata — read_metadata","text":"function reads Metadata GlobalArchive format (.csv files) specified directory processes single dataframe. dataframe includes campaignID, sample, depth_m, time, coordinates important information collected deploying annotating stere-video imagery.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Metadata — read_metadata","text":"","code":"read_metadata(dir, method = \"BRUVs\", recursive = FALSE)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Metadata — read_metadata","text":"dir directory .csv files saved. method character string indicating method used (\"BRUVs\" \"DOVs\"). Default \"BRUVs\". recursive Logical, whether search files recursively subdirectories. Default FALSE.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Metadata — read_metadata","text":"data frame containing metadata specified files, standardised columns campaignID, sample, various metadata details.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Metadata — read_metadata","text":"","code":"if (FALSE) { # \\dontrun{ # To read metadata from a directory using the BRUVs method metadata <- read_metadata(\"path/to/directory\")  # To read metadata from a directory recursively using the DOVs method metadata <- read_metadata(\"path/to/directory\", method = \"DOVs\", recursive = TRUE) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Period Data from EventMeasure files (_Period.txt) — read_periods","title":"Read Period Data from EventMeasure files (_Period.txt) — read_periods","text":"function reads EventMeasure period data files (_Period.txt) specified directory processes single dataframe. dataframe contains period annotations, including columns campaignID, sample, relevant information.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Period Data from EventMeasure files (_Period.txt) — read_periods","text":"","code":"read_periods(dir, method = \"BRUVs\", recursive = FALSE)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Period Data from EventMeasure files (_Period.txt) — read_periods","text":"dir directory .txt files saved. method character string indicating method used (\"BRUVs\" \"DOVs\"). Default \"BRUVs\". recursive Logical, whether search files recursively subdirectories. Default FALSE.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Period Data from EventMeasure files (_Period.txt) — read_periods","text":"data frame containing period annotations specified files, standardised columns campaign ID, sample, opcode, period, start time, end time, whether end time.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_periods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Period Data from EventMeasure files (_Period.txt) — read_periods","text":"","code":"if (FALSE) { # \\dontrun{ # To read period data from a directory using the BRUVs method periods_data <- read_periods(\"path/to/directory\")  # To read period data from a directory recursively using the DOVs method periods_data <- read_periods(\"path/to/directory\", method = \"DOVs\", recursive = TRUE) } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Point Data from EventMeasure files (_Points.txt) — read_points","title":"Read Point Data from EventMeasure files (_Points.txt) — read_points","text":"function reads EventMeasure point data files (_Points.txt) specified directory processes single data frame. data frame contains point annotations, including columns campaignID, sample, relevant information.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Point Data from EventMeasure files (_Points.txt) — read_points","text":"","code":"read_points(dir, recursive = FALSE, method = \"BRUVs\")"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Point Data from EventMeasure files (_Points.txt) — read_points","text":"dir directory .txt files saved. recursive Logical, whether search files recursively subdirectories. Default FALSE. method character string indicating method used (\"BRUVs\" \"DOVs\"). Default \"BRUVs\".","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Point Data from EventMeasure files (_Points.txt) — read_points","text":"data frame containing point annotations specified files, standardised columns campaign ID, sample, family, genus, species, number, period.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/read_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Point Data from EventMeasure files (_Points.txt) — read_points","text":"","code":"if (FALSE) { # \\dontrun{ # To read point data from a directory using the BRUVs method points_data <- read_points(\"path/to/directory\")  # To read point data from a directory recursively using the DOVs method points_data <- read_points(\"path/to/directory\", recursive = TRUE, method = \"DOVs\") } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/runCheckEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the CheckEM Shiny App Locally — runCheckEM","title":"Run the CheckEM Shiny App Locally — runCheckEM","text":"function launches local version CheckEM Shiny app default web browser. app allows users perform quality control checks metadata annotations fish benthic stereo-imagery datasets.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/runCheckEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the CheckEM Shiny App Locally — runCheckEM","text":"","code":"runCheckEM()"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/runCheckEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the CheckEM Shiny App Locally — runCheckEM","text":"Launches CheckEM Shiny app web browser.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/runCheckEM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the CheckEM Shiny App Locally — runCheckEM","text":"","code":"if (FALSE) { # \\dontrun{ # To run the CheckEM Shiny app locally CheckEM::runCheckEM() } # }"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/standardize_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Column Names and Types in a Tibble — standardize_tibble","title":"Standardize Column Names and Types in a Tibble — standardize_tibble","text":"function standardizes column names types given tibble. renames columns consistent set names: \"aphiaid\", \"scientific_name\", \"authority\", \"status\". tibble empty, also ensures \"scientific_name\" column type character.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/standardize_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Column Names and Types in a Tibble — standardize_tibble","text":"","code":"standardize_tibble(tibble)"},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/standardize_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Column Names and Types in a Tibble — standardize_tibble","text":"tibble tibble data frame standardize.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/standardize_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Column Names and Types in a Tibble — standardize_tibble","text":"tibble standardized column names types, NULL input tibble empty.","code":""},{"path":"https://globalarchivemanual.github.io/CheckEM/reference/standardize_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize Column Names and Types in a Tibble — standardize_tibble","text":"","code":"if (FALSE) { # \\dontrun{ # Create a sample tibble sample_data <- tibble::tibble(aphiaid = c(1, 2), sci_name = c(\"Species A\", \"Species B\"),                                auth = c(\"Author A\", \"Author B\"), stat = c(\"Valid\", \"Invalid\"))  # Standardize the tibble standardized_data <- standardize_tibble(sample_data) print(standardized_data) } # }"}]
